syntax = "proto2";

import "TSPMessages.proto";
import "TSKArchives.proto";
import "TSSArchives.proto";
import "TSDArchives.proto";
import "TSWPArchives.proto";
import "TSAArchives.proto";
import "TSCHArchives.proto";
package KN;

message AnimationAttributesArchive {
  optional string animation_type = 1;
  optional string effect = 2;
  optional double duration = 3;
  optional uint32 direction = 4;
  optional double delay = 5;
  optional bool is_automatic = 6;
  optional .TSP.Color color = 7;
  optional .TSD.PathSourceArchive custom_effect_timing_curve_1 = 8;
  optional .TSD.PathSourceArchive custom_effect_timing_curve_2 = 9;
  optional .TSD.PathSourceArchive custom_effect_timing_curve_3 = 10;
  optional uint32 random_number_seed = 11;
  optional double custom_detail = 12;
  optional string custom_effect_timing_curve_theme_name_1 = 13;
  optional string custom_effect_timing_curve_theme_name_2 = 14;
  optional string custom_effect_timing_curve_theme_name_3 = 15;
  optional bool writing_direction_is_rtl = 16;
}

message TransitionAttributesArchive {
  enum TransitionCustomAttributesTimingCurveType {
    TransitionCustomAttributesTimingCurveTypeLinear = 1;
    TransitionCustomAttributesTimingCurveTypeEaseIn = 2;
    TransitionCustomAttributesTimingCurveTypeEaseOut = 3;
    TransitionCustomAttributesTimingCurveTypeEaseInEaseOut = 4;
    TransitionCustomAttributesTimingCurveTypeCustom = 5;
  }
  enum TransitionCustomAttributesTextDeliveryType {
    TransitionCustomAttributesTextDeliveryTypeByObject = 1;
    TransitionCustomAttributesTextDeliveryTypeByWord = 2;
    TransitionCustomAttributesTextDeliveryTypeByCharacter = 3;
    TransitionCustomAttributesTextDeliveryTypeByLine = 4;
  }
  optional .KN.AnimationAttributesArchive animationAttributes = 8;
  optional float custom_twist = 9;
  optional uint32 custom_mosaic_size = 10;
  optional uint32 custom_mosaic_type = 11;
  optional bool custom_bounce = 12;
  optional bool custom_magic_move_fade_unmatched_objects = 13;
  optional .KN.TransitionAttributesArchive.TransitionCustomAttributesTimingCurveType custom_timing_curve = 15;
  optional .KN.TransitionAttributesArchive.TransitionCustomAttributesTextDeliveryType custom_text_delivery_type = 16;
  optional bool custom_motion_blur = 17;
  optional float custom_travel_distance = 18;
  optional string database_animation_type = 1 [deprecated = true];
  optional string database_effect = 2 [deprecated = true];
  optional double database_duration = 3 [deprecated = true];
  optional uint32 database_direction = 4 [deprecated = true];
  optional float database_delay = 5 [deprecated = true];
  optional bool database_is_automatic = 6 [deprecated = true];
  optional .TSP.Color database_color = 7 [deprecated = true];
}

message TransitionArchive {
  required .KN.TransitionAttributesArchive attributes = 2;
}

message BuildChunkArchive {
  optional .TSP.Reference build = 1;
  optional uint32 index = 2 [deprecated = true];
  optional double delay = 3;
  optional double duration = 4;
  optional bool automatic = 5;
  optional bool referent = 6;
  optional .KN.BuildChunkIdentifierArchive build_chunk_identifier = 7;
  optional .TSP.UUID build_id = 8;
}

message BuildChunkIdentifierArchive {
  optional .TSP.UUID build_id = 1;
  optional int32 build_chunk_id = 2;
}

message BuildAttributeValueArchive {
  enum BuildAttributeValueType {
    k_integer = 0;
    k_double = 2;
    k_bool = 3;
    k_string = 4;
    k_path_source = 5;
    k_color = 6;
  }
  optional uint32 integer_value = 1;
  optional double double_value = 2;
  optional bool bool_value = 3;
  optional string string_value = 4;
  optional .TSD.PathSourceArchive path_source_value = 5;
  optional .TSP.Color color_value = 6;
  optional .KN.BuildAttributeValueArchive.BuildAttributeValueType type = 7;
}

message BuildAttributeTupleArchive {
  optional string property = 1;
  optional .KN.BuildAttributeValueArchive value = 2;
  optional .TSP.UUID build_id = 3;
  optional .KN.BuildChunkIdentifierArchive build_chunk_identifier = 4;
}

message BuildAttributesArchive {
  enum BuildAttributesAcceleration {
    kNone = 0;
    kEaseIn = 1;
    kEaseOut = 2;
    kEaseBoth = 3;
    kCustom = 4;
  }
  enum BuildAttributesRotationDirection {
    kClockwise = 31;
    kCounterclockwise = 32;
  }
  enum BuildAttributesCurveStyle {
    kStraight = 0;
    kCurved = 1;
  }
  enum BuildAttributesTextDelivery {
    kTextDeliveryUndefined = 0;
    kTextDeliveryByObject = 1;
    kTextDeliveryByWord = 2;
    kTextDeliveryByCharacter = 3;
    kTextDeliveryByLine = 4;
  }
  enum BuildAttributesDeliveryOption {
    kDeliveryOptionUndefined = 0;
    kDeliveryOptionForward = 1;
    kDeliveryOptionBackward = 2;
    kDeliveryOptionFromCenter = 3;
    kDeliveryOptionFromEdges = 4;
    kDeliveryOptionRandom = 5;
  }
  enum ActionBuildAttributesJiggleIntensity {
    kJiggleIntensitySmall = 0;
    kJiggleIntensityMedium = 1;
    kJiggleIntensityLarge = 2;
  }
  optional .KN.AnimationAttributesArchive animationAttributes = 18;
  optional uint32 eventTrigger = 4;
  optional double delayAutomaticAfter = 6 [deprecated = true];
  optional double delayAutomaticWith = 7 [deprecated = true];
  optional .KN.BuildAttributesArchive.BuildAttributesCurveStyle curveStyle = 14;
  optional double ChartRotation3D = 17;
  optional uint32 startOffset = 27;
  optional uint32 endOffset = 28;
  optional double action_rotationAngle = 9;
  optional .KN.BuildAttributesArchive.BuildAttributesRotationDirection action_rotationDirection = 10;
  optional double action_scaleSize = 11;
  optional double action_colorAlpha = 12;
  optional .KN.BuildAttributesArchive.BuildAttributesAcceleration action_acceleration = 13;
  optional .TSD.PathSourceArchive action_motionPathSource = 22;
  optional bool custom_bounce = 19;
  optional .KN.BuildAttributesArchive.BuildAttributesTextDelivery custom_textDelivery = 20;
  optional .KN.BuildAttributesArchive.BuildAttributesDeliveryOption custom_deliveryOption = 21;
  optional bool custom_action_decay = 23;
  optional uint32 custom_action_repeatCount = 24;
  optional double custom_action_scale = 25;
  optional .KN.BuildAttributesArchive.ActionBuildAttributesJiggleIntensity custom_action_jiggleIntensity = 26;
  optional bool custom_motion_blur = 29;
  optional bool custom_include_endpoints = 30;
  optional bool custom_shine = 33;
  optional double custom_scale_amount = 34;
  optional double custom_travel_distance = 35;
  optional bool custom_cursor = 36;
  optional bool custom_align_to_path = 37;
  optional string database_animationType = 1 [deprecated = true];
  optional string database_effect = 2 [deprecated = true];
  optional uint32 database_direction = 3 [deprecated = true];
  optional double database_delay = 5 [deprecated = true];
  optional double database_duration = 8 [deprecated = true];
  optional .TSP.Color database_color = 16 [deprecated = true];
  optional string motionPathString = 15 [deprecated = true];
}

message BuildArchive {
  optional .TSP.Reference drawable = 1;
  required string delivery = 2;
  optional double duration = 3 [deprecated = true];
  required .KN.BuildAttributesArchive attributes = 4;
  optional int32 chunk_id_seed = 5;
}

message PlaceholderArchive {
  enum Kind {
    kKindPlaceholder = 0;
    kKindSlideNumberPlaceholder = 1;
    kKindTitlePlaceholder = 2;
    kKindBodyPlaceholder = 3;
    kKindObjectPlaceholder = 4;
  }
  required .TSWP.ShapeInfoArchive super = 1;
  optional .KN.PlaceholderArchive.Kind kind = 2 [default = kKindPlaceholder];
}

message NoteArchive {
  required .TSP.Reference containedStorage = 1;
}

message ClassicStylesheetRecordArchive {
  repeated .TSS.StylesheetArchive.IdentifiedStyleEntry identifier_to_style_map = 1;
  optional .TSP.Reference deprecated_theme = 2 [deprecated = true];
}

message ClassicThemeRecordArchive {
  optional string uuid = 1;
  optional .TSP.Reference stylesheetRecord = 2;
  repeated .TSP.Reference templates = 3;
}

message SlideArchive {
  message SageTagMapEntry {
    required string tag = 1;
    required .TSP.Reference info = 2;
  }
  message InstructionalTextMap {
    message InstructionalTextMapEntry {
      optional .TSP.Reference info = 1;
      required string instructional_text = 2;
    }
    repeated .KN.SlideArchive.InstructionalTextMap.InstructionalTextMapEntry instructional_text_for_infos = 1;
  }
  required .TSP.Reference style = 1;
  repeated .TSP.Reference builds = 2;
  repeated .KN.BuildChunkArchive buildChunkArchives = 3 [deprecated = true];
  repeated .TSP.Reference buildChunks = 43;
  required .KN.TransitionArchive transition = 4;
  optional .TSP.Reference titlePlaceholder = 5;
  optional .TSP.Reference bodyPlaceholder = 6;
  optional .TSP.Reference objectPlaceholder = 30;
  optional .TSP.Reference slideNumberPlaceholder = 20;
  repeated .TSP.Reference owned_drawables = 7;
  repeated .TSP.Reference drawables_z_order = 42;
  repeated .KN.SlideArchive.SageTagMapEntry sage_tag_to_info_map = 28;
  optional .KN.SlideArchive.InstructionalTextMap instructional_text_map = 45;
  optional string name = 10;
  optional .TSD.GeometryArchive titlePlaceholderGeometry = 11;
  optional uint32 titlePlaceholderShapeStyleIndex = 12;
  optional uint32 titlePlaceholderTextStyleIndex = 13;
  optional .TSWP.ShapeStylePropertiesArchive titleLayoutProperties = 24;
  optional .TSD.GeometryArchive bodyPlaceholderGeometry = 14;
  optional uint32 bodyPlaceholderShapeStyleIndex = 15;
  optional uint32 bodyPlaceholderTextStyleIndex = 16;
  optional .TSWP.ShapeStylePropertiesArchive bodyLayoutProperties = 25;
  optional .TSD.GeometryArchive slideNumberPlaceholderGeometry = 21;
  optional uint32 slideNumberPlaceholderShapeStyleIndex = 22;
  optional uint32 slideNumberPlaceholderTextStyleIndex = 23;
  optional .TSWP.ShapeStylePropertiesArchive slideNumberLayoutProperties = 26;
  optional .TSP.Reference classicStylesheetRecord = 29;
  repeated .TSP.Reference bodyParagraphStyles = 31;
  repeated .TSP.Reference bodyListStyles = 35;
  optional string thumbnailTextForTitlePlaceholder = 37;
  optional string thumbnailTextForBodyPlaceholder = 38;
  optional bool slide_objects_layer_with_template = 41 [default = false];
  optional .TSP.Reference template_slide = 17;
  repeated .TSD.GuideArchive staticGuides = 18;
  optional .TSP.Reference userDefinedGuideStorage = 36;
  required bool inDocument = 19;
  optional .TSP.Reference note = 27;
  repeated .TSP.Reference infos_using_object_placeholder_geometry = 44;
  optional bool deprecated_objectPlaceholderVisibleForExport = 34;
  optional .TSP.Reference info_using_object_placeholder_geometry = 39;
  optional bool info_using_object_placeholder_geometry_matches_object_placeholder_geometry = 40;
}

message SlideNodeArchive {
  message SlideSpecificHyperlinkMapEntry {
    required string slideNodeIDString = 1;
    repeated string infoOrStorageIDString = 2;
  }
  repeated .TSP.Reference children = 1;
  optional .TSP.Reference slide = 2;
  optional uint32 depth = 21 [default = 1];
  repeated .TSP.DataReference thumbnails = 16;
  repeated .TSP.Size thumbnailSizes = 10;
  optional bool thumbnailsAreDirty = 14;
  repeated string digests_for_datas_needing_download_for_thumbnail = 25;
  required bool isHidden = 4;
  optional bool isCollapsed = 5 [deprecated = true];
  optional bool isCollapsedInOutlineView = 17 [deprecated = true];
  optional bool hasBodyInOutlineView = 19 [deprecated = true];
  required bool hasBuilds = 6 [deprecated = true];
  required bool hasTransition = 7;
  optional bool hasNote = 8;
  optional bool isSlideNumberVisible = 18 [default = false];
  optional string uniqueIdentifier = 11 [deprecated = true];
  optional string copyFromSlideIdentifier = 12;
  optional uint32 slideSpecificHyperlinkCount = 13 [deprecated = true];
  optional uint32 build_event_count = 15;
  optional uint32 build_event_count_cache_version = 26;
  optional bool build_event_count_is_up_to_date = 22 [deprecated = true];
  optional bool has_explicit_builds = 20;
  optional uint32 has_explicit_builds_cache_version = 27;
  optional bool has_explicit_builds_is_up_to_date = 23 [deprecated = true];
  repeated .KN.SlideNodeArchive.SlideSpecificHyperlinkMapEntry slideSpecificHyperlinkMap = 24;
  optional bool has_background_alpha = 28;
  optional .TSP.Reference database_thumbnail = 3 [deprecated = true];
  repeated .TSP.Reference database_thumbnails = 9 [deprecated = true];
}

message DesktopUILayoutArchive {
  enum SidebarViewMode {
    kSidebarViewModeNavigator = 0;
    kSidebarViewModeOutline = 1;
  }
  enum InspectorPaneViewMode {
    kInspectorPaneViewModeFormat = 0;
    kInspectorPaneViewModeAnimate = 1;
    kInspectorPaneViewModeSetup = 2;
  }
  optional bool sidebar_visible = 1;
  optional .KN.DesktopUILayoutArchive.SidebarViewMode sidebar_view_mode = 2;
  optional bool notes_visible = 3;
  optional bool light_table_visible = 5;
  optional bool inspector_pane_visible = 6 [default = true];
  optional .KN.DesktopUILayoutArchive.InspectorPaneViewMode inspector_pane_view_mode = 7 [default = kInspectorPaneViewModeFormat];
  optional bool showing_template_slides = 8;
  optional bool inspector_pane_autohidden = 9;
  optional bool element_list_visible = 10;
}

message UIStateArchive {
  optional .TSP.Reference slideNodeToEdit = 1 [deprecated = true];
  optional .TSP.Reference deprecated_template_slide_node_to_apply = 2;
  optional .TSP.Size deprecated_slideThumbnailSize = 3;
  optional float canvasViewScale = 4;
  optional .TSP.Point canvasOffset = 5;
  repeated .TSP.Reference selectedSlideNodes = 6 [deprecated = true];
  optional float iPhoneCanvasViewScale = 7 [deprecated = true];
  optional .TSP.Point iPhoneCanvasOffset = 8 [deprecated = true];
  optional float iPhone568CanvasViewScale = 9 [deprecated = true];
  optional .TSP.Point iPhone568CanvasOffset = 10 [deprecated = true];
  optional .TSP.Reference desktop_ui_layout = 11;
  optional bool desktop_slide_view_content_fits_window = 12;
  optional float desktop_canvas_view_scale = 13;
  optional .TSP.Point desktop_canvas_offset = 21;
  optional float light_table_zoom_scale = 14;
  repeated .TSCH.ChartUIState chart_ui_state = 15;
  optional bool show_slide_guides = 16;
  optional bool show_template_guides = 17;
  optional bool shows_comments = 18;
  optional bool comments_printing_toggle_enabled = 39;
  repeated .TSP.Reference collapsed_slide_nodes = 19;
  repeated .TSP.Reference outline_collapsed_slide_nodes = 28;
  repeated .TSP.Reference outline_has_body_slide_nodes = 30;
  optional bool shows_ruler = 20;
  optional float desktop_navigator_view_width = 22;
  optional float desktop_outline_view_width = 23;
  optional bool desktop_outline_view_default_fixed = 31;
  optional .TSP.Size desktop_main_content_size = 24;
  optional float desktop_presenter_notes_view_height = 25;
  optional .TSP.Point desktop_main_window_origin = 26;
  optional bool light_table_hides_skipped_slides = 27;
  optional .TSK.SelectionPathArchive selection_path = 29;
  optional float desktop_element_list_view_width = 32;
  repeated .TSP.Reference element_list_expanded_groups = 33;
  optional bool shows_mobile_light_table = 34;
  optional float mobile_light_table_zoom_scale = 35;
  optional bool mobile_light_table_hides_skipped_slides = 36;
  optional .TSP.Reference freehand_drawing_toolkit_state = 37;
  optional .TSP.Reference selection_path_transformer = 38;
  optional bool shows_mobile_outline = 40;
  optional bool editing_disabled = 41;
}

message IOSRestorableViewStateRootArchive {
  optional .KN.IOSSavedPlaybackStateArchive saved_playback_state = 1;
}

message IOSSavedPlaybackStateArchive {
  enum PresentationType {
    Manual = 1;
    Record = 2;
    PlayRecording = 3;
    Rehearse = 4;
    Showcast = 5;
  }
  optional .KN.IOSSavedPlaybackStateArchive.PresentationType presentation_type = 1;
  optional uint32 slide_node_index = 2;
  optional uint32 event_index = 3;
  repeated string breadcrumb_trail = 4;
  optional bool had_external_display = 5;
  optional bool is_elapsed_time_started = 6;
  optional double elapsed_time_start_time = 7;
  optional double recording_playback_current_time = 8;
  optional bool should_show_slide_navigator = 9;
}

message CanvasSelectionArchive {
  repeated .TSP.Reference infos = 1;
  repeated .TSP.Reference non_interactive_infos = 5;
  repeated .TSP.Reference infos_for_action_ghost_indexes = 6;
  repeated .TSP.IndexSet action_ghost_indexes = 3;
  repeated .TSP.Reference build_chunks = 4;
  repeated uint32 database_action_ghost_indexes = 2 [deprecated = true];
}

message ActionGhostSelectionArchive {
}

message ThemeCustomTimingCurveArchive {
  required string name = 1;
  required .TSD.PathSourceArchive curve = 2;
}

message ThemeArchive {
  required .TSS.ThemeArchive super = 1;
  repeated .TSP.Reference templates = 2;
  optional string uuid = 3;
  repeated .TSP.Reference classicThemeRecords = 4;
  optional .TSP.Reference default_template_slide_node = 5;
  optional .TSP.Reference default_template_slide_node_reference = 6;
  optional bool default_template_slide_node_is_our_best_guess = 7;
  repeated .KN.ThemeCustomTimingCurveArchive custom_effect_timing_curves = 8;
}

message SlideTreeArchive {
  optional .TSP.Reference rootSlideNode = 1 [deprecated = true];
  repeated .TSP.Reference slides = 2;
}

message ShowArchive {
  enum KNShowMode {
    kKNShowModeNormal = 0;
    kKNShowModeAutoPlay = 1;
    kKNShowModeHyperlinksOnly = 2;
  }
  optional .TSP.Reference uiState = 1;
  required .TSP.Reference theme = 2;
  required .KN.SlideTreeArchive slideTree = 3;
  required .TSP.Size size = 4;
  required .TSP.Reference stylesheet = 5;
  optional bool slideNumbersVisible = 6;
  optional .TSP.Reference recording = 7;
  optional bool loop_presentation = 8;
  optional .KN.ShowArchive.KNShowMode mode = 9 [default = kKNShowModeNormal];
  optional double autoplay_transition_delay = 10 [default = 5];
  optional double autoplay_build_delay = 11 [default = 2];
  optional bool idle_timer_active = 15;
  optional double idle_timer_delay = 16 [default = 900];
  optional .TSP.Reference soundtrack = 17;
  optional bool automatically_plays_upon_open = 18;
  optional .TSP.Reference slideList = 19;
}

message DocumentArchive {
  required .TSA.DocumentArchive super = 3;
  required .TSP.Reference show = 2;
  optional .TSP.Reference tables_custom_format_list = 4;
}

message SlideStylePropertiesArchive {
  optional .TSD.FillArchive fill = 1;
  optional .KN.TransitionAttributesArchive transition = 2;
  optional bool transition_null = 3;
  optional bool titlePlaceholderVisibility = 4;
  optional bool bodyPlaceholderVisibility = 5;
  optional bool objectPlaceholderVisibility = 7;
  optional bool slideNumberPlaceholderVisibility = 6;
}

message SlideStyleArchive {
  required .TSS.StyleArchive super = 1;
  optional uint32 override_count = 10 [default = 0];
  optional .KN.SlideStylePropertiesArchive slide_properties = 11;
}

message PasteboardNativeStorageArchive {
  repeated .TSP.Reference drawables = 1;
  repeated .TSP.Reference builds = 2;
  repeated .TSP.Reference buildChunks = 3;
  repeated .TSP.Reference slideNodes = 4;
  repeated .TSP.Reference displayed_slide_nodes = 12;
  repeated .TSP.Reference template_slide_nodes = 9;
  repeated .TSP.Reference collapsedSlideNodes = 10;
  repeated .TSP.Reference outlineCollapsedSlideNodes = 11;
  repeated .TSP.Reference outlineHasBodySlideNodes = 13;
  optional .TSP.Size originalShowSize = 5;
  repeated .TSP.Range titleRanges = 6;
  repeated .TSD.GeometryArchive geometries_in_root = 7;
  optional string slide_node_unique_identifier = 8;
  repeated .KN.ThemeCustomTimingCurveArchive custom_effect_timing_curves = 14;
  repeated string original_slide_node_UUIDs = 15;
  optional bool slide_nodes_have_datas_needing_download = 16;
  optional .KN.TransitionArchive transition = 17;
}

message PrototypeForUndoTemplateChangeArchive {
  optional .TSP.Reference slide_style = 1;
  required .TSP.UUID template_slide_id = 2;
  repeated .TSP.UUID drawable_info_id_list = 3;
  repeated .TSP.Reference placeholders = 4;
  repeated string placeholder_tags_list = 5;
}

message RecordingArchive {
  enum RecordingSyncStateEnum {
    kRecordingSyncStateInSyncWithShow = 0;
    kRecordingSyncStateOutOfSyncWithShow = 1;
  }
  repeated .TSP.Reference event_tracks = 1;
  optional .TSP.Reference movie_track = 2;
  optional double duration = 3;
  optional .KN.RecordingArchive.RecordingSyncStateEnum sync_state_enum = 4 [default = kRecordingSyncStateInSyncWithShow, deprecated = true];
  optional .TSP.Date modification_date = 5;
  optional .KN.RecordingSyncState sync_state = 6;
  optional .KN.RecordingCorrectionHistory correction_history = 7;
}

message RecordingSyncState {
  optional .TSP.UUID out_of_sync_token = 1;
  optional bool can_clear_out_of_sync_token = 2 [default = false];
}

message RecordingCorrectionHistory {
  optional bool did_add_missing_events_for_radar_49654305 = 1;
}

message RecordingEventTrackArchive {
  optional string type = 1;
  repeated .KN.RecordingEventArchive events = 2;
}

message RecordingEventArchive {
  optional double start_time = 1 [default = -1];
  optional .KN.RecordingNavigationEventArchive navigation_event_archive = 1000;
  optional .KN.RecordingLaserEventArchive laser_event_archive = 1001;
  optional .KN.RecordingPauseEventArchive pause_event_archive = 1002;
  optional .KN.RecordingMovieEventArchive movie_event_archive = 1003;
}

message RecordingNavigationEventArchive {
  enum RecordingNavigationEventAnimationPhase {
    kRecordingNavigationEventAnimationNone = 0;
    kRecordingNavigationEventAnimationStart = 1;
    kRecordingNavigationEventAnimationEnd = 2;
  }
  optional .TSP.UUID target_slide_node_id = 4;
  optional .TSP.Reference target_slide_node_reference = 1;
  optional uint32 target_event_index = 2;
  optional .KN.RecordingNavigationEventArchive.RecordingNavigationEventAnimationPhase animation_phase = 3 [default = kRecordingNavigationEventAnimationNone];
}

message RecordingLaserEventArchive {
  optional .TSP.Point unscaled_location = 1 [deprecated = true];
  optional .TSP.Point unit_location = 2;
}

message RecordingPauseEventArchive {
  enum RecordingPauseEventType {
    kRecordingPauseEventTypeResume = 0;
    kRecordingPauseEventTypePause = 1;
    kRecordingPauseEventTypeConcealWithBlack = 2;
    kRecordingPauseEventTypeConcealWithWhite = 3;
  }
  optional .KN.RecordingPauseEventArchive.RecordingPauseEventType pause_event_type = 1 [default = kRecordingPauseEventTypeResume];
}

message RecordingMovieEventArchive {
  enum RecordingMovieEventType {
    kRecordingMovieEventNone = 0;
    kRecordingMovieEventSeek = 1;
    kRecordingMovieEventSetRate = 2;
    kRecordingMovieEventStartPlayback = 3;
    kRecordingMovieEventStopPlayback = 4;
    kRecordingMovieEventBeginScrubbing = 5;
    kRecordingMovieEventEndScrubbing = 6;
  }
  optional .TSP.Reference movie_info_reference = 1;
  optional .KN.RecordingMovieEventArchive.RecordingMovieEventType movie_event_type = 2 [default = kRecordingMovieEventSeek];
  optional double movie_event_value = 3;
  optional .TSP.Reference movie_info_that_played_across_slides_reference = 4;
  optional .TSP.UUID movie_slide_node_id = 5;
}

message RecordingMovieTrackArchive {
  repeated .KN.MovieSegmentArchive movie_segments = 1;
  optional bool is_movie_segment_data_trimmed_to_duration = 2;
}

message MovieSegmentArchive {
  optional .TSP.DataReference movie_data = 3;
  optional double start_time = 2 [default = -1];
  optional .TSP.Reference database_movie_data = 1;
}

message Soundtrack {
  enum SoundtrackMode {
    kKNSoundtrackModePlayOnce = 0;
    kKNSoundtrackModeLoop = 1;
    kKNSoundtrackModeDoNotPlay = 2;
  }
  optional double volume = 1;
  optional .KN.Soundtrack.SoundtrackMode mode = 2 [default = kKNSoundtrackModePlayOnce];
  repeated .TSP.DataReference movie_media = 3;
}

message SlideNumberAttachmentArchive {
  required .TSWP.TextualAttachmentArchive super = 1;
}

message SlideCollectionSelectionArchive {
  message OutlineSelection {
    required .TSP.Reference slide_node = 1;
    required .TSP.IndexSet selected_paragraph_indexes = 2;
  }
  repeated .TSP.Reference slide_nodes = 1;
  optional .TSP.Reference slide_node_to_edit = 2;
  repeated .KN.SlideCollectionSelectionArchive.OutlineSelection selected_paragraph_indexes_for_slide_nodes = 3;
  optional .TSP.Range range_in_selected_paragraph = 4;
}

message PresenterNotesSelectionArchive {
  optional .TSP.Reference slide_node = 1;
}

message MixedIdOperationArgs {
  enum ArgsListKind {
    Add = 0;
    Remove = 1;
    ShowPlaceholder = 2;
    HidePlaceholder = 3;
  }
  repeated .KN.MixedIdOperationArgs.ArgsListKind args_list_types = 1;
  repeated .TSK.AddIdOperationArgs add_args_list = 2;
  repeated .TSK.IdPlacementOperationArgs show_placeholder_args_list = 3;
  repeated .TSK.RemoveIdOperationArgs remove_args_list = 4;
  repeated .TSK.IdPlacementOperationArgs hide_placeholder_args_list = 5;
}

