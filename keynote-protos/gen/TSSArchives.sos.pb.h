// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TSSArchives.sos.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_TSSArchives_2esos_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_TSSArchives_2esos_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3017000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3017003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "TSPMessages.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_TSSArchives_2esos_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_TSSArchives_2esos_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[10]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_TSSArchives_2esos_2eproto;
namespace TSSSOS {
class SpecBoolArchive;
struct SpecBoolArchiveDefaultTypeInternal;
extern SpecBoolArchiveDefaultTypeInternal _SpecBoolArchive_default_instance_;
class SpecColorArchive;
struct SpecColorArchiveDefaultTypeInternal;
extern SpecColorArchiveDefaultTypeInternal _SpecColorArchive_default_instance_;
class SpecDoubleArchive;
struct SpecDoubleArchiveDefaultTypeInternal;
extern SpecDoubleArchiveDefaultTypeInternal _SpecDoubleArchive_default_instance_;
class SpecIntegerArchive;
struct SpecIntegerArchiveDefaultTypeInternal;
extern SpecIntegerArchiveDefaultTypeInternal _SpecIntegerArchive_default_instance_;
class SpecSetBoolArchive;
struct SpecSetBoolArchiveDefaultTypeInternal;
extern SpecSetBoolArchiveDefaultTypeInternal _SpecSetBoolArchive_default_instance_;
class SpecSetColorArchive;
struct SpecSetColorArchiveDefaultTypeInternal;
extern SpecSetColorArchiveDefaultTypeInternal _SpecSetColorArchive_default_instance_;
class SpecSetDoubleArchive;
struct SpecSetDoubleArchiveDefaultTypeInternal;
extern SpecSetDoubleArchiveDefaultTypeInternal _SpecSetDoubleArchive_default_instance_;
class SpecSetIntegerArchive;
struct SpecSetIntegerArchiveDefaultTypeInternal;
extern SpecSetIntegerArchiveDefaultTypeInternal _SpecSetIntegerArchive_default_instance_;
class SpecSetStringArchive;
struct SpecSetStringArchiveDefaultTypeInternal;
extern SpecSetStringArchiveDefaultTypeInternal _SpecSetStringArchive_default_instance_;
class SpecStringArchive;
struct SpecStringArchiveDefaultTypeInternal;
extern SpecStringArchiveDefaultTypeInternal _SpecStringArchive_default_instance_;
}  // namespace TSSSOS
PROTOBUF_NAMESPACE_OPEN
template<> ::TSSSOS::SpecBoolArchive* Arena::CreateMaybeMessage<::TSSSOS::SpecBoolArchive>(Arena*);
template<> ::TSSSOS::SpecColorArchive* Arena::CreateMaybeMessage<::TSSSOS::SpecColorArchive>(Arena*);
template<> ::TSSSOS::SpecDoubleArchive* Arena::CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(Arena*);
template<> ::TSSSOS::SpecIntegerArchive* Arena::CreateMaybeMessage<::TSSSOS::SpecIntegerArchive>(Arena*);
template<> ::TSSSOS::SpecSetBoolArchive* Arena::CreateMaybeMessage<::TSSSOS::SpecSetBoolArchive>(Arena*);
template<> ::TSSSOS::SpecSetColorArchive* Arena::CreateMaybeMessage<::TSSSOS::SpecSetColorArchive>(Arena*);
template<> ::TSSSOS::SpecSetDoubleArchive* Arena::CreateMaybeMessage<::TSSSOS::SpecSetDoubleArchive>(Arena*);
template<> ::TSSSOS::SpecSetIntegerArchive* Arena::CreateMaybeMessage<::TSSSOS::SpecSetIntegerArchive>(Arena*);
template<> ::TSSSOS::SpecSetStringArchive* Arena::CreateMaybeMessage<::TSSSOS::SpecSetStringArchive>(Arena*);
template<> ::TSSSOS::SpecStringArchive* Arena::CreateMaybeMessage<::TSSSOS::SpecStringArchive>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace TSSSOS {

// ===================================================================

class SpecSetBoolArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSSSOS.SpecSetBoolArchive) */ {
 public:
  inline SpecSetBoolArchive() : SpecSetBoolArchive(nullptr) {}
  ~SpecSetBoolArchive() override;
  explicit constexpr SpecSetBoolArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecSetBoolArchive(const SpecSetBoolArchive& from);
  SpecSetBoolArchive(SpecSetBoolArchive&& from) noexcept
    : SpecSetBoolArchive() {
    *this = ::std::move(from);
  }

  inline SpecSetBoolArchive& operator=(const SpecSetBoolArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecSetBoolArchive& operator=(SpecSetBoolArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecSetBoolArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecSetBoolArchive* internal_default_instance() {
    return reinterpret_cast<const SpecSetBoolArchive*>(
               &_SpecSetBoolArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SpecSetBoolArchive& a, SpecSetBoolArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecSetBoolArchive* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecSetBoolArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SpecSetBoolArchive* New() const final {
    return new SpecSetBoolArchive();
  }

  SpecSetBoolArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SpecSetBoolArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecSetBoolArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SpecSetBoolArchive& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecSetBoolArchive* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSSSOS.SpecSetBoolArchive";
  }
  protected:
  explicit SpecSetBoolArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
    kUnsetFieldNumber = 2,
  };
  // required bool value = 1;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  bool value() const;
  void set_value(bool value);
  private:
  bool _internal_value() const;
  void _internal_set_value(bool value);
  public:

  // required bool unset = 2;
  bool has_unset() const;
  private:
  bool _internal_has_unset() const;
  public:
  void clear_unset();
  bool unset() const;
  void set_unset(bool value);
  private:
  bool _internal_unset() const;
  void _internal_set_unset(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TSSSOS.SpecSetBoolArchive)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool value_;
  bool unset_;
  friend struct ::TableStruct_TSSArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class SpecSetColorArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSSSOS.SpecSetColorArchive) */ {
 public:
  inline SpecSetColorArchive() : SpecSetColorArchive(nullptr) {}
  ~SpecSetColorArchive() override;
  explicit constexpr SpecSetColorArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecSetColorArchive(const SpecSetColorArchive& from);
  SpecSetColorArchive(SpecSetColorArchive&& from) noexcept
    : SpecSetColorArchive() {
    *this = ::std::move(from);
  }

  inline SpecSetColorArchive& operator=(const SpecSetColorArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecSetColorArchive& operator=(SpecSetColorArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecSetColorArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecSetColorArchive* internal_default_instance() {
    return reinterpret_cast<const SpecSetColorArchive*>(
               &_SpecSetColorArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SpecSetColorArchive& a, SpecSetColorArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecSetColorArchive* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecSetColorArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SpecSetColorArchive* New() const final {
    return new SpecSetColorArchive();
  }

  SpecSetColorArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SpecSetColorArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecSetColorArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SpecSetColorArchive& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecSetColorArchive* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSSSOS.SpecSetColorArchive";
  }
  protected:
  explicit SpecSetColorArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kColorFieldNumber = 1,
    kUnsetFieldNumber = 2,
  };
  // optional .TSP.Color color = 1;
  bool has_color() const;
  private:
  bool _internal_has_color() const;
  public:
  void clear_color();
  const ::TSP::Color& color() const;
  PROTOBUF_MUST_USE_RESULT ::TSP::Color* release_color();
  ::TSP::Color* mutable_color();
  void set_allocated_color(::TSP::Color* color);
  private:
  const ::TSP::Color& _internal_color() const;
  ::TSP::Color* _internal_mutable_color();
  public:
  void unsafe_arena_set_allocated_color(
      ::TSP::Color* color);
  ::TSP::Color* unsafe_arena_release_color();

  // required bool unset = 2;
  bool has_unset() const;
  private:
  bool _internal_has_unset() const;
  public:
  void clear_unset();
  bool unset() const;
  void set_unset(bool value);
  private:
  bool _internal_unset() const;
  void _internal_set_unset(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TSSSOS.SpecSetColorArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::TSP::Color* color_;
  bool unset_;
  friend struct ::TableStruct_TSSArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class SpecSetDoubleArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSSSOS.SpecSetDoubleArchive) */ {
 public:
  inline SpecSetDoubleArchive() : SpecSetDoubleArchive(nullptr) {}
  ~SpecSetDoubleArchive() override;
  explicit constexpr SpecSetDoubleArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecSetDoubleArchive(const SpecSetDoubleArchive& from);
  SpecSetDoubleArchive(SpecSetDoubleArchive&& from) noexcept
    : SpecSetDoubleArchive() {
    *this = ::std::move(from);
  }

  inline SpecSetDoubleArchive& operator=(const SpecSetDoubleArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecSetDoubleArchive& operator=(SpecSetDoubleArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecSetDoubleArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecSetDoubleArchive* internal_default_instance() {
    return reinterpret_cast<const SpecSetDoubleArchive*>(
               &_SpecSetDoubleArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SpecSetDoubleArchive& a, SpecSetDoubleArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecSetDoubleArchive* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecSetDoubleArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SpecSetDoubleArchive* New() const final {
    return new SpecSetDoubleArchive();
  }

  SpecSetDoubleArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SpecSetDoubleArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecSetDoubleArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SpecSetDoubleArchive& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecSetDoubleArchive* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSSSOS.SpecSetDoubleArchive";
  }
  protected:
  explicit SpecSetDoubleArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
    kUnsetFieldNumber = 2,
  };
  // required double value = 1;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  double value() const;
  void set_value(double value);
  private:
  double _internal_value() const;
  void _internal_set_value(double value);
  public:

  // required bool unset = 2;
  bool has_unset() const;
  private:
  bool _internal_has_unset() const;
  public:
  void clear_unset();
  bool unset() const;
  void set_unset(bool value);
  private:
  bool _internal_unset() const;
  void _internal_set_unset(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TSSSOS.SpecSetDoubleArchive)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  double value_;
  bool unset_;
  friend struct ::TableStruct_TSSArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class SpecSetIntegerArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSSSOS.SpecSetIntegerArchive) */ {
 public:
  inline SpecSetIntegerArchive() : SpecSetIntegerArchive(nullptr) {}
  ~SpecSetIntegerArchive() override;
  explicit constexpr SpecSetIntegerArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecSetIntegerArchive(const SpecSetIntegerArchive& from);
  SpecSetIntegerArchive(SpecSetIntegerArchive&& from) noexcept
    : SpecSetIntegerArchive() {
    *this = ::std::move(from);
  }

  inline SpecSetIntegerArchive& operator=(const SpecSetIntegerArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecSetIntegerArchive& operator=(SpecSetIntegerArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecSetIntegerArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecSetIntegerArchive* internal_default_instance() {
    return reinterpret_cast<const SpecSetIntegerArchive*>(
               &_SpecSetIntegerArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SpecSetIntegerArchive& a, SpecSetIntegerArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecSetIntegerArchive* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecSetIntegerArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SpecSetIntegerArchive* New() const final {
    return new SpecSetIntegerArchive();
  }

  SpecSetIntegerArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SpecSetIntegerArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecSetIntegerArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SpecSetIntegerArchive& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecSetIntegerArchive* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSSSOS.SpecSetIntegerArchive";
  }
  protected:
  explicit SpecSetIntegerArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
    kUnsetFieldNumber = 2,
  };
  // required int32 value = 1;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required bool unset = 2;
  bool has_unset() const;
  private:
  bool _internal_has_unset() const;
  public:
  void clear_unset();
  bool unset() const;
  void set_unset(bool value);
  private:
  bool _internal_unset() const;
  void _internal_set_unset(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TSSSOS.SpecSetIntegerArchive)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 value_;
  bool unset_;
  friend struct ::TableStruct_TSSArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class SpecSetStringArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSSSOS.SpecSetStringArchive) */ {
 public:
  inline SpecSetStringArchive() : SpecSetStringArchive(nullptr) {}
  ~SpecSetStringArchive() override;
  explicit constexpr SpecSetStringArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecSetStringArchive(const SpecSetStringArchive& from);
  SpecSetStringArchive(SpecSetStringArchive&& from) noexcept
    : SpecSetStringArchive() {
    *this = ::std::move(from);
  }

  inline SpecSetStringArchive& operator=(const SpecSetStringArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecSetStringArchive& operator=(SpecSetStringArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecSetStringArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecSetStringArchive* internal_default_instance() {
    return reinterpret_cast<const SpecSetStringArchive*>(
               &_SpecSetStringArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SpecSetStringArchive& a, SpecSetStringArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecSetStringArchive* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecSetStringArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SpecSetStringArchive* New() const final {
    return new SpecSetStringArchive();
  }

  SpecSetStringArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SpecSetStringArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecSetStringArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SpecSetStringArchive& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecSetStringArchive* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSSSOS.SpecSetStringArchive";
  }
  protected:
  explicit SpecSetStringArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
    kUnsetFieldNumber = 2,
  };
  // optional string value = 1;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const std::string& value() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_value(ArgT0&& arg0, ArgT... args);
  std::string* mutable_value();
  PROTOBUF_MUST_USE_RESULT std::string* release_value();
  void set_allocated_value(std::string* value);
  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(const std::string& value);
  std::string* _internal_mutable_value();
  public:

  // required bool unset = 2;
  bool has_unset() const;
  private:
  bool _internal_has_unset() const;
  public:
  void clear_unset();
  bool unset() const;
  void set_unset(bool value);
  private:
  bool _internal_unset() const;
  void _internal_set_unset(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TSSSOS.SpecSetStringArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  bool unset_;
  friend struct ::TableStruct_TSSArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class SpecBoolArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSSSOS.SpecBoolArchive) */ {
 public:
  inline SpecBoolArchive() : SpecBoolArchive(nullptr) {}
  ~SpecBoolArchive() override;
  explicit constexpr SpecBoolArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecBoolArchive(const SpecBoolArchive& from);
  SpecBoolArchive(SpecBoolArchive&& from) noexcept
    : SpecBoolArchive() {
    *this = ::std::move(from);
  }

  inline SpecBoolArchive& operator=(const SpecBoolArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecBoolArchive& operator=(SpecBoolArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecBoolArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecBoolArchive* internal_default_instance() {
    return reinterpret_cast<const SpecBoolArchive*>(
               &_SpecBoolArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(SpecBoolArchive& a, SpecBoolArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecBoolArchive* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecBoolArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SpecBoolArchive* New() const final {
    return new SpecBoolArchive();
  }

  SpecBoolArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SpecBoolArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecBoolArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SpecBoolArchive& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecBoolArchive* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSSSOS.SpecBoolArchive";
  }
  protected:
  explicit SpecBoolArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpecSetBoolFieldNumber = 1,
  };
  // optional .TSSSOS.SpecSetBoolArchive spec_set_bool = 1;
  bool has_spec_set_bool() const;
  private:
  bool _internal_has_spec_set_bool() const;
  public:
  void clear_spec_set_bool();
  const ::TSSSOS::SpecSetBoolArchive& spec_set_bool() const;
  PROTOBUF_MUST_USE_RESULT ::TSSSOS::SpecSetBoolArchive* release_spec_set_bool();
  ::TSSSOS::SpecSetBoolArchive* mutable_spec_set_bool();
  void set_allocated_spec_set_bool(::TSSSOS::SpecSetBoolArchive* spec_set_bool);
  private:
  const ::TSSSOS::SpecSetBoolArchive& _internal_spec_set_bool() const;
  ::TSSSOS::SpecSetBoolArchive* _internal_mutable_spec_set_bool();
  public:
  void unsafe_arena_set_allocated_spec_set_bool(
      ::TSSSOS::SpecSetBoolArchive* spec_set_bool);
  ::TSSSOS::SpecSetBoolArchive* unsafe_arena_release_spec_set_bool();

  // @@protoc_insertion_point(class_scope:TSSSOS.SpecBoolArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::TSSSOS::SpecSetBoolArchive* spec_set_bool_;
  friend struct ::TableStruct_TSSArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class SpecColorArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSSSOS.SpecColorArchive) */ {
 public:
  inline SpecColorArchive() : SpecColorArchive(nullptr) {}
  ~SpecColorArchive() override;
  explicit constexpr SpecColorArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecColorArchive(const SpecColorArchive& from);
  SpecColorArchive(SpecColorArchive&& from) noexcept
    : SpecColorArchive() {
    *this = ::std::move(from);
  }

  inline SpecColorArchive& operator=(const SpecColorArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecColorArchive& operator=(SpecColorArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecColorArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecColorArchive* internal_default_instance() {
    return reinterpret_cast<const SpecColorArchive*>(
               &_SpecColorArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(SpecColorArchive& a, SpecColorArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecColorArchive* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecColorArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SpecColorArchive* New() const final {
    return new SpecColorArchive();
  }

  SpecColorArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SpecColorArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecColorArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SpecColorArchive& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecColorArchive* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSSSOS.SpecColorArchive";
  }
  protected:
  explicit SpecColorArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpecSetColorFieldNumber = 1,
  };
  // optional .TSSSOS.SpecSetColorArchive spec_set_color = 1;
  bool has_spec_set_color() const;
  private:
  bool _internal_has_spec_set_color() const;
  public:
  void clear_spec_set_color();
  const ::TSSSOS::SpecSetColorArchive& spec_set_color() const;
  PROTOBUF_MUST_USE_RESULT ::TSSSOS::SpecSetColorArchive* release_spec_set_color();
  ::TSSSOS::SpecSetColorArchive* mutable_spec_set_color();
  void set_allocated_spec_set_color(::TSSSOS::SpecSetColorArchive* spec_set_color);
  private:
  const ::TSSSOS::SpecSetColorArchive& _internal_spec_set_color() const;
  ::TSSSOS::SpecSetColorArchive* _internal_mutable_spec_set_color();
  public:
  void unsafe_arena_set_allocated_spec_set_color(
      ::TSSSOS::SpecSetColorArchive* spec_set_color);
  ::TSSSOS::SpecSetColorArchive* unsafe_arena_release_spec_set_color();

  // @@protoc_insertion_point(class_scope:TSSSOS.SpecColorArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::TSSSOS::SpecSetColorArchive* spec_set_color_;
  friend struct ::TableStruct_TSSArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class SpecDoubleArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSSSOS.SpecDoubleArchive) */ {
 public:
  inline SpecDoubleArchive() : SpecDoubleArchive(nullptr) {}
  ~SpecDoubleArchive() override;
  explicit constexpr SpecDoubleArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecDoubleArchive(const SpecDoubleArchive& from);
  SpecDoubleArchive(SpecDoubleArchive&& from) noexcept
    : SpecDoubleArchive() {
    *this = ::std::move(from);
  }

  inline SpecDoubleArchive& operator=(const SpecDoubleArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecDoubleArchive& operator=(SpecDoubleArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecDoubleArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecDoubleArchive* internal_default_instance() {
    return reinterpret_cast<const SpecDoubleArchive*>(
               &_SpecDoubleArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(SpecDoubleArchive& a, SpecDoubleArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecDoubleArchive* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecDoubleArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SpecDoubleArchive* New() const final {
    return new SpecDoubleArchive();
  }

  SpecDoubleArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SpecDoubleArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecDoubleArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SpecDoubleArchive& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecDoubleArchive* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSSSOS.SpecDoubleArchive";
  }
  protected:
  explicit SpecDoubleArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpecSetDoubleFieldNumber = 1,
  };
  // optional .TSSSOS.SpecSetDoubleArchive spec_set_double = 1;
  bool has_spec_set_double() const;
  private:
  bool _internal_has_spec_set_double() const;
  public:
  void clear_spec_set_double();
  const ::TSSSOS::SpecSetDoubleArchive& spec_set_double() const;
  PROTOBUF_MUST_USE_RESULT ::TSSSOS::SpecSetDoubleArchive* release_spec_set_double();
  ::TSSSOS::SpecSetDoubleArchive* mutable_spec_set_double();
  void set_allocated_spec_set_double(::TSSSOS::SpecSetDoubleArchive* spec_set_double);
  private:
  const ::TSSSOS::SpecSetDoubleArchive& _internal_spec_set_double() const;
  ::TSSSOS::SpecSetDoubleArchive* _internal_mutable_spec_set_double();
  public:
  void unsafe_arena_set_allocated_spec_set_double(
      ::TSSSOS::SpecSetDoubleArchive* spec_set_double);
  ::TSSSOS::SpecSetDoubleArchive* unsafe_arena_release_spec_set_double();

  // @@protoc_insertion_point(class_scope:TSSSOS.SpecDoubleArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::TSSSOS::SpecSetDoubleArchive* spec_set_double_;
  friend struct ::TableStruct_TSSArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class SpecIntegerArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSSSOS.SpecIntegerArchive) */ {
 public:
  inline SpecIntegerArchive() : SpecIntegerArchive(nullptr) {}
  ~SpecIntegerArchive() override;
  explicit constexpr SpecIntegerArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecIntegerArchive(const SpecIntegerArchive& from);
  SpecIntegerArchive(SpecIntegerArchive&& from) noexcept
    : SpecIntegerArchive() {
    *this = ::std::move(from);
  }

  inline SpecIntegerArchive& operator=(const SpecIntegerArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecIntegerArchive& operator=(SpecIntegerArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecIntegerArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecIntegerArchive* internal_default_instance() {
    return reinterpret_cast<const SpecIntegerArchive*>(
               &_SpecIntegerArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(SpecIntegerArchive& a, SpecIntegerArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecIntegerArchive* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecIntegerArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SpecIntegerArchive* New() const final {
    return new SpecIntegerArchive();
  }

  SpecIntegerArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SpecIntegerArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecIntegerArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SpecIntegerArchive& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecIntegerArchive* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSSSOS.SpecIntegerArchive";
  }
  protected:
  explicit SpecIntegerArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpecSetIntegerFieldNumber = 1,
  };
  // optional .TSSSOS.SpecSetIntegerArchive spec_set_integer = 1;
  bool has_spec_set_integer() const;
  private:
  bool _internal_has_spec_set_integer() const;
  public:
  void clear_spec_set_integer();
  const ::TSSSOS::SpecSetIntegerArchive& spec_set_integer() const;
  PROTOBUF_MUST_USE_RESULT ::TSSSOS::SpecSetIntegerArchive* release_spec_set_integer();
  ::TSSSOS::SpecSetIntegerArchive* mutable_spec_set_integer();
  void set_allocated_spec_set_integer(::TSSSOS::SpecSetIntegerArchive* spec_set_integer);
  private:
  const ::TSSSOS::SpecSetIntegerArchive& _internal_spec_set_integer() const;
  ::TSSSOS::SpecSetIntegerArchive* _internal_mutable_spec_set_integer();
  public:
  void unsafe_arena_set_allocated_spec_set_integer(
      ::TSSSOS::SpecSetIntegerArchive* spec_set_integer);
  ::TSSSOS::SpecSetIntegerArchive* unsafe_arena_release_spec_set_integer();

  // @@protoc_insertion_point(class_scope:TSSSOS.SpecIntegerArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::TSSSOS::SpecSetIntegerArchive* spec_set_integer_;
  friend struct ::TableStruct_TSSArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class SpecStringArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSSSOS.SpecStringArchive) */ {
 public:
  inline SpecStringArchive() : SpecStringArchive(nullptr) {}
  ~SpecStringArchive() override;
  explicit constexpr SpecStringArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecStringArchive(const SpecStringArchive& from);
  SpecStringArchive(SpecStringArchive&& from) noexcept
    : SpecStringArchive() {
    *this = ::std::move(from);
  }

  inline SpecStringArchive& operator=(const SpecStringArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecStringArchive& operator=(SpecStringArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecStringArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecStringArchive* internal_default_instance() {
    return reinterpret_cast<const SpecStringArchive*>(
               &_SpecStringArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(SpecStringArchive& a, SpecStringArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecStringArchive* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecStringArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SpecStringArchive* New() const final {
    return new SpecStringArchive();
  }

  SpecStringArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SpecStringArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecStringArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SpecStringArchive& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecStringArchive* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSSSOS.SpecStringArchive";
  }
  protected:
  explicit SpecStringArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpecSetStringFieldNumber = 1,
  };
  // optional .TSSSOS.SpecSetStringArchive spec_set_string = 1;
  bool has_spec_set_string() const;
  private:
  bool _internal_has_spec_set_string() const;
  public:
  void clear_spec_set_string();
  const ::TSSSOS::SpecSetStringArchive& spec_set_string() const;
  PROTOBUF_MUST_USE_RESULT ::TSSSOS::SpecSetStringArchive* release_spec_set_string();
  ::TSSSOS::SpecSetStringArchive* mutable_spec_set_string();
  void set_allocated_spec_set_string(::TSSSOS::SpecSetStringArchive* spec_set_string);
  private:
  const ::TSSSOS::SpecSetStringArchive& _internal_spec_set_string() const;
  ::TSSSOS::SpecSetStringArchive* _internal_mutable_spec_set_string();
  public:
  void unsafe_arena_set_allocated_spec_set_string(
      ::TSSSOS::SpecSetStringArchive* spec_set_string);
  ::TSSSOS::SpecSetStringArchive* unsafe_arena_release_spec_set_string();

  // @@protoc_insertion_point(class_scope:TSSSOS.SpecStringArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::TSSSOS::SpecSetStringArchive* spec_set_string_;
  friend struct ::TableStruct_TSSArchives_2esos_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SpecSetBoolArchive

// required bool value = 1;
inline bool SpecSetBoolArchive::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SpecSetBoolArchive::has_value() const {
  return _internal_has_value();
}
inline void SpecSetBoolArchive::clear_value() {
  value_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool SpecSetBoolArchive::_internal_value() const {
  return value_;
}
inline bool SpecSetBoolArchive::value() const {
  // @@protoc_insertion_point(field_get:TSSSOS.SpecSetBoolArchive.value)
  return _internal_value();
}
inline void SpecSetBoolArchive::_internal_set_value(bool value) {
  _has_bits_[0] |= 0x00000001u;
  value_ = value;
}
inline void SpecSetBoolArchive::set_value(bool value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:TSSSOS.SpecSetBoolArchive.value)
}

// required bool unset = 2;
inline bool SpecSetBoolArchive::_internal_has_unset() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SpecSetBoolArchive::has_unset() const {
  return _internal_has_unset();
}
inline void SpecSetBoolArchive::clear_unset() {
  unset_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool SpecSetBoolArchive::_internal_unset() const {
  return unset_;
}
inline bool SpecSetBoolArchive::unset() const {
  // @@protoc_insertion_point(field_get:TSSSOS.SpecSetBoolArchive.unset)
  return _internal_unset();
}
inline void SpecSetBoolArchive::_internal_set_unset(bool value) {
  _has_bits_[0] |= 0x00000002u;
  unset_ = value;
}
inline void SpecSetBoolArchive::set_unset(bool value) {
  _internal_set_unset(value);
  // @@protoc_insertion_point(field_set:TSSSOS.SpecSetBoolArchive.unset)
}

// -------------------------------------------------------------------

// SpecSetColorArchive

// optional .TSP.Color color = 1;
inline bool SpecSetColorArchive::_internal_has_color() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || color_ != nullptr);
  return value;
}
inline bool SpecSetColorArchive::has_color() const {
  return _internal_has_color();
}
inline const ::TSP::Color& SpecSetColorArchive::_internal_color() const {
  const ::TSP::Color* p = color_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSP::Color&>(
      ::TSP::_Color_default_instance_);
}
inline const ::TSP::Color& SpecSetColorArchive::color() const {
  // @@protoc_insertion_point(field_get:TSSSOS.SpecSetColorArchive.color)
  return _internal_color();
}
inline void SpecSetColorArchive::unsafe_arena_set_allocated_color(
    ::TSP::Color* color) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(color_);
  }
  color_ = color;
  if (color) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSSSOS.SpecSetColorArchive.color)
}
inline ::TSP::Color* SpecSetColorArchive::release_color() {
  _has_bits_[0] &= ~0x00000001u;
  ::TSP::Color* temp = color_;
  color_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSP::Color* SpecSetColorArchive::unsafe_arena_release_color() {
  // @@protoc_insertion_point(field_release:TSSSOS.SpecSetColorArchive.color)
  _has_bits_[0] &= ~0x00000001u;
  ::TSP::Color* temp = color_;
  color_ = nullptr;
  return temp;
}
inline ::TSP::Color* SpecSetColorArchive::_internal_mutable_color() {
  _has_bits_[0] |= 0x00000001u;
  if (color_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSP::Color>(GetArenaForAllocation());
    color_ = p;
  }
  return color_;
}
inline ::TSP::Color* SpecSetColorArchive::mutable_color() {
  ::TSP::Color* _msg = _internal_mutable_color();
  // @@protoc_insertion_point(field_mutable:TSSSOS.SpecSetColorArchive.color)
  return _msg;
}
inline void SpecSetColorArchive::set_allocated_color(::TSP::Color* color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(color_);
  }
  if (color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(color));
    if (message_arena != submessage_arena) {
      color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, color, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  color_ = color;
  // @@protoc_insertion_point(field_set_allocated:TSSSOS.SpecSetColorArchive.color)
}

// required bool unset = 2;
inline bool SpecSetColorArchive::_internal_has_unset() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SpecSetColorArchive::has_unset() const {
  return _internal_has_unset();
}
inline void SpecSetColorArchive::clear_unset() {
  unset_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool SpecSetColorArchive::_internal_unset() const {
  return unset_;
}
inline bool SpecSetColorArchive::unset() const {
  // @@protoc_insertion_point(field_get:TSSSOS.SpecSetColorArchive.unset)
  return _internal_unset();
}
inline void SpecSetColorArchive::_internal_set_unset(bool value) {
  _has_bits_[0] |= 0x00000002u;
  unset_ = value;
}
inline void SpecSetColorArchive::set_unset(bool value) {
  _internal_set_unset(value);
  // @@protoc_insertion_point(field_set:TSSSOS.SpecSetColorArchive.unset)
}

// -------------------------------------------------------------------

// SpecSetDoubleArchive

// required double value = 1;
inline bool SpecSetDoubleArchive::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SpecSetDoubleArchive::has_value() const {
  return _internal_has_value();
}
inline void SpecSetDoubleArchive::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double SpecSetDoubleArchive::_internal_value() const {
  return value_;
}
inline double SpecSetDoubleArchive::value() const {
  // @@protoc_insertion_point(field_get:TSSSOS.SpecSetDoubleArchive.value)
  return _internal_value();
}
inline void SpecSetDoubleArchive::_internal_set_value(double value) {
  _has_bits_[0] |= 0x00000001u;
  value_ = value;
}
inline void SpecSetDoubleArchive::set_value(double value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:TSSSOS.SpecSetDoubleArchive.value)
}

// required bool unset = 2;
inline bool SpecSetDoubleArchive::_internal_has_unset() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SpecSetDoubleArchive::has_unset() const {
  return _internal_has_unset();
}
inline void SpecSetDoubleArchive::clear_unset() {
  unset_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool SpecSetDoubleArchive::_internal_unset() const {
  return unset_;
}
inline bool SpecSetDoubleArchive::unset() const {
  // @@protoc_insertion_point(field_get:TSSSOS.SpecSetDoubleArchive.unset)
  return _internal_unset();
}
inline void SpecSetDoubleArchive::_internal_set_unset(bool value) {
  _has_bits_[0] |= 0x00000002u;
  unset_ = value;
}
inline void SpecSetDoubleArchive::set_unset(bool value) {
  _internal_set_unset(value);
  // @@protoc_insertion_point(field_set:TSSSOS.SpecSetDoubleArchive.unset)
}

// -------------------------------------------------------------------

// SpecSetIntegerArchive

// required int32 value = 1;
inline bool SpecSetIntegerArchive::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SpecSetIntegerArchive::has_value() const {
  return _internal_has_value();
}
inline void SpecSetIntegerArchive::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SpecSetIntegerArchive::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SpecSetIntegerArchive::value() const {
  // @@protoc_insertion_point(field_get:TSSSOS.SpecSetIntegerArchive.value)
  return _internal_value();
}
inline void SpecSetIntegerArchive::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  value_ = value;
}
inline void SpecSetIntegerArchive::set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:TSSSOS.SpecSetIntegerArchive.value)
}

// required bool unset = 2;
inline bool SpecSetIntegerArchive::_internal_has_unset() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SpecSetIntegerArchive::has_unset() const {
  return _internal_has_unset();
}
inline void SpecSetIntegerArchive::clear_unset() {
  unset_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool SpecSetIntegerArchive::_internal_unset() const {
  return unset_;
}
inline bool SpecSetIntegerArchive::unset() const {
  // @@protoc_insertion_point(field_get:TSSSOS.SpecSetIntegerArchive.unset)
  return _internal_unset();
}
inline void SpecSetIntegerArchive::_internal_set_unset(bool value) {
  _has_bits_[0] |= 0x00000002u;
  unset_ = value;
}
inline void SpecSetIntegerArchive::set_unset(bool value) {
  _internal_set_unset(value);
  // @@protoc_insertion_point(field_set:TSSSOS.SpecSetIntegerArchive.unset)
}

// -------------------------------------------------------------------

// SpecSetStringArchive

// optional string value = 1;
inline bool SpecSetStringArchive::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SpecSetStringArchive::has_value() const {
  return _internal_has_value();
}
inline void SpecSetStringArchive::clear_value() {
  value_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SpecSetStringArchive::value() const {
  // @@protoc_insertion_point(field_get:TSSSOS.SpecSetStringArchive.value)
  return _internal_value();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void SpecSetStringArchive::set_value(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:TSSSOS.SpecSetStringArchive.value)
}
inline std::string* SpecSetStringArchive::mutable_value() {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:TSSSOS.SpecSetStringArchive.value)
  return _s;
}
inline const std::string& SpecSetStringArchive::_internal_value() const {
  return value_.Get();
}
inline void SpecSetStringArchive::_internal_set_value(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* SpecSetStringArchive::_internal_mutable_value() {
  _has_bits_[0] |= 0x00000001u;
  return value_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* SpecSetStringArchive::release_value() {
  // @@protoc_insertion_point(field_release:TSSSOS.SpecSetStringArchive.value)
  if (!_internal_has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return value_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void SpecSetStringArchive::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  value_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:TSSSOS.SpecSetStringArchive.value)
}

// required bool unset = 2;
inline bool SpecSetStringArchive::_internal_has_unset() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SpecSetStringArchive::has_unset() const {
  return _internal_has_unset();
}
inline void SpecSetStringArchive::clear_unset() {
  unset_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool SpecSetStringArchive::_internal_unset() const {
  return unset_;
}
inline bool SpecSetStringArchive::unset() const {
  // @@protoc_insertion_point(field_get:TSSSOS.SpecSetStringArchive.unset)
  return _internal_unset();
}
inline void SpecSetStringArchive::_internal_set_unset(bool value) {
  _has_bits_[0] |= 0x00000002u;
  unset_ = value;
}
inline void SpecSetStringArchive::set_unset(bool value) {
  _internal_set_unset(value);
  // @@protoc_insertion_point(field_set:TSSSOS.SpecSetStringArchive.unset)
}

// -------------------------------------------------------------------

// SpecBoolArchive

// optional .TSSSOS.SpecSetBoolArchive spec_set_bool = 1;
inline bool SpecBoolArchive::_internal_has_spec_set_bool() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || spec_set_bool_ != nullptr);
  return value;
}
inline bool SpecBoolArchive::has_spec_set_bool() const {
  return _internal_has_spec_set_bool();
}
inline void SpecBoolArchive::clear_spec_set_bool() {
  if (spec_set_bool_ != nullptr) spec_set_bool_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::TSSSOS::SpecSetBoolArchive& SpecBoolArchive::_internal_spec_set_bool() const {
  const ::TSSSOS::SpecSetBoolArchive* p = spec_set_bool_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecSetBoolArchive&>(
      ::TSSSOS::_SpecSetBoolArchive_default_instance_);
}
inline const ::TSSSOS::SpecSetBoolArchive& SpecBoolArchive::spec_set_bool() const {
  // @@protoc_insertion_point(field_get:TSSSOS.SpecBoolArchive.spec_set_bool)
  return _internal_spec_set_bool();
}
inline void SpecBoolArchive::unsafe_arena_set_allocated_spec_set_bool(
    ::TSSSOS::SpecSetBoolArchive* spec_set_bool) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spec_set_bool_);
  }
  spec_set_bool_ = spec_set_bool;
  if (spec_set_bool) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSSSOS.SpecBoolArchive.spec_set_bool)
}
inline ::TSSSOS::SpecSetBoolArchive* SpecBoolArchive::release_spec_set_bool() {
  _has_bits_[0] &= ~0x00000001u;
  ::TSSSOS::SpecSetBoolArchive* temp = spec_set_bool_;
  spec_set_bool_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecSetBoolArchive* SpecBoolArchive::unsafe_arena_release_spec_set_bool() {
  // @@protoc_insertion_point(field_release:TSSSOS.SpecBoolArchive.spec_set_bool)
  _has_bits_[0] &= ~0x00000001u;
  ::TSSSOS::SpecSetBoolArchive* temp = spec_set_bool_;
  spec_set_bool_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecSetBoolArchive* SpecBoolArchive::_internal_mutable_spec_set_bool() {
  _has_bits_[0] |= 0x00000001u;
  if (spec_set_bool_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecSetBoolArchive>(GetArenaForAllocation());
    spec_set_bool_ = p;
  }
  return spec_set_bool_;
}
inline ::TSSSOS::SpecSetBoolArchive* SpecBoolArchive::mutable_spec_set_bool() {
  ::TSSSOS::SpecSetBoolArchive* _msg = _internal_mutable_spec_set_bool();
  // @@protoc_insertion_point(field_mutable:TSSSOS.SpecBoolArchive.spec_set_bool)
  return _msg;
}
inline void SpecBoolArchive::set_allocated_spec_set_bool(::TSSSOS::SpecSetBoolArchive* spec_set_bool) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete spec_set_bool_;
  }
  if (spec_set_bool) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TSSSOS::SpecSetBoolArchive>::GetOwningArena(spec_set_bool);
    if (message_arena != submessage_arena) {
      spec_set_bool = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_set_bool, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  spec_set_bool_ = spec_set_bool;
  // @@protoc_insertion_point(field_set_allocated:TSSSOS.SpecBoolArchive.spec_set_bool)
}

// -------------------------------------------------------------------

// SpecColorArchive

// optional .TSSSOS.SpecSetColorArchive spec_set_color = 1;
inline bool SpecColorArchive::_internal_has_spec_set_color() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || spec_set_color_ != nullptr);
  return value;
}
inline bool SpecColorArchive::has_spec_set_color() const {
  return _internal_has_spec_set_color();
}
inline void SpecColorArchive::clear_spec_set_color() {
  if (spec_set_color_ != nullptr) spec_set_color_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::TSSSOS::SpecSetColorArchive& SpecColorArchive::_internal_spec_set_color() const {
  const ::TSSSOS::SpecSetColorArchive* p = spec_set_color_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecSetColorArchive&>(
      ::TSSSOS::_SpecSetColorArchive_default_instance_);
}
inline const ::TSSSOS::SpecSetColorArchive& SpecColorArchive::spec_set_color() const {
  // @@protoc_insertion_point(field_get:TSSSOS.SpecColorArchive.spec_set_color)
  return _internal_spec_set_color();
}
inline void SpecColorArchive::unsafe_arena_set_allocated_spec_set_color(
    ::TSSSOS::SpecSetColorArchive* spec_set_color) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spec_set_color_);
  }
  spec_set_color_ = spec_set_color;
  if (spec_set_color) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSSSOS.SpecColorArchive.spec_set_color)
}
inline ::TSSSOS::SpecSetColorArchive* SpecColorArchive::release_spec_set_color() {
  _has_bits_[0] &= ~0x00000001u;
  ::TSSSOS::SpecSetColorArchive* temp = spec_set_color_;
  spec_set_color_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecSetColorArchive* SpecColorArchive::unsafe_arena_release_spec_set_color() {
  // @@protoc_insertion_point(field_release:TSSSOS.SpecColorArchive.spec_set_color)
  _has_bits_[0] &= ~0x00000001u;
  ::TSSSOS::SpecSetColorArchive* temp = spec_set_color_;
  spec_set_color_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecSetColorArchive* SpecColorArchive::_internal_mutable_spec_set_color() {
  _has_bits_[0] |= 0x00000001u;
  if (spec_set_color_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecSetColorArchive>(GetArenaForAllocation());
    spec_set_color_ = p;
  }
  return spec_set_color_;
}
inline ::TSSSOS::SpecSetColorArchive* SpecColorArchive::mutable_spec_set_color() {
  ::TSSSOS::SpecSetColorArchive* _msg = _internal_mutable_spec_set_color();
  // @@protoc_insertion_point(field_mutable:TSSSOS.SpecColorArchive.spec_set_color)
  return _msg;
}
inline void SpecColorArchive::set_allocated_spec_set_color(::TSSSOS::SpecSetColorArchive* spec_set_color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete spec_set_color_;
  }
  if (spec_set_color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TSSSOS::SpecSetColorArchive>::GetOwningArena(spec_set_color);
    if (message_arena != submessage_arena) {
      spec_set_color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_set_color, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  spec_set_color_ = spec_set_color;
  // @@protoc_insertion_point(field_set_allocated:TSSSOS.SpecColorArchive.spec_set_color)
}

// -------------------------------------------------------------------

// SpecDoubleArchive

// optional .TSSSOS.SpecSetDoubleArchive spec_set_double = 1;
inline bool SpecDoubleArchive::_internal_has_spec_set_double() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || spec_set_double_ != nullptr);
  return value;
}
inline bool SpecDoubleArchive::has_spec_set_double() const {
  return _internal_has_spec_set_double();
}
inline void SpecDoubleArchive::clear_spec_set_double() {
  if (spec_set_double_ != nullptr) spec_set_double_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::TSSSOS::SpecSetDoubleArchive& SpecDoubleArchive::_internal_spec_set_double() const {
  const ::TSSSOS::SpecSetDoubleArchive* p = spec_set_double_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecSetDoubleArchive&>(
      ::TSSSOS::_SpecSetDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecSetDoubleArchive& SpecDoubleArchive::spec_set_double() const {
  // @@protoc_insertion_point(field_get:TSSSOS.SpecDoubleArchive.spec_set_double)
  return _internal_spec_set_double();
}
inline void SpecDoubleArchive::unsafe_arena_set_allocated_spec_set_double(
    ::TSSSOS::SpecSetDoubleArchive* spec_set_double) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spec_set_double_);
  }
  spec_set_double_ = spec_set_double;
  if (spec_set_double) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSSSOS.SpecDoubleArchive.spec_set_double)
}
inline ::TSSSOS::SpecSetDoubleArchive* SpecDoubleArchive::release_spec_set_double() {
  _has_bits_[0] &= ~0x00000001u;
  ::TSSSOS::SpecSetDoubleArchive* temp = spec_set_double_;
  spec_set_double_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecSetDoubleArchive* SpecDoubleArchive::unsafe_arena_release_spec_set_double() {
  // @@protoc_insertion_point(field_release:TSSSOS.SpecDoubleArchive.spec_set_double)
  _has_bits_[0] &= ~0x00000001u;
  ::TSSSOS::SpecSetDoubleArchive* temp = spec_set_double_;
  spec_set_double_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecSetDoubleArchive* SpecDoubleArchive::_internal_mutable_spec_set_double() {
  _has_bits_[0] |= 0x00000001u;
  if (spec_set_double_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecSetDoubleArchive>(GetArenaForAllocation());
    spec_set_double_ = p;
  }
  return spec_set_double_;
}
inline ::TSSSOS::SpecSetDoubleArchive* SpecDoubleArchive::mutable_spec_set_double() {
  ::TSSSOS::SpecSetDoubleArchive* _msg = _internal_mutable_spec_set_double();
  // @@protoc_insertion_point(field_mutable:TSSSOS.SpecDoubleArchive.spec_set_double)
  return _msg;
}
inline void SpecDoubleArchive::set_allocated_spec_set_double(::TSSSOS::SpecSetDoubleArchive* spec_set_double) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete spec_set_double_;
  }
  if (spec_set_double) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TSSSOS::SpecSetDoubleArchive>::GetOwningArena(spec_set_double);
    if (message_arena != submessage_arena) {
      spec_set_double = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_set_double, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  spec_set_double_ = spec_set_double;
  // @@protoc_insertion_point(field_set_allocated:TSSSOS.SpecDoubleArchive.spec_set_double)
}

// -------------------------------------------------------------------

// SpecIntegerArchive

// optional .TSSSOS.SpecSetIntegerArchive spec_set_integer = 1;
inline bool SpecIntegerArchive::_internal_has_spec_set_integer() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || spec_set_integer_ != nullptr);
  return value;
}
inline bool SpecIntegerArchive::has_spec_set_integer() const {
  return _internal_has_spec_set_integer();
}
inline void SpecIntegerArchive::clear_spec_set_integer() {
  if (spec_set_integer_ != nullptr) spec_set_integer_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::TSSSOS::SpecSetIntegerArchive& SpecIntegerArchive::_internal_spec_set_integer() const {
  const ::TSSSOS::SpecSetIntegerArchive* p = spec_set_integer_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecSetIntegerArchive&>(
      ::TSSSOS::_SpecSetIntegerArchive_default_instance_);
}
inline const ::TSSSOS::SpecSetIntegerArchive& SpecIntegerArchive::spec_set_integer() const {
  // @@protoc_insertion_point(field_get:TSSSOS.SpecIntegerArchive.spec_set_integer)
  return _internal_spec_set_integer();
}
inline void SpecIntegerArchive::unsafe_arena_set_allocated_spec_set_integer(
    ::TSSSOS::SpecSetIntegerArchive* spec_set_integer) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spec_set_integer_);
  }
  spec_set_integer_ = spec_set_integer;
  if (spec_set_integer) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSSSOS.SpecIntegerArchive.spec_set_integer)
}
inline ::TSSSOS::SpecSetIntegerArchive* SpecIntegerArchive::release_spec_set_integer() {
  _has_bits_[0] &= ~0x00000001u;
  ::TSSSOS::SpecSetIntegerArchive* temp = spec_set_integer_;
  spec_set_integer_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecSetIntegerArchive* SpecIntegerArchive::unsafe_arena_release_spec_set_integer() {
  // @@protoc_insertion_point(field_release:TSSSOS.SpecIntegerArchive.spec_set_integer)
  _has_bits_[0] &= ~0x00000001u;
  ::TSSSOS::SpecSetIntegerArchive* temp = spec_set_integer_;
  spec_set_integer_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecSetIntegerArchive* SpecIntegerArchive::_internal_mutable_spec_set_integer() {
  _has_bits_[0] |= 0x00000001u;
  if (spec_set_integer_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecSetIntegerArchive>(GetArenaForAllocation());
    spec_set_integer_ = p;
  }
  return spec_set_integer_;
}
inline ::TSSSOS::SpecSetIntegerArchive* SpecIntegerArchive::mutable_spec_set_integer() {
  ::TSSSOS::SpecSetIntegerArchive* _msg = _internal_mutable_spec_set_integer();
  // @@protoc_insertion_point(field_mutable:TSSSOS.SpecIntegerArchive.spec_set_integer)
  return _msg;
}
inline void SpecIntegerArchive::set_allocated_spec_set_integer(::TSSSOS::SpecSetIntegerArchive* spec_set_integer) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete spec_set_integer_;
  }
  if (spec_set_integer) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TSSSOS::SpecSetIntegerArchive>::GetOwningArena(spec_set_integer);
    if (message_arena != submessage_arena) {
      spec_set_integer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_set_integer, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  spec_set_integer_ = spec_set_integer;
  // @@protoc_insertion_point(field_set_allocated:TSSSOS.SpecIntegerArchive.spec_set_integer)
}

// -------------------------------------------------------------------

// SpecStringArchive

// optional .TSSSOS.SpecSetStringArchive spec_set_string = 1;
inline bool SpecStringArchive::_internal_has_spec_set_string() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || spec_set_string_ != nullptr);
  return value;
}
inline bool SpecStringArchive::has_spec_set_string() const {
  return _internal_has_spec_set_string();
}
inline void SpecStringArchive::clear_spec_set_string() {
  if (spec_set_string_ != nullptr) spec_set_string_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::TSSSOS::SpecSetStringArchive& SpecStringArchive::_internal_spec_set_string() const {
  const ::TSSSOS::SpecSetStringArchive* p = spec_set_string_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecSetStringArchive&>(
      ::TSSSOS::_SpecSetStringArchive_default_instance_);
}
inline const ::TSSSOS::SpecSetStringArchive& SpecStringArchive::spec_set_string() const {
  // @@protoc_insertion_point(field_get:TSSSOS.SpecStringArchive.spec_set_string)
  return _internal_spec_set_string();
}
inline void SpecStringArchive::unsafe_arena_set_allocated_spec_set_string(
    ::TSSSOS::SpecSetStringArchive* spec_set_string) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spec_set_string_);
  }
  spec_set_string_ = spec_set_string;
  if (spec_set_string) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSSSOS.SpecStringArchive.spec_set_string)
}
inline ::TSSSOS::SpecSetStringArchive* SpecStringArchive::release_spec_set_string() {
  _has_bits_[0] &= ~0x00000001u;
  ::TSSSOS::SpecSetStringArchive* temp = spec_set_string_;
  spec_set_string_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecSetStringArchive* SpecStringArchive::unsafe_arena_release_spec_set_string() {
  // @@protoc_insertion_point(field_release:TSSSOS.SpecStringArchive.spec_set_string)
  _has_bits_[0] &= ~0x00000001u;
  ::TSSSOS::SpecSetStringArchive* temp = spec_set_string_;
  spec_set_string_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecSetStringArchive* SpecStringArchive::_internal_mutable_spec_set_string() {
  _has_bits_[0] |= 0x00000001u;
  if (spec_set_string_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecSetStringArchive>(GetArenaForAllocation());
    spec_set_string_ = p;
  }
  return spec_set_string_;
}
inline ::TSSSOS::SpecSetStringArchive* SpecStringArchive::mutable_spec_set_string() {
  ::TSSSOS::SpecSetStringArchive* _msg = _internal_mutable_spec_set_string();
  // @@protoc_insertion_point(field_mutable:TSSSOS.SpecStringArchive.spec_set_string)
  return _msg;
}
inline void SpecStringArchive::set_allocated_spec_set_string(::TSSSOS::SpecSetStringArchive* spec_set_string) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete spec_set_string_;
  }
  if (spec_set_string) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::TSSSOS::SpecSetStringArchive>::GetOwningArena(spec_set_string);
    if (message_arena != submessage_arena) {
      spec_set_string = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_set_string, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  spec_set_string_ = spec_set_string;
  // @@protoc_insertion_point(field_set_allocated:TSSSOS.SpecStringArchive.spec_set_string)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace TSSSOS

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_TSSArchives_2esos_2eproto
