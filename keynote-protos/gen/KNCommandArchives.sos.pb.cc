// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KNCommandArchives.sos.proto

#include "KNCommandArchives.sos.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace KNSOS {
constexpr InducedVerifyDocumentWithServerCommandArchive::InducedVerifyDocumentWithServerCommandArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : slide_node_id_list_()
  , template_slide_node_id_list_()
  , super_(nullptr)
  , slide_node_id_list_undefined_(false)
  , template_slide_node_id_list_undefined_(false){}
struct InducedVerifyDocumentWithServerCommandArchiveDefaultTypeInternal {
  constexpr InducedVerifyDocumentWithServerCommandArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~InducedVerifyDocumentWithServerCommandArchiveDefaultTypeInternal() {}
  union {
    InducedVerifyDocumentWithServerCommandArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT InducedVerifyDocumentWithServerCommandArchiveDefaultTypeInternal _InducedVerifyDocumentWithServerCommandArchive_default_instance_;
constexpr InducedVerifyDrawableZOrdersWithServerCommandArchive::InducedVerifyDrawableZOrdersWithServerCommandArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : super_(nullptr){}
struct InducedVerifyDrawableZOrdersWithServerCommandArchiveDefaultTypeInternal {
  constexpr InducedVerifyDrawableZOrdersWithServerCommandArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~InducedVerifyDrawableZOrdersWithServerCommandArchiveDefaultTypeInternal() {}
  union {
    InducedVerifyDrawableZOrdersWithServerCommandArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT InducedVerifyDrawableZOrdersWithServerCommandArchiveDefaultTypeInternal _InducedVerifyDrawableZOrdersWithServerCommandArchive_default_instance_;
constexpr CommandSlideReapplyTemplateSlideArchive::CommandSlideReapplyTemplateSlideArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : super_(nullptr){}
struct CommandSlideReapplyTemplateSlideArchiveDefaultTypeInternal {
  constexpr CommandSlideReapplyTemplateSlideArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CommandSlideReapplyTemplateSlideArchiveDefaultTypeInternal() {}
  union {
    CommandSlideReapplyTemplateSlideArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CommandSlideReapplyTemplateSlideArchiveDefaultTypeInternal _CommandSlideReapplyTemplateSlideArchive_default_instance_;
}  // namespace KNSOS
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_KNCommandArchives_2esos_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_KNCommandArchives_2esos_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_KNCommandArchives_2esos_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_KNCommandArchives_2esos_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::KNSOS::InducedVerifyDocumentWithServerCommandArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::KNSOS::InducedVerifyDocumentWithServerCommandArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::KNSOS::InducedVerifyDocumentWithServerCommandArchive, super_),
  PROTOBUF_FIELD_OFFSET(::KNSOS::InducedVerifyDocumentWithServerCommandArchive, slide_node_id_list_),
  PROTOBUF_FIELD_OFFSET(::KNSOS::InducedVerifyDocumentWithServerCommandArchive, slide_node_id_list_undefined_),
  PROTOBUF_FIELD_OFFSET(::KNSOS::InducedVerifyDocumentWithServerCommandArchive, template_slide_node_id_list_),
  PROTOBUF_FIELD_OFFSET(::KNSOS::InducedVerifyDocumentWithServerCommandArchive, template_slide_node_id_list_undefined_),
  0,
  ~0u,
  1,
  ~0u,
  2,
  PROTOBUF_FIELD_OFFSET(::KNSOS::InducedVerifyDrawableZOrdersWithServerCommandArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::KNSOS::InducedVerifyDrawableZOrdersWithServerCommandArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::KNSOS::InducedVerifyDrawableZOrdersWithServerCommandArchive, super_),
  0,
  PROTOBUF_FIELD_OFFSET(::KNSOS::CommandSlideReapplyTemplateSlideArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::KNSOS::CommandSlideReapplyTemplateSlideArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::KNSOS::CommandSlideReapplyTemplateSlideArchive, super_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::KNSOS::InducedVerifyDocumentWithServerCommandArchive)},
  { 15, 21, sizeof(::KNSOS::InducedVerifyDrawableZOrdersWithServerCommandArchive)},
  { 22, 28, sizeof(::KNSOS::CommandSlideReapplyTemplateSlideArchive)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::KNSOS::_InducedVerifyDocumentWithServerCommandArchive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::KNSOS::_InducedVerifyDrawableZOrdersWithServerCommandArchive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::KNSOS::_CommandSlideReapplyTemplateSlideArchive_default_instance_),
};

const char descriptor_table_protodef_KNCommandArchives_2esos_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\033KNCommandArchives.sos.proto\022\005KNSOS\032\034TS"
  "ACommandArchives.sos.proto\032\021TSKArchives."
  "proto\032\021TSPMessages.proto\"\377\001\n-InducedVeri"
  "fyDocumentWithServerCommandArchive\022\"\n\005su"
  "per\030\001 \002(\0132\023.TSK.CommandArchive\022%\n\022slide_"
  "node_id_list\030\002 \003(\0132\t.TSP.UUID\022$\n\034slide_n"
  "ode_id_list_undefined\030\003 \001(\010\022.\n\033template_"
  "slide_node_id_list\030\004 \003(\0132\t.TSP.UUID\022-\n%t"
  "emplate_slide_node_id_list_undefined\030\005 \001"
  "(\010\"\203\001\n4InducedVerifyDrawableZOrdersWithS"
  "erverCommandArchive\022K\n\005super\030\001 \002(\0132<.TSA"
  "SOS.InducedVerifyDrawableZOrdersWithServ"
  "erCommandArchive\"]\n\'CommandSlideReapplyT"
  "emplateSlideArchive\0222\n\005super\030\001 \002(\0132#.TSA"
  "SOS.CommandReapplyMasterArchive"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_KNCommandArchives_2esos_2eproto_deps[3] = {
  &::descriptor_table_TSACommandArchives_2esos_2eproto,
  &::descriptor_table_TSKArchives_2eproto,
  &::descriptor_table_TSPMessages_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_KNCommandArchives_2esos_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_KNCommandArchives_2esos_2eproto = {
  false, false, 591, descriptor_table_protodef_KNCommandArchives_2esos_2eproto, "KNCommandArchives.sos.proto", 
  &descriptor_table_KNCommandArchives_2esos_2eproto_once, descriptor_table_KNCommandArchives_2esos_2eproto_deps, 3, 3,
  schemas, file_default_instances, TableStruct_KNCommandArchives_2esos_2eproto::offsets,
  file_level_metadata_KNCommandArchives_2esos_2eproto, file_level_enum_descriptors_KNCommandArchives_2esos_2eproto, file_level_service_descriptors_KNCommandArchives_2esos_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_KNCommandArchives_2esos_2eproto_getter() {
  return &descriptor_table_KNCommandArchives_2esos_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_KNCommandArchives_2esos_2eproto(&descriptor_table_KNCommandArchives_2esos_2eproto);
namespace KNSOS {

// ===================================================================

class InducedVerifyDocumentWithServerCommandArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<InducedVerifyDocumentWithServerCommandArchive>()._has_bits_);
  static const ::TSK::CommandArchive& super(const InducedVerifyDocumentWithServerCommandArchive* msg);
  static void set_has_super(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_slide_node_id_list_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_template_slide_node_id_list_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::TSK::CommandArchive&
InducedVerifyDocumentWithServerCommandArchive::_Internal::super(const InducedVerifyDocumentWithServerCommandArchive* msg) {
  return *msg->super_;
}
void InducedVerifyDocumentWithServerCommandArchive::clear_super() {
  if (super_ != nullptr) super_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void InducedVerifyDocumentWithServerCommandArchive::clear_slide_node_id_list() {
  slide_node_id_list_.Clear();
}
void InducedVerifyDocumentWithServerCommandArchive::clear_template_slide_node_id_list() {
  template_slide_node_id_list_.Clear();
}
InducedVerifyDocumentWithServerCommandArchive::InducedVerifyDocumentWithServerCommandArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  slide_node_id_list_(arena),
  template_slide_node_id_list_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:KNSOS.InducedVerifyDocumentWithServerCommandArchive)
}
InducedVerifyDocumentWithServerCommandArchive::InducedVerifyDocumentWithServerCommandArchive(const InducedVerifyDocumentWithServerCommandArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      slide_node_id_list_(from.slide_node_id_list_),
      template_slide_node_id_list_(from.template_slide_node_id_list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_super()) {
    super_ = new ::TSK::CommandArchive(*from.super_);
  } else {
    super_ = nullptr;
  }
  ::memcpy(&slide_node_id_list_undefined_, &from.slide_node_id_list_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&template_slide_node_id_list_undefined_) -
    reinterpret_cast<char*>(&slide_node_id_list_undefined_)) + sizeof(template_slide_node_id_list_undefined_));
  // @@protoc_insertion_point(copy_constructor:KNSOS.InducedVerifyDocumentWithServerCommandArchive)
}

void InducedVerifyDocumentWithServerCommandArchive::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&super_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&template_slide_node_id_list_undefined_) -
    reinterpret_cast<char*>(&super_)) + sizeof(template_slide_node_id_list_undefined_));
}

InducedVerifyDocumentWithServerCommandArchive::~InducedVerifyDocumentWithServerCommandArchive() {
  // @@protoc_insertion_point(destructor:KNSOS.InducedVerifyDocumentWithServerCommandArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InducedVerifyDocumentWithServerCommandArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete super_;
}

void InducedVerifyDocumentWithServerCommandArchive::ArenaDtor(void* object) {
  InducedVerifyDocumentWithServerCommandArchive* _this = reinterpret_cast< InducedVerifyDocumentWithServerCommandArchive* >(object);
  (void)_this;
}
void InducedVerifyDocumentWithServerCommandArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InducedVerifyDocumentWithServerCommandArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InducedVerifyDocumentWithServerCommandArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:KNSOS.InducedVerifyDocumentWithServerCommandArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slide_node_id_list_.Clear();
  template_slide_node_id_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(super_ != nullptr);
    super_->Clear();
  }
  ::memset(&slide_node_id_list_undefined_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&template_slide_node_id_list_undefined_) -
      reinterpret_cast<char*>(&slide_node_id_list_undefined_)) + sizeof(template_slide_node_id_list_undefined_));
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InducedVerifyDocumentWithServerCommandArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TSK.CommandArchive super = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_super(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .TSP.UUID slide_node_id_list = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_slide_node_id_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bool slide_node_id_list_undefined = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_slide_node_id_list_undefined(&has_bits);
          slide_node_id_list_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .TSP.UUID template_slide_node_id_list = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_template_slide_node_id_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bool template_slide_node_id_list_undefined = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_template_slide_node_id_list_undefined(&has_bits);
          template_slide_node_id_list_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InducedVerifyDocumentWithServerCommandArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:KNSOS.InducedVerifyDocumentWithServerCommandArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .TSK.CommandArchive super = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::super(this), target, stream);
  }

  // repeated .TSP.UUID slide_node_id_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_slide_node_id_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_slide_node_id_list(i), target, stream);
  }

  // optional bool slide_node_id_list_undefined = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_slide_node_id_list_undefined(), target);
  }

  // repeated .TSP.UUID template_slide_node_id_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_template_slide_node_id_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_template_slide_node_id_list(i), target, stream);
  }

  // optional bool template_slide_node_id_list_undefined = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_template_slide_node_id_list_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KNSOS.InducedVerifyDocumentWithServerCommandArchive)
  return target;
}

size_t InducedVerifyDocumentWithServerCommandArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KNSOS.InducedVerifyDocumentWithServerCommandArchive)
  size_t total_size = 0;

  // required .TSK.CommandArchive super = 1;
  if (_internal_has_super()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *super_);
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TSP.UUID slide_node_id_list = 2;
  total_size += 1UL * this->_internal_slide_node_id_list_size();
  for (const auto& msg : this->slide_node_id_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .TSP.UUID template_slide_node_id_list = 4;
  total_size += 1UL * this->_internal_template_slide_node_id_list_size();
  for (const auto& msg : this->template_slide_node_id_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000006u) {
    // optional bool slide_node_id_list_undefined = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool template_slide_node_id_list_undefined = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InducedVerifyDocumentWithServerCommandArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KNSOS.InducedVerifyDocumentWithServerCommandArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const InducedVerifyDocumentWithServerCommandArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InducedVerifyDocumentWithServerCommandArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KNSOS.InducedVerifyDocumentWithServerCommandArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KNSOS.InducedVerifyDocumentWithServerCommandArchive)
    MergeFrom(*source);
  }
}

void InducedVerifyDocumentWithServerCommandArchive::MergeFrom(const InducedVerifyDocumentWithServerCommandArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KNSOS.InducedVerifyDocumentWithServerCommandArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  slide_node_id_list_.MergeFrom(from.slide_node_id_list_);
  template_slide_node_id_list_.MergeFrom(from.template_slide_node_id_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_super()->::TSK::CommandArchive::MergeFrom(from._internal_super());
    }
    if (cached_has_bits & 0x00000002u) {
      slide_node_id_list_undefined_ = from.slide_node_id_list_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      template_slide_node_id_list_undefined_ = from.template_slide_node_id_list_undefined_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InducedVerifyDocumentWithServerCommandArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KNSOS.InducedVerifyDocumentWithServerCommandArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InducedVerifyDocumentWithServerCommandArchive::CopyFrom(const InducedVerifyDocumentWithServerCommandArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KNSOS.InducedVerifyDocumentWithServerCommandArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InducedVerifyDocumentWithServerCommandArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(slide_node_id_list_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(template_slide_node_id_list_)) return false;
  if (_internal_has_super()) {
    if (!super_->IsInitialized()) return false;
  }
  return true;
}

void InducedVerifyDocumentWithServerCommandArchive::InternalSwap(InducedVerifyDocumentWithServerCommandArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  slide_node_id_list_.InternalSwap(&other->slide_node_id_list_);
  template_slide_node_id_list_.InternalSwap(&other->template_slide_node_id_list_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InducedVerifyDocumentWithServerCommandArchive, template_slide_node_id_list_undefined_)
      + sizeof(InducedVerifyDocumentWithServerCommandArchive::template_slide_node_id_list_undefined_)
      - PROTOBUF_FIELD_OFFSET(InducedVerifyDocumentWithServerCommandArchive, super_)>(
          reinterpret_cast<char*>(&super_),
          reinterpret_cast<char*>(&other->super_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InducedVerifyDocumentWithServerCommandArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_KNCommandArchives_2esos_2eproto_getter, &descriptor_table_KNCommandArchives_2esos_2eproto_once,
      file_level_metadata_KNCommandArchives_2esos_2eproto[0]);
}

// ===================================================================

class InducedVerifyDrawableZOrdersWithServerCommandArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<InducedVerifyDrawableZOrdersWithServerCommandArchive>()._has_bits_);
  static const ::TSASOS::InducedVerifyDrawableZOrdersWithServerCommandArchive& super(const InducedVerifyDrawableZOrdersWithServerCommandArchive* msg);
  static void set_has_super(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::TSASOS::InducedVerifyDrawableZOrdersWithServerCommandArchive&
InducedVerifyDrawableZOrdersWithServerCommandArchive::_Internal::super(const InducedVerifyDrawableZOrdersWithServerCommandArchive* msg) {
  return *msg->super_;
}
void InducedVerifyDrawableZOrdersWithServerCommandArchive::clear_super() {
  if (super_ != nullptr) super_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
InducedVerifyDrawableZOrdersWithServerCommandArchive::InducedVerifyDrawableZOrdersWithServerCommandArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:KNSOS.InducedVerifyDrawableZOrdersWithServerCommandArchive)
}
InducedVerifyDrawableZOrdersWithServerCommandArchive::InducedVerifyDrawableZOrdersWithServerCommandArchive(const InducedVerifyDrawableZOrdersWithServerCommandArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_super()) {
    super_ = new ::TSASOS::InducedVerifyDrawableZOrdersWithServerCommandArchive(*from.super_);
  } else {
    super_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:KNSOS.InducedVerifyDrawableZOrdersWithServerCommandArchive)
}

void InducedVerifyDrawableZOrdersWithServerCommandArchive::SharedCtor() {
super_ = nullptr;
}

InducedVerifyDrawableZOrdersWithServerCommandArchive::~InducedVerifyDrawableZOrdersWithServerCommandArchive() {
  // @@protoc_insertion_point(destructor:KNSOS.InducedVerifyDrawableZOrdersWithServerCommandArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InducedVerifyDrawableZOrdersWithServerCommandArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete super_;
}

void InducedVerifyDrawableZOrdersWithServerCommandArchive::ArenaDtor(void* object) {
  InducedVerifyDrawableZOrdersWithServerCommandArchive* _this = reinterpret_cast< InducedVerifyDrawableZOrdersWithServerCommandArchive* >(object);
  (void)_this;
}
void InducedVerifyDrawableZOrdersWithServerCommandArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InducedVerifyDrawableZOrdersWithServerCommandArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InducedVerifyDrawableZOrdersWithServerCommandArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:KNSOS.InducedVerifyDrawableZOrdersWithServerCommandArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(super_ != nullptr);
    super_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InducedVerifyDrawableZOrdersWithServerCommandArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TSASOS.InducedVerifyDrawableZOrdersWithServerCommandArchive super = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_super(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InducedVerifyDrawableZOrdersWithServerCommandArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:KNSOS.InducedVerifyDrawableZOrdersWithServerCommandArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .TSASOS.InducedVerifyDrawableZOrdersWithServerCommandArchive super = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::super(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KNSOS.InducedVerifyDrawableZOrdersWithServerCommandArchive)
  return target;
}

size_t InducedVerifyDrawableZOrdersWithServerCommandArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KNSOS.InducedVerifyDrawableZOrdersWithServerCommandArchive)
  size_t total_size = 0;

  // required .TSASOS.InducedVerifyDrawableZOrdersWithServerCommandArchive super = 1;
  if (_internal_has_super()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *super_);
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InducedVerifyDrawableZOrdersWithServerCommandArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KNSOS.InducedVerifyDrawableZOrdersWithServerCommandArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const InducedVerifyDrawableZOrdersWithServerCommandArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InducedVerifyDrawableZOrdersWithServerCommandArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KNSOS.InducedVerifyDrawableZOrdersWithServerCommandArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KNSOS.InducedVerifyDrawableZOrdersWithServerCommandArchive)
    MergeFrom(*source);
  }
}

void InducedVerifyDrawableZOrdersWithServerCommandArchive::MergeFrom(const InducedVerifyDrawableZOrdersWithServerCommandArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KNSOS.InducedVerifyDrawableZOrdersWithServerCommandArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_super()) {
    _internal_mutable_super()->::TSASOS::InducedVerifyDrawableZOrdersWithServerCommandArchive::MergeFrom(from._internal_super());
  }
}

void InducedVerifyDrawableZOrdersWithServerCommandArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KNSOS.InducedVerifyDrawableZOrdersWithServerCommandArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InducedVerifyDrawableZOrdersWithServerCommandArchive::CopyFrom(const InducedVerifyDrawableZOrdersWithServerCommandArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KNSOS.InducedVerifyDrawableZOrdersWithServerCommandArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InducedVerifyDrawableZOrdersWithServerCommandArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_super()) {
    if (!super_->IsInitialized()) return false;
  }
  return true;
}

void InducedVerifyDrawableZOrdersWithServerCommandArchive::InternalSwap(InducedVerifyDrawableZOrdersWithServerCommandArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(super_, other->super_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InducedVerifyDrawableZOrdersWithServerCommandArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_KNCommandArchives_2esos_2eproto_getter, &descriptor_table_KNCommandArchives_2esos_2eproto_once,
      file_level_metadata_KNCommandArchives_2esos_2eproto[1]);
}

// ===================================================================

class CommandSlideReapplyTemplateSlideArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<CommandSlideReapplyTemplateSlideArchive>()._has_bits_);
  static const ::TSASOS::CommandReapplyMasterArchive& super(const CommandSlideReapplyTemplateSlideArchive* msg);
  static void set_has_super(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::TSASOS::CommandReapplyMasterArchive&
CommandSlideReapplyTemplateSlideArchive::_Internal::super(const CommandSlideReapplyTemplateSlideArchive* msg) {
  return *msg->super_;
}
void CommandSlideReapplyTemplateSlideArchive::clear_super() {
  if (super_ != nullptr) super_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
CommandSlideReapplyTemplateSlideArchive::CommandSlideReapplyTemplateSlideArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:KNSOS.CommandSlideReapplyTemplateSlideArchive)
}
CommandSlideReapplyTemplateSlideArchive::CommandSlideReapplyTemplateSlideArchive(const CommandSlideReapplyTemplateSlideArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_super()) {
    super_ = new ::TSASOS::CommandReapplyMasterArchive(*from.super_);
  } else {
    super_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:KNSOS.CommandSlideReapplyTemplateSlideArchive)
}

void CommandSlideReapplyTemplateSlideArchive::SharedCtor() {
super_ = nullptr;
}

CommandSlideReapplyTemplateSlideArchive::~CommandSlideReapplyTemplateSlideArchive() {
  // @@protoc_insertion_point(destructor:KNSOS.CommandSlideReapplyTemplateSlideArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CommandSlideReapplyTemplateSlideArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete super_;
}

void CommandSlideReapplyTemplateSlideArchive::ArenaDtor(void* object) {
  CommandSlideReapplyTemplateSlideArchive* _this = reinterpret_cast< CommandSlideReapplyTemplateSlideArchive* >(object);
  (void)_this;
}
void CommandSlideReapplyTemplateSlideArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CommandSlideReapplyTemplateSlideArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CommandSlideReapplyTemplateSlideArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:KNSOS.CommandSlideReapplyTemplateSlideArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(super_ != nullptr);
    super_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommandSlideReapplyTemplateSlideArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TSASOS.CommandReapplyMasterArchive super = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_super(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CommandSlideReapplyTemplateSlideArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:KNSOS.CommandSlideReapplyTemplateSlideArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .TSASOS.CommandReapplyMasterArchive super = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::super(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KNSOS.CommandSlideReapplyTemplateSlideArchive)
  return target;
}

size_t CommandSlideReapplyTemplateSlideArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KNSOS.CommandSlideReapplyTemplateSlideArchive)
  size_t total_size = 0;

  // required .TSASOS.CommandReapplyMasterArchive super = 1;
  if (_internal_has_super()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *super_);
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommandSlideReapplyTemplateSlideArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KNSOS.CommandSlideReapplyTemplateSlideArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const CommandSlideReapplyTemplateSlideArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CommandSlideReapplyTemplateSlideArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KNSOS.CommandSlideReapplyTemplateSlideArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KNSOS.CommandSlideReapplyTemplateSlideArchive)
    MergeFrom(*source);
  }
}

void CommandSlideReapplyTemplateSlideArchive::MergeFrom(const CommandSlideReapplyTemplateSlideArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KNSOS.CommandSlideReapplyTemplateSlideArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_super()) {
    _internal_mutable_super()->::TSASOS::CommandReapplyMasterArchive::MergeFrom(from._internal_super());
  }
}

void CommandSlideReapplyTemplateSlideArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KNSOS.CommandSlideReapplyTemplateSlideArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommandSlideReapplyTemplateSlideArchive::CopyFrom(const CommandSlideReapplyTemplateSlideArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KNSOS.CommandSlideReapplyTemplateSlideArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommandSlideReapplyTemplateSlideArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_super()) {
    if (!super_->IsInitialized()) return false;
  }
  return true;
}

void CommandSlideReapplyTemplateSlideArchive::InternalSwap(CommandSlideReapplyTemplateSlideArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(super_, other->super_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CommandSlideReapplyTemplateSlideArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_KNCommandArchives_2esos_2eproto_getter, &descriptor_table_KNCommandArchives_2esos_2eproto_once,
      file_level_metadata_KNCommandArchives_2esos_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace KNSOS
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::KNSOS::InducedVerifyDocumentWithServerCommandArchive* Arena::CreateMaybeMessage< ::KNSOS::InducedVerifyDocumentWithServerCommandArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::KNSOS::InducedVerifyDocumentWithServerCommandArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::KNSOS::InducedVerifyDrawableZOrdersWithServerCommandArchive* Arena::CreateMaybeMessage< ::KNSOS::InducedVerifyDrawableZOrdersWithServerCommandArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::KNSOS::InducedVerifyDrawableZOrdersWithServerCommandArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::KNSOS::CommandSlideReapplyTemplateSlideArchive* Arena::CreateMaybeMessage< ::KNSOS::CommandSlideReapplyTemplateSlideArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::KNSOS::CommandSlideReapplyTemplateSlideArchive >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
