// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TSCHArchives.sos.proto

#include "TSCHArchives.sos.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace TSCHSOS {
constexpr SpecSetChart3dLightingPackageArchive::SpecSetChart3dLightingPackageArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : chart3d_lighting_package_(nullptr)
  , unset_(false){}
struct SpecSetChart3dLightingPackageArchiveDefaultTypeInternal {
  constexpr SpecSetChart3dLightingPackageArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SpecSetChart3dLightingPackageArchiveDefaultTypeInternal() {}
  union {
    SpecSetChart3dLightingPackageArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SpecSetChart3dLightingPackageArchiveDefaultTypeInternal _SpecSetChart3dLightingPackageArchive_default_instance_;
constexpr SpecSetChart3dVectorArchive::SpecSetChart3dVectorArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : chart3d_vector_(nullptr)
  , unset_(false){}
struct SpecSetChart3dVectorArchiveDefaultTypeInternal {
  constexpr SpecSetChart3dVectorArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SpecSetChart3dVectorArchiveDefaultTypeInternal() {}
  union {
    SpecSetChart3dVectorArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SpecSetChart3dVectorArchiveDefaultTypeInternal _SpecSetChart3dVectorArchive_default_instance_;
constexpr SpecSetChartErrorBarCustomDataArchive::SpecSetChartErrorBarCustomDataArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : chart_error_bar_custom_data_(nullptr)
  , unset_(false){}
struct SpecSetChartErrorBarCustomDataArchiveDefaultTypeInternal {
  constexpr SpecSetChartErrorBarCustomDataArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SpecSetChartErrorBarCustomDataArchiveDefaultTypeInternal() {}
  union {
    SpecSetChartErrorBarCustomDataArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SpecSetChartErrorBarCustomDataArchiveDefaultTypeInternal _SpecSetChartErrorBarCustomDataArchive_default_instance_;
constexpr SpecSetChartsOptionalDoubleArchiveArchive::SpecSetChartsOptionalDoubleArchiveArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : charts_optional_double_archive_(nullptr)
  , unset_(false){}
struct SpecSetChartsOptionalDoubleArchiveArchiveDefaultTypeInternal {
  constexpr SpecSetChartsOptionalDoubleArchiveArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SpecSetChartsOptionalDoubleArchiveArchiveDefaultTypeInternal() {}
  union {
    SpecSetChartsOptionalDoubleArchiveArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SpecSetChartsOptionalDoubleArchiveArchiveDefaultTypeInternal _SpecSetChartsOptionalDoubleArchiveArchive_default_instance_;
constexpr SpecSetFormatObjectArchive::SpecSetFormatObjectArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : format_object_(nullptr)
  , unset_(false){}
struct SpecSetFormatObjectArchiveDefaultTypeInternal {
  constexpr SpecSetFormatObjectArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SpecSetFormatObjectArchiveDefaultTypeInternal() {}
  union {
    SpecSetFormatObjectArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SpecSetFormatObjectArchiveDefaultTypeInternal _SpecSetFormatObjectArchive_default_instance_;
constexpr SpecSetNumberFormatArchive::SpecSetNumberFormatArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : number_format_(nullptr)
  , unset_(false){}
struct SpecSetNumberFormatArchiveDefaultTypeInternal {
  constexpr SpecSetNumberFormatArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SpecSetNumberFormatArchiveDefaultTypeInternal() {}
  union {
    SpecSetNumberFormatArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SpecSetNumberFormatArchiveDefaultTypeInternal _SpecSetNumberFormatArchive_default_instance_;
constexpr SpecChart3dLightingPackageArchive::SpecChart3dLightingPackageArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : spec_set_chart3d_lighting_package_(nullptr){}
struct SpecChart3dLightingPackageArchiveDefaultTypeInternal {
  constexpr SpecChart3dLightingPackageArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SpecChart3dLightingPackageArchiveDefaultTypeInternal() {}
  union {
    SpecChart3dLightingPackageArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SpecChart3dLightingPackageArchiveDefaultTypeInternal _SpecChart3dLightingPackageArchive_default_instance_;
constexpr SpecChart3dVectorArchive::SpecChart3dVectorArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : spec_set_chart3d_vector_(nullptr){}
struct SpecChart3dVectorArchiveDefaultTypeInternal {
  constexpr SpecChart3dVectorArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SpecChart3dVectorArchiveDefaultTypeInternal() {}
  union {
    SpecChart3dVectorArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SpecChart3dVectorArchiveDefaultTypeInternal _SpecChart3dVectorArchive_default_instance_;
constexpr SpecChartErrorBarCustomDataArchive::SpecChartErrorBarCustomDataArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : spec_set_chart_error_bar_custom_data_(nullptr){}
struct SpecChartErrorBarCustomDataArchiveDefaultTypeInternal {
  constexpr SpecChartErrorBarCustomDataArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SpecChartErrorBarCustomDataArchiveDefaultTypeInternal() {}
  union {
    SpecChartErrorBarCustomDataArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SpecChartErrorBarCustomDataArchiveDefaultTypeInternal _SpecChartErrorBarCustomDataArchive_default_instance_;
constexpr SpecChartsOptionalDoubleArchiveArchive::SpecChartsOptionalDoubleArchiveArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : spec_set_charts_optional_double_archive_(nullptr){}
struct SpecChartsOptionalDoubleArchiveArchiveDefaultTypeInternal {
  constexpr SpecChartsOptionalDoubleArchiveArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SpecChartsOptionalDoubleArchiveArchiveDefaultTypeInternal() {}
  union {
    SpecChartsOptionalDoubleArchiveArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SpecChartsOptionalDoubleArchiveArchiveDefaultTypeInternal _SpecChartsOptionalDoubleArchiveArchive_default_instance_;
constexpr SpecFormatObjectArchive::SpecFormatObjectArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : spec_set_format_object_(nullptr){}
struct SpecFormatObjectArchiveDefaultTypeInternal {
  constexpr SpecFormatObjectArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SpecFormatObjectArchiveDefaultTypeInternal() {}
  union {
    SpecFormatObjectArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SpecFormatObjectArchiveDefaultTypeInternal _SpecFormatObjectArchive_default_instance_;
constexpr SpecNumberFormatArchive::SpecNumberFormatArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : spec_set_number_format_(nullptr){}
struct SpecNumberFormatArchiveDefaultTypeInternal {
  constexpr SpecNumberFormatArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SpecNumberFormatArchiveDefaultTypeInternal() {}
  union {
    SpecNumberFormatArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SpecNumberFormatArchiveDefaultTypeInternal _SpecNumberFormatArchive_default_instance_;
constexpr ChartAxisNonStylePropertyChangeSetArchive::ChartAxisNonStylePropertyChangeSetArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : default10_date_format_(nullptr)
  , default10_number_format_(nullptr)
  , default3d_label_position_(nullptr)
  , default_date_format_(nullptr)
  , default_duration_format_(nullptr)
  , default_number_format_(nullptr)
  , default_number_format_type_(nullptr)
  , value_number_of_decades_(nullptr)
  , value_number_of_major_gridlines_(nullptr)
  , value_number_of_minor_gridlines_(nullptr)
  , category_plot_to_edges_(nullptr)
  , value_scale_(nullptr)
  , category_show_labels_(nullptr)
  , default_show_labels_(nullptr)
  , value_show_labels_(nullptr)
  , category_show_series_labels_(nullptr)
  , multi_data_show_series_labels_(nullptr)
  , category_show_title_(nullptr)
  , value_show_title_(nullptr)
  , category_title_(nullptr)
  , value_title_(nullptr)
  , default_user_max_(nullptr)
  , default_user_min_(nullptr)
  , default10_date_format_undefined_(false)
  , default10_number_format_undefined_(false)
  , default3d_label_position_undefined_(false)
  , default_date_format_undefined_(false)
  , default_duration_format_undefined_(false)
  , default_number_format_undefined_(false)
  , default_number_format_type_undefined_(false)
  , value_number_of_decades_undefined_(false)
  , value_number_of_major_gridlines_undefined_(false)
  , value_number_of_minor_gridlines_undefined_(false)
  , category_plot_to_edges_undefined_(false)
  , value_scale_undefined_(false)
  , category_show_labels_undefined_(false)
  , default_show_labels_undefined_(false)
  , value_show_labels_undefined_(false)
  , category_show_series_labels_undefined_(false)
  , multi_data_show_series_labels_undefined_(false)
  , category_show_title_undefined_(false)
  , value_show_title_undefined_(false)
  , category_title_undefined_(false)
  , value_title_undefined_(false)
  , default_user_max_undefined_(false)
  , default_user_min_undefined_(false){}
struct ChartAxisNonStylePropertyChangeSetArchiveDefaultTypeInternal {
  constexpr ChartAxisNonStylePropertyChangeSetArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ChartAxisNonStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ChartAxisNonStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ChartAxisNonStylePropertyChangeSetArchiveDefaultTypeInternal _ChartAxisNonStylePropertyChangeSetArchive_default_instance_;
constexpr ChartAxisStylePropertyChangeSetArchive::ChartAxisStylePropertyChangeSetArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : category3d_gridline_opacity_(nullptr)
  , value3d_gridline_opacity_(nullptr)
  , category3d_gridline_stroke_(nullptr)
  , value3d_gridline_stroke_(nullptr)
  , category_horizontal_spacing_(nullptr)
  , category_label_paragraph_style_index_(nullptr)
  , default_label_paragraph_style_index_(nullptr)
  , value_label_paragraph_style_index_(nullptr)
  , category_labels_orientation_(nullptr)
  , default_labels_orientation_(nullptr)
  , value_labels_orientation_(nullptr)
  , category_major_gridline_opacity_(nullptr)
  , value_major_gridline_opacity_(nullptr)
  , category_major_gridline_shadow_(nullptr)
  , value_major_gridline_shadow_(nullptr)
  , category_major_gridline_stroke_(nullptr)
  , value_major_gridline_stroke_(nullptr)
  , category_minor_gridline_opacity_(nullptr)
  , value_minor_gridline_opacity_(nullptr)
  , category_minor_gridline_shadow_(nullptr)
  , value_minor_gridline_shadow_(nullptr)
  , category_minor_gridline_stroke_(nullptr)
  , value_minor_gridline_stroke_(nullptr)
  , category_show_axis_(nullptr)
  , value_show_axis_(nullptr)
  , category_show_last_label_(nullptr)
  , category_show_major_gridlines_(nullptr)
  , value_show_major_gridlines_(nullptr)
  , category_show_major_tickmarks_(nullptr)
  , value_show_major_tickmarks_(nullptr)
  , value_show_minimum_label_(nullptr)
  , category_show_minor_gridlines_(nullptr)
  , value_show_minor_gridlines_(nullptr)
  , category_show_minor_tickmarks_(nullptr)
  , value_show_minor_tickmarks_(nullptr)
  , category_tickmark_location_(nullptr)
  , value_tickmark_location_(nullptr)
  , category_title_paragraph_style_index_(nullptr)
  , default_title_paragraph_style_index_(nullptr)
  , value_title_paragraph_style_index_(nullptr)
  , category_vertical_spacing_(nullptr)
  , category3d_gridline_opacity_undefined_(false)
  , value3d_gridline_opacity_undefined_(false)
  , category3d_gridline_stroke_undefined_(false)
  , value3d_gridline_stroke_undefined_(false)
  , category_horizontal_spacing_undefined_(false)
  , category_label_paragraph_style_index_undefined_(false)
  , default_label_paragraph_style_index_undefined_(false)
  , value_label_paragraph_style_index_undefined_(false)
  , category_labels_orientation_undefined_(false)
  , default_labels_orientation_undefined_(false)
  , value_labels_orientation_undefined_(false)
  , category_major_gridline_opacity_undefined_(false)
  , value_major_gridline_opacity_undefined_(false)
  , category_major_gridline_shadow_undefined_(false)
  , value_major_gridline_shadow_undefined_(false)
  , category_major_gridline_stroke_undefined_(false)
  , value_major_gridline_stroke_undefined_(false)
  , category_minor_gridline_opacity_undefined_(false)
  , value_minor_gridline_opacity_undefined_(false)
  , category_minor_gridline_shadow_undefined_(false)
  , value_minor_gridline_shadow_undefined_(false)
  , category_minor_gridline_stroke_undefined_(false)
  , value_minor_gridline_stroke_undefined_(false)
  , category_show_axis_undefined_(false)
  , value_show_axis_undefined_(false)
  , category_show_last_label_undefined_(false)
  , category_show_major_gridlines_undefined_(false)
  , value_show_major_gridlines_undefined_(false)
  , category_show_major_tickmarks_undefined_(false)
  , value_show_major_tickmarks_undefined_(false)
  , value_show_minimum_label_undefined_(false)
  , category_show_minor_gridlines_undefined_(false)
  , value_show_minor_gridlines_undefined_(false)
  , category_show_minor_tickmarks_undefined_(false)
  , value_show_minor_tickmarks_undefined_(false)
  , category_tickmark_location_undefined_(false)
  , value_tickmark_location_undefined_(false)
  , category_title_paragraph_style_index_undefined_(false)
  , default_title_paragraph_style_index_undefined_(false)
  , value_title_paragraph_style_index_undefined_(false)
  , category_vertical_spacing_undefined_(false){}
struct ChartAxisStylePropertyChangeSetArchiveDefaultTypeInternal {
  constexpr ChartAxisStylePropertyChangeSetArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ChartAxisStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ChartAxisStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ChartAxisStylePropertyChangeSetArchiveDefaultTypeInternal _ChartAxisStylePropertyChangeSetArchive_default_instance_;
constexpr ChartLegendNonStylePropertyChangeSetArchive::ChartLegendNonStylePropertyChangeSetArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ChartLegendNonStylePropertyChangeSetArchiveDefaultTypeInternal {
  constexpr ChartLegendNonStylePropertyChangeSetArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ChartLegendNonStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ChartLegendNonStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ChartLegendNonStylePropertyChangeSetArchiveDefaultTypeInternal _ChartLegendNonStylePropertyChangeSetArchive_default_instance_;
constexpr ChartLegendStylePropertyChangeSetArchive::ChartLegendStylePropertyChangeSetArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : default_fill_(nullptr)
  , default_label_paragraph_style_index_(nullptr)
  , default_opacity_(nullptr)
  , default_shadow_(nullptr)
  , default_stroke_(nullptr)
  , default_fill_undefined_(false)
  , default_label_paragraph_style_index_undefined_(false)
  , default_opacity_undefined_(false)
  , default_shadow_undefined_(false)
  , default_stroke_undefined_(false){}
struct ChartLegendStylePropertyChangeSetArchiveDefaultTypeInternal {
  constexpr ChartLegendStylePropertyChangeSetArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ChartLegendStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ChartLegendStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ChartLegendStylePropertyChangeSetArchiveDefaultTypeInternal _ChartLegendStylePropertyChangeSetArchive_default_instance_;
constexpr ChartNonStylePropertyChangeSetArchive::ChartNonStylePropertyChangeSetArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : default3d_bar_shape_(nullptr)
  , default3d_bevel_edges_(nullptr)
  , default3d_inter_set_depth_gap_(nullptr)
  , default3d_rotation_(nullptr)
  , area3d_scale_(nullptr)
  , bar3d_scale_(nullptr)
  , column3d_scale_(nullptr)
  , default3d_scale_(nullptr)
  , line3d_scale_(nullptr)
  , pie3d_scale_(nullptr)
  , default3d_viewport_(nullptr)
  , area_callout_line_type_(nullptr)
  , bar_callout_line_type_(nullptr)
  , bubble_callout_line_type_(nullptr)
  , default_callout_line_type_(nullptr)
  , line_callout_line_type_(nullptr)
  , pie_callout_line_type_(nullptr)
  , scatter_callout_line_type_(nullptr)
  , stacked_area_callout_line_type_(nullptr)
  , stacked_bar_callout_line_type_(nullptr)
  , default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_(nullptr)
  , default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_(nullptr)
  , default_data_set_name_location_(nullptr)
  , default_donut_place_title_at_center_(nullptr)
  , default_inner_radius_(nullptr)
  , default_multi_data_control_type_(nullptr)
  , default_pie_start_angle_(nullptr)
  , default_show_legend_(nullptr)
  , default_show_title_(nullptr)
  , default_skip_hidden_data_(nullptr)
  , default_title_(nullptr)
  , default3d_bar_shape_undefined_(false)
  , default3d_bevel_edges_undefined_(false)
  , default3d_inter_set_depth_gap_undefined_(false)
  , default3d_rotation_undefined_(false)
  , area3d_scale_undefined_(false)
  , bar3d_scale_undefined_(false)
  , column3d_scale_undefined_(false)
  , default3d_scale_undefined_(false)
  , line3d_scale_undefined_(false)
  , pie3d_scale_undefined_(false)
  , default3d_viewport_undefined_(false)
  , area_callout_line_type_undefined_(false)
  , bar_callout_line_type_undefined_(false)
  , bubble_callout_line_type_undefined_(false)
  , default_callout_line_type_undefined_(false)
  , line_callout_line_type_undefined_(false)
  , pie_callout_line_type_undefined_(false)
  , scatter_callout_line_type_undefined_(false)
  , stacked_area_callout_line_type_undefined_(false)
  , stacked_bar_callout_line_type_undefined_(false)
  , default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined_(false)
  , default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined_(false)
  , default_data_set_name_location_undefined_(false)
  , default_donut_place_title_at_center_undefined_(false)
  , default_inner_radius_undefined_(false)
  , default_multi_data_control_type_undefined_(false)
  , default_pie_start_angle_undefined_(false)
  , default_show_legend_undefined_(false)
  , default_show_title_undefined_(false)
  , default_skip_hidden_data_undefined_(false)
  , default_title_undefined_(false){}
struct ChartNonStylePropertyChangeSetArchiveDefaultTypeInternal {
  constexpr ChartNonStylePropertyChangeSetArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ChartNonStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ChartNonStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ChartNonStylePropertyChangeSetArchiveDefaultTypeInternal _ChartNonStylePropertyChangeSetArchive_default_instance_;
constexpr ChartReferenceLineNonStylePropertyChangeSetArchive::ChartReferenceLineNonStylePropertyChangeSetArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : default_custom_value_(nullptr)
  , default_label_(nullptr)
  , default_show_label_(nullptr)
  , default_show_line_(nullptr)
  , default_show_value_label_(nullptr)
  , default_type_(nullptr)
  , default_custom_value_undefined_(false)
  , default_label_undefined_(false)
  , default_show_label_undefined_(false)
  , default_show_line_undefined_(false)
  , default_show_value_label_undefined_(false)
  , default_type_undefined_(false){}
struct ChartReferenceLineNonStylePropertyChangeSetArchiveDefaultTypeInternal {
  constexpr ChartReferenceLineNonStylePropertyChangeSetArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ChartReferenceLineNonStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ChartReferenceLineNonStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ChartReferenceLineNonStylePropertyChangeSetArchiveDefaultTypeInternal _ChartReferenceLineNonStylePropertyChangeSetArchive_default_instance_;
constexpr ChartReferenceLineStylePropertyChangeSetArchive::ChartReferenceLineStylePropertyChangeSetArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : default_label_paragraph_style_index_(nullptr)
  , default_shadow_(nullptr)
  , default_stroke_(nullptr)
  , default_value_label_paragraph_style_index_(nullptr)
  , default_label_paragraph_style_index_undefined_(false)
  , default_shadow_undefined_(false)
  , default_stroke_undefined_(false)
  , default_value_label_paragraph_style_index_undefined_(false){}
struct ChartReferenceLineStylePropertyChangeSetArchiveDefaultTypeInternal {
  constexpr ChartReferenceLineStylePropertyChangeSetArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ChartReferenceLineStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ChartReferenceLineStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ChartReferenceLineStylePropertyChangeSetArchiveDefaultTypeInternal _ChartReferenceLineStylePropertyChangeSetArchive_default_instance_;
constexpr ChartSeriesNonStylePropertyChangeSetArchive::ChartSeriesNonStylePropertyChangeSetArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : default10_date_format_(nullptr)
  , default10_number_format_(nullptr)
  , pie10_number_format_(nullptr)
  , pie23_label_explosion_(nullptr)
  , bubble_adjustment_scale_(nullptr)
  , default_date_format_(nullptr)
  , default_duration_format_(nullptr)
  , area_enable_callout_line_(nullptr)
  , bar_enable_callout_line_(nullptr)
  , bubble_enable_callout_line_(nullptr)
  , default_enable_callout_line_(nullptr)
  , line_enable_callout_line_(nullptr)
  , pie_enable_callout_line_(nullptr)
  , scatter_enable_callout_line_(nullptr)
  , stacked_area_enable_callout_line_(nullptr)
  , stacked_bar_enable_callout_line_(nullptr)
  , default_error_bar_custom_negative_data_(nullptr)
  , default_error_bar_custom_negative_data_scatter_x_(nullptr)
  , default_error_bar_custom_positive_data_(nullptr)
  , default_error_bar_custom_positive_data_scatter_x_(nullptr)
  , default_error_bar_fixed_value_(nullptr)
  , default_error_bar_fixed_value_scatter_x_(nullptr)
  , default_error_bar_percent_value_(nullptr)
  , default_error_bar_percent_value_scatter_x_(nullptr)
  , default_error_bar_setting_(nullptr)
  , default_error_bar_setting_scatter_x_(nullptr)
  , default_error_bar_std_dev_value_(nullptr)
  , default_error_bar_std_dev_value_scatter_x_(nullptr)
  , default_error_bar_type_(nullptr)
  , default_error_bar_type_scatter_x_(nullptr)
  , pie_label_explosion_(nullptr)
  , bubble_line_type_(nullptr)
  , line_line_type_(nullptr)
  , mixed_line_line_type_(nullptr)
  , scatter_line_type_(nullptr)
  , default_number_format_(nullptr)
  , pie_number_format_(nullptr)
  , default_number_format_type_(nullptr)
  , pie_number_format_type_(nullptr)
  , stacked_percent_number_format_(nullptr)
  , default_series_type_(nullptr)
  , default_show_error_bar_(nullptr)
  , default_show_error_bar_scatter_x_(nullptr)
  , bubble_show_labels_in_front_(nullptr)
  , default_show_labels_in_front_(nullptr)
  , scatter_show_line_(nullptr)
  , bubble_show_negative_data_(nullptr)
  , bubble_show_series_labels_(nullptr)
  , pie_show_series_labels_(nullptr)
  , scatter_show_series_labels_(nullptr)
  , area_show_symbol_(nullptr)
  , line_show_symbol_(nullptr)
  , mixed_area_show_symbol_(nullptr)
  , mixed_line_show_symbol_(nullptr)
  , scatter_show_symbol_(nullptr)
  , default_show_trend_line_(nullptr)
  , area_show_value_labels_(nullptr)
  , bar_show_value_labels_(nullptr)
  , bubble_show_value_labels_(nullptr)
  , default_show_value_labels_(nullptr)
  , line_show_value_labels_(nullptr)
  , mixed_show_value_labels_(nullptr)
  , pie_show_value_labels_(nullptr)
  , scatter_show_value_labels_(nullptr)
  , bubble_size_dimension_(nullptr)
  , area_stack_labels_(nullptr)
  , bar_stack_labels_(nullptr)
  , bubble_stack_labels_(nullptr)
  , default_stack_labels_(nullptr)
  , line_stack_labels_(nullptr)
  , pie_stack_labels_(nullptr)
  , scatter_stack_labels_(nullptr)
  , stacked_area_stack_labels_(nullptr)
  , stacked_bar_stack_labels_(nullptr)
  , area_symbol_type_(nullptr)
  , line_symbol_type_(nullptr)
  , mixed_area_symbol_type_(nullptr)
  , mixed_line_symbol_type_(nullptr)
  , scatter_symbol_type_(nullptr)
  , default_trend_line_equation_offset_x_(nullptr)
  , default_trend_line_equation_offset_y_(nullptr)
  , default_trend_line_label_string_(nullptr)
  , default_trend_line_order_(nullptr)
  , default_trend_line_period_(nullptr)
  , default_trend_line_r_squared_offset_x_(nullptr)
  , default_trend_line_r_squared_offset_y_(nullptr)
  , default_trend_line_show_equation_(nullptr)
  , default_trend_line_show_label_(nullptr)
  , default_trend_line_show_r2_value_(nullptr)
  , default_trend_line_type_(nullptr)
  , bubble_value_labels_axis_(nullptr)
  , scatter_value_labels_axis_(nullptr)
  , pie_wedge_explosion_(nullptr)
  , default_y_axis_ordinal_(nullptr)
  , default10_date_format_undefined_(false)
  , default10_number_format_undefined_(false)
  , pie10_number_format_undefined_(false)
  , pie23_label_explosion_undefined_(false)
  , bubble_adjustment_scale_undefined_(false)
  , default_date_format_undefined_(false)
  , default_duration_format_undefined_(false)
  , area_enable_callout_line_undefined_(false)
  , bar_enable_callout_line_undefined_(false)
  , bubble_enable_callout_line_undefined_(false)
  , default_enable_callout_line_undefined_(false)
  , line_enable_callout_line_undefined_(false)
  , pie_enable_callout_line_undefined_(false)
  , scatter_enable_callout_line_undefined_(false)
  , stacked_area_enable_callout_line_undefined_(false)
  , stacked_bar_enable_callout_line_undefined_(false)
  , default_error_bar_custom_negative_data_undefined_(false)
  , default_error_bar_custom_negative_data_scatter_x_undefined_(false)
  , default_error_bar_custom_positive_data_undefined_(false)
  , default_error_bar_custom_positive_data_scatter_x_undefined_(false)
  , default_error_bar_fixed_value_undefined_(false)
  , default_error_bar_fixed_value_scatter_x_undefined_(false)
  , default_error_bar_percent_value_undefined_(false)
  , default_error_bar_percent_value_scatter_x_undefined_(false)
  , default_error_bar_setting_undefined_(false)
  , default_error_bar_setting_scatter_x_undefined_(false)
  , default_error_bar_std_dev_value_undefined_(false)
  , default_error_bar_std_dev_value_scatter_x_undefined_(false)
  , default_error_bar_type_undefined_(false)
  , default_error_bar_type_scatter_x_undefined_(false)
  , pie_label_explosion_undefined_(false)
  , bubble_line_type_undefined_(false)
  , line_line_type_undefined_(false)
  , mixed_line_line_type_undefined_(false)
  , scatter_line_type_undefined_(false)
  , default_number_format_undefined_(false)
  , pie_number_format_undefined_(false)
  , default_number_format_type_undefined_(false)
  , pie_number_format_type_undefined_(false)
  , stacked_percent_number_format_undefined_(false)
  , default_series_type_undefined_(false)
  , default_show_error_bar_undefined_(false)
  , default_show_error_bar_scatter_x_undefined_(false)
  , bubble_show_labels_in_front_undefined_(false)
  , default_show_labels_in_front_undefined_(false)
  , scatter_show_line_undefined_(false)
  , bubble_show_negative_data_undefined_(false)
  , bubble_show_series_labels_undefined_(false)
  , pie_show_series_labels_undefined_(false)
  , scatter_show_series_labels_undefined_(false)
  , area_show_symbol_undefined_(false)
  , line_show_symbol_undefined_(false)
  , mixed_area_show_symbol_undefined_(false)
  , mixed_line_show_symbol_undefined_(false)
  , scatter_show_symbol_undefined_(false)
  , default_show_trend_line_undefined_(false)
  , area_show_value_labels_undefined_(false)
  , bar_show_value_labels_undefined_(false)
  , bubble_show_value_labels_undefined_(false)
  , default_show_value_labels_undefined_(false)
  , line_show_value_labels_undefined_(false)
  , mixed_show_value_labels_undefined_(false)
  , pie_show_value_labels_undefined_(false)
  , scatter_show_value_labels_undefined_(false)
  , bubble_size_dimension_undefined_(false)
  , area_stack_labels_undefined_(false)
  , bar_stack_labels_undefined_(false)
  , bubble_stack_labels_undefined_(false)
  , default_stack_labels_undefined_(false)
  , line_stack_labels_undefined_(false)
  , pie_stack_labels_undefined_(false)
  , scatter_stack_labels_undefined_(false)
  , stacked_area_stack_labels_undefined_(false)
  , stacked_bar_stack_labels_undefined_(false)
  , area_symbol_type_undefined_(false)
  , line_symbol_type_undefined_(false)
  , mixed_area_symbol_type_undefined_(false)
  , mixed_line_symbol_type_undefined_(false)
  , scatter_symbol_type_undefined_(false)
  , default_trend_line_equation_offset_x_undefined_(false)
  , default_trend_line_equation_offset_y_undefined_(false)
  , default_trend_line_label_string_undefined_(false)
  , default_trend_line_order_undefined_(false)
  , default_trend_line_period_undefined_(false)
  , default_trend_line_r_squared_offset_x_undefined_(false)
  , default_trend_line_r_squared_offset_y_undefined_(false)
  , default_trend_line_show_equation_undefined_(false)
  , default_trend_line_show_label_undefined_(false)
  , default_trend_line_show_r2_value_undefined_(false)
  , default_trend_line_type_undefined_(false)
  , bubble_value_labels_axis_undefined_(false)
  , scatter_value_labels_axis_undefined_(false)
  , pie_wedge_explosion_undefined_(false)
  , default_y_axis_ordinal_undefined_(false){}
struct ChartSeriesNonStylePropertyChangeSetArchiveDefaultTypeInternal {
  constexpr ChartSeriesNonStylePropertyChangeSetArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ChartSeriesNonStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ChartSeriesNonStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ChartSeriesNonStylePropertyChangeSetArchiveDefaultTypeInternal _ChartSeriesNonStylePropertyChangeSetArchive_default_instance_;
constexpr ChartSeriesStylePropertyChangeSetArchive::ChartSeriesStylePropertyChangeSetArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : default_callout_line_end_line_end_(nullptr)
  , default_callout_line_start_line_end_(nullptr)
  , default_callout_line_stroke_style_(nullptr)
  , default_error_bar_line_end_(nullptr)
  , default_error_bar_line_end_scatter_x_(nullptr)
  , default_error_bar_shadow_(nullptr)
  , default_error_bar_spacing_(nullptr)
  , default_error_bar_spacing_scatter_x_(nullptr)
  , default_error_bar_stroke_(nullptr)
  , default_error_bar_stroke_scatter_x_(nullptr)
  , area3d_fill_(nullptr)
  , bar3d_fill_(nullptr)
  , column3d_fill_(nullptr)
  , line3d_fill_(nullptr)
  , pie3d_fill_(nullptr)
  , area_fill_(nullptr)
  , bar_fill_(nullptr)
  , column_fill_(nullptr)
  , default_fill_(nullptr)
  , mixed_area_fill_(nullptr)
  , mixed_column_fill_(nullptr)
  , pie_fill_(nullptr)
  , area_label_paragraph_style_index_(nullptr)
  , bar_label_paragraph_style_index_(nullptr)
  , default_label_paragraph_style_index_(nullptr)
  , donut_label_paragraph_style_index_(nullptr)
  , line_label_paragraph_style_index_(nullptr)
  , mixed_label_paragraph_style_index_(nullptr)
  , pie_label_paragraph_style_index_(nullptr)
  , default_opacity_(nullptr)
  , area_outside_label_paragraph_style_index_(nullptr)
  , bar_outside_label_paragraph_style_index_(nullptr)
  , default_outside_label_paragraph_style_index_(nullptr)
  , donut_outside_label_paragraph_style_index_(nullptr)
  , mixed_outside_label_paragraph_style_index_(nullptr)
  , pie_outside_label_paragraph_style_index_(nullptr)
  , area3d_shadow_(nullptr)
  , bar3d_shadow_(nullptr)
  , column3d_shadow_(nullptr)
  , line3d_shadow_(nullptr)
  , pie3d_shadow_(nullptr)
  , area_shadow_(nullptr)
  , bar_shadow_(nullptr)
  , bubble_shadow_(nullptr)
  , default_shadow_(nullptr)
  , line_shadow_(nullptr)
  , mixed_area_shadow_(nullptr)
  , mixed_column_shadow_(nullptr)
  , mixed_line_shadow_(nullptr)
  , pie_shadow_(nullptr)
  , scatter_shadow_(nullptr)
  , area_stroke_(nullptr)
  , bar_stroke_(nullptr)
  , bubble_stroke_(nullptr)
  , line_stroke_(nullptr)
  , mixed_area_stroke_(nullptr)
  , mixed_column_stroke_(nullptr)
  , mixed_line_stroke_(nullptr)
  , pie_stroke_(nullptr)
  , scatter_stroke_(nullptr)
  , area_symbol_fill_(nullptr)
  , bubble_symbol_fill_(nullptr)
  , line_symbol_fill_(nullptr)
  , mixed_area_symbol_fill_(nullptr)
  , mixed_line_symbol_fill_(nullptr)
  , scatter_symbol_fill_(nullptr)
  , area_symbol_fill_use_series_fill_(nullptr)
  , line_symbol_fill_use_series_fill_(nullptr)
  , mixed_area_symbol_fill_use_series_fill_(nullptr)
  , mixed_line_symbol_fill_use_series_fill_(nullptr)
  , area_symbol_fill_use_series_stroke_(nullptr)
  , bubble_symbol_fill_use_series_stroke_(nullptr)
  , line_symbol_fill_use_series_stroke_(nullptr)
  , mixed_area_symbol_fill_use_series_stroke_(nullptr)
  , mixed_line_symbol_fill_use_series_stroke_(nullptr)
  , scatter_symbol_fill_use_series_stroke_(nullptr)
  , area_symbol_size_(nullptr)
  , line_symbol_size_(nullptr)
  , mixed_area_symbol_size_(nullptr)
  , mixed_line_symbol_size_(nullptr)
  , scatter_symbol_size_(nullptr)
  , area_symbol_stroke_(nullptr)
  , bubble_symbol_stroke_(nullptr)
  , line_symbol_stroke_(nullptr)
  , mixed_area_symbol_stroke_(nullptr)
  , mixed_line_symbol_stroke_(nullptr)
  , scatter_symbol_stroke_(nullptr)
  , default_trend_line_shadow_(nullptr)
  , default_trend_line_stroke_(nullptr)
  , default_trendline_equation_opacity_(nullptr)
  , default_trendline_equation_paragraph_style_index_(nullptr)
  , default_trendline_r_squared_opacity_(nullptr)
  , default_trendline_r_squared_paragraph_style_index_(nullptr)
  , area_value_label_position_(nullptr)
  , bar_value_label_position_(nullptr)
  , bubble_value_label_position_(nullptr)
  , default_value_label_position_(nullptr)
  , line_value_label_position_(nullptr)
  , mixed_area_value_label_position_(nullptr)
  , mixed_column_value_label_position_(nullptr)
  , mixed_line_value_label_position_(nullptr)
  , scatter_value_label_position_(nullptr)
  , stacked_area_value_label_position_(nullptr)
  , stacked_bar_value_label_position_(nullptr)
  , default_value_label_spacing_(nullptr)
  , default_callout_line_end_line_end_undefined_(false)
  , default_callout_line_start_line_end_undefined_(false)
  , default_callout_line_stroke_style_undefined_(false)
  , default_error_bar_line_end_undefined_(false)
  , default_error_bar_line_end_scatter_x_undefined_(false)
  , default_error_bar_shadow_undefined_(false)
  , default_error_bar_spacing_undefined_(false)
  , default_error_bar_spacing_scatter_x_undefined_(false)
  , default_error_bar_stroke_undefined_(false)
  , default_error_bar_stroke_scatter_x_undefined_(false)
  , area3d_fill_undefined_(false)
  , bar3d_fill_undefined_(false)
  , column3d_fill_undefined_(false)
  , line3d_fill_undefined_(false)
  , pie3d_fill_undefined_(false)
  , area_fill_undefined_(false)
  , bar_fill_undefined_(false)
  , column_fill_undefined_(false)
  , default_fill_undefined_(false)
  , mixed_area_fill_undefined_(false)
  , mixed_column_fill_undefined_(false)
  , pie_fill_undefined_(false)
  , area_label_paragraph_style_index_undefined_(false)
  , bar_label_paragraph_style_index_undefined_(false)
  , default_label_paragraph_style_index_undefined_(false)
  , donut_label_paragraph_style_index_undefined_(false)
  , line_label_paragraph_style_index_undefined_(false)
  , mixed_label_paragraph_style_index_undefined_(false)
  , pie_label_paragraph_style_index_undefined_(false)
  , default_opacity_undefined_(false)
  , area_outside_label_paragraph_style_index_undefined_(false)
  , bar_outside_label_paragraph_style_index_undefined_(false)
  , default_outside_label_paragraph_style_index_undefined_(false)
  , donut_outside_label_paragraph_style_index_undefined_(false)
  , mixed_outside_label_paragraph_style_index_undefined_(false)
  , pie_outside_label_paragraph_style_index_undefined_(false)
  , area3d_shadow_undefined_(false)
  , bar3d_shadow_undefined_(false)
  , column3d_shadow_undefined_(false)
  , line3d_shadow_undefined_(false)
  , pie3d_shadow_undefined_(false)
  , area_shadow_undefined_(false)
  , bar_shadow_undefined_(false)
  , bubble_shadow_undefined_(false)
  , default_shadow_undefined_(false)
  , line_shadow_undefined_(false)
  , mixed_area_shadow_undefined_(false)
  , mixed_column_shadow_undefined_(false)
  , mixed_line_shadow_undefined_(false)
  , pie_shadow_undefined_(false)
  , scatter_shadow_undefined_(false)
  , area_stroke_undefined_(false)
  , bar_stroke_undefined_(false)
  , bubble_stroke_undefined_(false)
  , line_stroke_undefined_(false)
  , mixed_area_stroke_undefined_(false)
  , mixed_column_stroke_undefined_(false)
  , mixed_line_stroke_undefined_(false)
  , pie_stroke_undefined_(false)
  , scatter_stroke_undefined_(false)
  , area_symbol_fill_undefined_(false)
  , bubble_symbol_fill_undefined_(false)
  , line_symbol_fill_undefined_(false)
  , mixed_area_symbol_fill_undefined_(false)
  , mixed_line_symbol_fill_undefined_(false)
  , scatter_symbol_fill_undefined_(false)
  , area_symbol_fill_use_series_fill_undefined_(false)
  , line_symbol_fill_use_series_fill_undefined_(false)
  , mixed_area_symbol_fill_use_series_fill_undefined_(false)
  , mixed_line_symbol_fill_use_series_fill_undefined_(false)
  , area_symbol_fill_use_series_stroke_undefined_(false)
  , bubble_symbol_fill_use_series_stroke_undefined_(false)
  , line_symbol_fill_use_series_stroke_undefined_(false)
  , mixed_area_symbol_fill_use_series_stroke_undefined_(false)
  , mixed_line_symbol_fill_use_series_stroke_undefined_(false)
  , scatter_symbol_fill_use_series_stroke_undefined_(false)
  , area_symbol_size_undefined_(false)
  , line_symbol_size_undefined_(false)
  , mixed_area_symbol_size_undefined_(false)
  , mixed_line_symbol_size_undefined_(false)
  , scatter_symbol_size_undefined_(false)
  , area_symbol_stroke_undefined_(false)
  , bubble_symbol_stroke_undefined_(false)
  , line_symbol_stroke_undefined_(false)
  , mixed_area_symbol_stroke_undefined_(false)
  , mixed_line_symbol_stroke_undefined_(false)
  , scatter_symbol_stroke_undefined_(false)
  , default_trend_line_shadow_undefined_(false)
  , default_trend_line_stroke_undefined_(false)
  , default_trendline_equation_opacity_undefined_(false)
  , default_trendline_equation_paragraph_style_index_undefined_(false)
  , default_trendline_r_squared_opacity_undefined_(false)
  , default_trendline_r_squared_paragraph_style_index_undefined_(false)
  , area_value_label_position_undefined_(false)
  , bar_value_label_position_undefined_(false)
  , bubble_value_label_position_undefined_(false)
  , default_value_label_position_undefined_(false)
  , line_value_label_position_undefined_(false)
  , mixed_area_value_label_position_undefined_(false)
  , mixed_column_value_label_position_undefined_(false)
  , mixed_line_value_label_position_undefined_(false)
  , scatter_value_label_position_undefined_(false)
  , stacked_area_value_label_position_undefined_(false)
  , stacked_bar_value_label_position_undefined_(false)
  , default_value_label_spacing_undefined_(false){}
struct ChartSeriesStylePropertyChangeSetArchiveDefaultTypeInternal {
  constexpr ChartSeriesStylePropertyChangeSetArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ChartSeriesStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ChartSeriesStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ChartSeriesStylePropertyChangeSetArchiveDefaultTypeInternal _ChartSeriesStylePropertyChangeSetArchive_default_instance_;
constexpr ChartStylePropertyChangeSetArchive::ChartStylePropertyChangeSetArchive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : default3d_chart_opacity_(nullptr)
  , area3d_lighting_package_(nullptr)
  , bar3d_lighting_package_(nullptr)
  , column3d_lighting_package_(nullptr)
  , default3d_lighting_package_(nullptr)
  , line3d_lighting_package_(nullptr)
  , pie3d_lighting_package_(nullptr)
  , default_background_fill_(nullptr)
  , default_background_stroke_(nullptr)
  , default_border_opacity_(nullptr)
  , default_border_shadow_(nullptr)
  , default_border_stroke_(nullptr)
  , default_combine_layers_(nullptr)
  , default_data_set_name_paragraph_style_index_(nullptr)
  , default_grid_background_fill_(nullptr)
  , default_grid_background_opacity_(nullptr)
  , default_inter_bar_gap_(nullptr)
  , default_inter_set_gap_(nullptr)
  , default_rounded_corner_outer_end_only_(nullptr)
  , default_rounded_corner_radius_(nullptr)
  , default_show_border_(nullptr)
  , default_title_color_(nullptr)
  , default_title_paragraph_style_index_(nullptr)
  , default3d_chart_opacity_undefined_(false)
  , area3d_lighting_package_undefined_(false)
  , bar3d_lighting_package_undefined_(false)
  , column3d_lighting_package_undefined_(false)
  , default3d_lighting_package_undefined_(false)
  , line3d_lighting_package_undefined_(false)
  , pie3d_lighting_package_undefined_(false)
  , default_background_fill_undefined_(false)
  , default_background_stroke_undefined_(false)
  , default_border_opacity_undefined_(false)
  , default_border_shadow_undefined_(false)
  , default_border_stroke_undefined_(false)
  , default_combine_layers_undefined_(false)
  , default_data_set_name_paragraph_style_index_undefined_(false)
  , default_grid_background_fill_undefined_(false)
  , default_grid_background_opacity_undefined_(false)
  , default_inter_bar_gap_undefined_(false)
  , default_inter_set_gap_undefined_(false)
  , default_rounded_corner_outer_end_only_undefined_(false)
  , default_rounded_corner_radius_undefined_(false)
  , default_show_border_undefined_(false)
  , default_title_color_undefined_(false)
  , default_title_paragraph_style_index_undefined_(false){}
struct ChartStylePropertyChangeSetArchiveDefaultTypeInternal {
  constexpr ChartStylePropertyChangeSetArchiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ChartStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ChartStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ChartStylePropertyChangeSetArchiveDefaultTypeInternal _ChartStylePropertyChangeSetArchive_default_instance_;
}  // namespace TSCHSOS
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_TSCHArchives_2esos_2eproto[22];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_TSCHArchives_2esos_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_TSCHArchives_2esos_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_TSCHArchives_2esos_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChart3dLightingPackageArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChart3dLightingPackageArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChart3dLightingPackageArchive, chart3d_lighting_package_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChart3dLightingPackageArchive, unset_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChart3dVectorArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChart3dVectorArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChart3dVectorArchive, chart3d_vector_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChart3dVectorArchive, unset_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChartErrorBarCustomDataArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChartErrorBarCustomDataArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChartErrorBarCustomDataArchive, chart_error_bar_custom_data_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChartErrorBarCustomDataArchive, unset_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive, charts_optional_double_archive_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive, unset_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetFormatObjectArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetFormatObjectArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetFormatObjectArchive, format_object_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetFormatObjectArchive, unset_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetNumberFormatArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetNumberFormatArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetNumberFormatArchive, number_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetNumberFormatArchive, unset_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChart3dLightingPackageArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChart3dLightingPackageArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChart3dLightingPackageArchive, spec_set_chart3d_lighting_package_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChart3dVectorArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChart3dVectorArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChart3dVectorArchive, spec_set_chart3d_vector_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChartErrorBarCustomDataArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChartErrorBarCustomDataArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChartErrorBarCustomDataArchive, spec_set_chart_error_bar_custom_data_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive, spec_set_charts_optional_double_archive_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecFormatObjectArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecFormatObjectArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecFormatObjectArchive, spec_set_format_object_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecNumberFormatArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecNumberFormatArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecNumberFormatArchive, spec_set_number_format_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, default10_date_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, default10_date_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, default10_number_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, default10_number_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, default3d_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, default3d_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, default_date_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, default_date_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, default_duration_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, default_duration_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, default_number_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, default_number_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, default_number_format_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, default_number_format_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, value_number_of_decades_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, value_number_of_decades_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, value_number_of_major_gridlines_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, value_number_of_major_gridlines_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, value_number_of_minor_gridlines_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, value_number_of_minor_gridlines_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, category_plot_to_edges_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, category_plot_to_edges_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, value_scale_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, value_scale_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, category_show_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, category_show_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, default_show_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, default_show_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, value_show_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, value_show_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, category_show_series_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, category_show_series_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, multi_data_show_series_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, multi_data_show_series_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, category_show_title_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, category_show_title_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, value_show_title_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, value_show_title_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, category_title_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, category_title_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, value_title_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, value_title_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, default_user_max_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, default_user_max_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, default_user_min_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, default_user_min_undefined_),
  0,
  23,
  1,
  24,
  2,
  25,
  3,
  26,
  4,
  27,
  5,
  28,
  6,
  29,
  7,
  30,
  8,
  31,
  9,
  32,
  10,
  33,
  11,
  34,
  12,
  35,
  13,
  36,
  14,
  37,
  15,
  38,
  16,
  39,
  17,
  40,
  18,
  41,
  19,
  42,
  20,
  43,
  21,
  44,
  22,
  45,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category3d_gridline_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category3d_gridline_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value3d_gridline_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value3d_gridline_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category3d_gridline_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category3d_gridline_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value3d_gridline_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value3d_gridline_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_horizontal_spacing_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_horizontal_spacing_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, default_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, default_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_labels_orientation_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_labels_orientation_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, default_labels_orientation_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, default_labels_orientation_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_labels_orientation_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_labels_orientation_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_major_gridline_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_major_gridline_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_major_gridline_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_major_gridline_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_major_gridline_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_major_gridline_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_major_gridline_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_major_gridline_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_major_gridline_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_major_gridline_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_major_gridline_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_major_gridline_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_minor_gridline_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_minor_gridline_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_minor_gridline_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_minor_gridline_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_minor_gridline_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_minor_gridline_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_minor_gridline_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_minor_gridline_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_minor_gridline_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_minor_gridline_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_minor_gridline_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_minor_gridline_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_show_axis_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_show_axis_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_show_axis_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_show_axis_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_show_last_label_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_show_last_label_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_show_major_gridlines_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_show_major_gridlines_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_show_major_gridlines_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_show_major_gridlines_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_show_major_tickmarks_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_show_major_tickmarks_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_show_major_tickmarks_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_show_major_tickmarks_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_show_minimum_label_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_show_minimum_label_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_show_minor_gridlines_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_show_minor_gridlines_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_show_minor_gridlines_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_show_minor_gridlines_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_show_minor_tickmarks_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_show_minor_tickmarks_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_show_minor_tickmarks_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_show_minor_tickmarks_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_tickmark_location_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_tickmark_location_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_tickmark_location_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_tickmark_location_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_title_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_title_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, default_title_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, default_title_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_title_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, value_title_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_vertical_spacing_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, category_vertical_spacing_undefined_),
  0,
  41,
  1,
  42,
  2,
  43,
  3,
  44,
  4,
  45,
  5,
  46,
  6,
  47,
  7,
  48,
  8,
  49,
  9,
  50,
  10,
  51,
  11,
  52,
  12,
  53,
  13,
  54,
  14,
  55,
  15,
  56,
  16,
  57,
  17,
  58,
  18,
  59,
  19,
  60,
  20,
  61,
  21,
  62,
  22,
  63,
  23,
  64,
  24,
  65,
  25,
  66,
  26,
  67,
  27,
  68,
  28,
  69,
  29,
  70,
  30,
  71,
  31,
  72,
  32,
  73,
  33,
  74,
  34,
  75,
  35,
  76,
  36,
  77,
  37,
  78,
  38,
  79,
  39,
  80,
  40,
  81,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendNonStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, default_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, default_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, default_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, default_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, default_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, default_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, default_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, default_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, default_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, default_stroke_undefined_),
  0,
  5,
  1,
  6,
  2,
  7,
  3,
  8,
  4,
  9,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default3d_bar_shape_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default3d_bar_shape_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default3d_bevel_edges_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default3d_bevel_edges_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default3d_inter_set_depth_gap_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default3d_inter_set_depth_gap_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default3d_rotation_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default3d_rotation_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, area3d_scale_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, area3d_scale_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, bar3d_scale_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, bar3d_scale_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, column3d_scale_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, column3d_scale_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default3d_scale_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default3d_scale_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, line3d_scale_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, line3d_scale_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, pie3d_scale_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, pie3d_scale_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default3d_viewport_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default3d_viewport_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, area_callout_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, area_callout_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, bar_callout_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, bar_callout_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, bubble_callout_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, bubble_callout_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_callout_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_callout_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, line_callout_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, line_callout_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, pie_callout_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, pie_callout_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, scatter_callout_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, scatter_callout_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, stacked_area_callout_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, stacked_area_callout_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, stacked_bar_callout_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, stacked_bar_callout_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_data_set_name_location_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_data_set_name_location_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_donut_place_title_at_center_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_donut_place_title_at_center_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_inner_radius_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_inner_radius_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_multi_data_control_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_multi_data_control_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_pie_start_angle_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_pie_start_angle_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_show_legend_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_show_legend_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_show_title_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_show_title_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_skip_hidden_data_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_skip_hidden_data_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_title_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, default_title_undefined_),
  0,
  31,
  1,
  32,
  2,
  33,
  3,
  34,
  4,
  35,
  5,
  36,
  6,
  37,
  7,
  38,
  8,
  39,
  9,
  40,
  10,
  41,
  11,
  42,
  12,
  43,
  13,
  44,
  14,
  45,
  15,
  46,
  16,
  47,
  17,
  48,
  18,
  49,
  19,
  50,
  20,
  51,
  21,
  52,
  22,
  53,
  23,
  54,
  24,
  55,
  25,
  56,
  26,
  57,
  27,
  58,
  28,
  59,
  29,
  60,
  30,
  61,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, default_custom_value_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, default_custom_value_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, default_label_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, default_label_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, default_show_label_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, default_show_label_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, default_show_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, default_show_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, default_show_value_label_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, default_show_value_label_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, default_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, default_type_undefined_),
  0,
  6,
  1,
  7,
  2,
  8,
  3,
  9,
  4,
  10,
  5,
  11,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive, default_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive, default_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive, default_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive, default_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive, default_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive, default_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive, default_value_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive, default_value_label_paragraph_style_index_undefined_),
  0,
  4,
  1,
  5,
  2,
  6,
  3,
  7,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default10_date_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default10_date_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default10_number_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default10_number_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, pie10_number_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, pie10_number_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, pie23_label_explosion_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, pie23_label_explosion_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bubble_adjustment_scale_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bubble_adjustment_scale_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_date_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_date_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_duration_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_duration_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, area_enable_callout_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, area_enable_callout_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bar_enable_callout_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bar_enable_callout_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bubble_enable_callout_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bubble_enable_callout_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_enable_callout_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_enable_callout_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, line_enable_callout_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, line_enable_callout_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, pie_enable_callout_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, pie_enable_callout_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, scatter_enable_callout_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, scatter_enable_callout_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, stacked_area_enable_callout_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, stacked_area_enable_callout_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, stacked_bar_enable_callout_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, stacked_bar_enable_callout_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_custom_negative_data_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_custom_negative_data_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_custom_negative_data_scatter_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_custom_negative_data_scatter_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_custom_positive_data_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_custom_positive_data_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_custom_positive_data_scatter_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_custom_positive_data_scatter_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_fixed_value_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_fixed_value_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_fixed_value_scatter_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_fixed_value_scatter_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_percent_value_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_percent_value_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_percent_value_scatter_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_percent_value_scatter_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_setting_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_setting_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_setting_scatter_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_setting_scatter_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_std_dev_value_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_std_dev_value_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_std_dev_value_scatter_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_std_dev_value_scatter_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_type_scatter_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_error_bar_type_scatter_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, pie_label_explosion_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, pie_label_explosion_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bubble_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bubble_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, line_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, line_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, mixed_line_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, mixed_line_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, scatter_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, scatter_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_number_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_number_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, pie_number_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, pie_number_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_number_format_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_number_format_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, pie_number_format_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, pie_number_format_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, stacked_percent_number_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, stacked_percent_number_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_series_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_series_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_show_error_bar_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_show_error_bar_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_show_error_bar_scatter_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_show_error_bar_scatter_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bubble_show_labels_in_front_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bubble_show_labels_in_front_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_show_labels_in_front_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_show_labels_in_front_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, scatter_show_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, scatter_show_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bubble_show_negative_data_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bubble_show_negative_data_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bubble_show_series_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bubble_show_series_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, pie_show_series_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, pie_show_series_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, scatter_show_series_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, scatter_show_series_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, area_show_symbol_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, area_show_symbol_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, line_show_symbol_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, line_show_symbol_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, mixed_area_show_symbol_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, mixed_area_show_symbol_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, mixed_line_show_symbol_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, mixed_line_show_symbol_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, scatter_show_symbol_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, scatter_show_symbol_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_show_trend_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_show_trend_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, area_show_value_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, area_show_value_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bar_show_value_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bar_show_value_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bubble_show_value_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bubble_show_value_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_show_value_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_show_value_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, line_show_value_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, line_show_value_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, mixed_show_value_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, mixed_show_value_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, pie_show_value_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, pie_show_value_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, scatter_show_value_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, scatter_show_value_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bubble_size_dimension_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bubble_size_dimension_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, area_stack_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, area_stack_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bar_stack_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bar_stack_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bubble_stack_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bubble_stack_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_stack_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_stack_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, line_stack_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, line_stack_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, pie_stack_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, pie_stack_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, scatter_stack_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, scatter_stack_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, stacked_area_stack_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, stacked_area_stack_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, stacked_bar_stack_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, stacked_bar_stack_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, area_symbol_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, area_symbol_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, line_symbol_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, line_symbol_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, mixed_area_symbol_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, mixed_area_symbol_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, mixed_line_symbol_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, mixed_line_symbol_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, scatter_symbol_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, scatter_symbol_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_trend_line_equation_offset_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_trend_line_equation_offset_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_trend_line_equation_offset_y_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_trend_line_equation_offset_y_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_trend_line_label_string_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_trend_line_label_string_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_trend_line_order_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_trend_line_order_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_trend_line_period_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_trend_line_period_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_trend_line_r_squared_offset_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_trend_line_r_squared_offset_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_trend_line_r_squared_offset_y_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_trend_line_r_squared_offset_y_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_trend_line_show_equation_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_trend_line_show_equation_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_trend_line_show_label_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_trend_line_show_label_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_trend_line_show_r2_value_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_trend_line_show_r2_value_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_trend_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_trend_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bubble_value_labels_axis_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, bubble_value_labels_axis_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, scatter_value_labels_axis_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, scatter_value_labels_axis_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, pie_wedge_explosion_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, pie_wedge_explosion_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_y_axis_ordinal_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, default_y_axis_ordinal_undefined_),
  0,
  94,
  1,
  95,
  2,
  96,
  3,
  97,
  4,
  98,
  5,
  99,
  6,
  100,
  7,
  101,
  8,
  102,
  9,
  103,
  10,
  104,
  11,
  105,
  12,
  106,
  13,
  107,
  14,
  108,
  15,
  109,
  16,
  110,
  17,
  111,
  18,
  112,
  19,
  113,
  20,
  114,
  21,
  115,
  22,
  116,
  23,
  117,
  24,
  118,
  25,
  119,
  26,
  120,
  27,
  121,
  28,
  122,
  29,
  123,
  30,
  124,
  31,
  125,
  32,
  126,
  33,
  127,
  34,
  128,
  35,
  129,
  36,
  130,
  37,
  131,
  38,
  132,
  39,
  133,
  40,
  134,
  41,
  135,
  42,
  136,
  43,
  137,
  44,
  138,
  45,
  139,
  46,
  140,
  47,
  141,
  48,
  142,
  49,
  143,
  50,
  144,
  51,
  145,
  52,
  146,
  53,
  147,
  54,
  148,
  55,
  149,
  56,
  150,
  57,
  151,
  58,
  152,
  59,
  153,
  60,
  154,
  61,
  155,
  62,
  156,
  63,
  157,
  64,
  158,
  65,
  159,
  66,
  160,
  67,
  161,
  68,
  162,
  69,
  163,
  70,
  164,
  71,
  165,
  72,
  166,
  73,
  167,
  74,
  168,
  75,
  169,
  76,
  170,
  77,
  171,
  78,
  172,
  79,
  173,
  80,
  174,
  81,
  175,
  82,
  176,
  83,
  177,
  84,
  178,
  85,
  179,
  86,
  180,
  87,
  181,
  88,
  182,
  89,
  183,
  90,
  184,
  91,
  185,
  92,
  186,
  93,
  187,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_callout_line_end_line_end_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_callout_line_end_line_end_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_callout_line_start_line_end_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_callout_line_start_line_end_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_callout_line_stroke_style_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_callout_line_stroke_style_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_error_bar_line_end_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_error_bar_line_end_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_error_bar_line_end_scatter_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_error_bar_line_end_scatter_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_error_bar_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_error_bar_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_error_bar_spacing_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_error_bar_spacing_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_error_bar_spacing_scatter_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_error_bar_spacing_scatter_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_error_bar_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_error_bar_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_error_bar_stroke_scatter_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_error_bar_stroke_scatter_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area3d_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area3d_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bar3d_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bar3d_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, column3d_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, column3d_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, line3d_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, line3d_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, pie3d_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, pie3d_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bar_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bar_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, column_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, column_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_area_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_area_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_column_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_column_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, pie_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, pie_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bar_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bar_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, donut_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, donut_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, line_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, line_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, pie_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, pie_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area_outside_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area_outside_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bar_outside_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bar_outside_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_outside_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_outside_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, donut_outside_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, donut_outside_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_outside_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_outside_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, pie_outside_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, pie_outside_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area3d_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area3d_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bar3d_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bar3d_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, column3d_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, column3d_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, line3d_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, line3d_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, pie3d_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, pie3d_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bar_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bar_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bubble_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bubble_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, line_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, line_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_area_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_area_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_column_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_column_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_line_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_line_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, pie_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, pie_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, scatter_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, scatter_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bar_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bar_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bubble_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bubble_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, line_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, line_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_area_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_area_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_column_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_column_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_line_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_line_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, pie_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, pie_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, scatter_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, scatter_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area_symbol_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area_symbol_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bubble_symbol_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bubble_symbol_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, line_symbol_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, line_symbol_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_area_symbol_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_area_symbol_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_line_symbol_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_line_symbol_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, scatter_symbol_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, scatter_symbol_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area_symbol_fill_use_series_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area_symbol_fill_use_series_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, line_symbol_fill_use_series_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, line_symbol_fill_use_series_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_area_symbol_fill_use_series_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_area_symbol_fill_use_series_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_line_symbol_fill_use_series_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_line_symbol_fill_use_series_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area_symbol_fill_use_series_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area_symbol_fill_use_series_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bubble_symbol_fill_use_series_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bubble_symbol_fill_use_series_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, line_symbol_fill_use_series_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, line_symbol_fill_use_series_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_area_symbol_fill_use_series_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_area_symbol_fill_use_series_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_line_symbol_fill_use_series_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_line_symbol_fill_use_series_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, scatter_symbol_fill_use_series_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, scatter_symbol_fill_use_series_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area_symbol_size_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area_symbol_size_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, line_symbol_size_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, line_symbol_size_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_area_symbol_size_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_area_symbol_size_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_line_symbol_size_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_line_symbol_size_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, scatter_symbol_size_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, scatter_symbol_size_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area_symbol_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area_symbol_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bubble_symbol_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bubble_symbol_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, line_symbol_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, line_symbol_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_area_symbol_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_area_symbol_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_line_symbol_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_line_symbol_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, scatter_symbol_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, scatter_symbol_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_trend_line_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_trend_line_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_trend_line_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_trend_line_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_trendline_equation_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_trendline_equation_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_trendline_equation_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_trendline_equation_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_trendline_r_squared_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_trendline_r_squared_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_trendline_r_squared_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_trendline_r_squared_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area_value_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, area_value_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bar_value_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bar_value_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bubble_value_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, bubble_value_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_value_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_value_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, line_value_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, line_value_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_area_value_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_area_value_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_column_value_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_column_value_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_line_value_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, mixed_line_value_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, scatter_value_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, scatter_value_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, stacked_area_value_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, stacked_area_value_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, stacked_bar_value_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, stacked_bar_value_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_value_label_spacing_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, default_value_label_spacing_undefined_),
  0,
  105,
  1,
  106,
  2,
  107,
  3,
  108,
  4,
  109,
  5,
  110,
  6,
  111,
  7,
  112,
  8,
  113,
  9,
  114,
  10,
  115,
  11,
  116,
  12,
  117,
  13,
  118,
  14,
  119,
  15,
  120,
  16,
  121,
  17,
  122,
  18,
  123,
  19,
  124,
  20,
  125,
  21,
  126,
  22,
  127,
  23,
  128,
  24,
  129,
  25,
  130,
  26,
  131,
  27,
  132,
  28,
  133,
  29,
  134,
  30,
  135,
  31,
  136,
  32,
  137,
  33,
  138,
  34,
  139,
  35,
  140,
  36,
  141,
  37,
  142,
  38,
  143,
  39,
  144,
  40,
  145,
  41,
  146,
  42,
  147,
  43,
  148,
  44,
  149,
  45,
  150,
  46,
  151,
  47,
  152,
  48,
  153,
  49,
  154,
  50,
  155,
  51,
  156,
  52,
  157,
  53,
  158,
  54,
  159,
  55,
  160,
  56,
  161,
  57,
  162,
  58,
  163,
  59,
  164,
  60,
  165,
  61,
  166,
  62,
  167,
  63,
  168,
  64,
  169,
  65,
  170,
  66,
  171,
  67,
  172,
  68,
  173,
  69,
  174,
  70,
  175,
  71,
  176,
  72,
  177,
  73,
  178,
  74,
  179,
  75,
  180,
  76,
  181,
  77,
  182,
  78,
  183,
  79,
  184,
  80,
  185,
  81,
  186,
  82,
  187,
  83,
  188,
  84,
  189,
  85,
  190,
  86,
  191,
  87,
  192,
  88,
  193,
  89,
  194,
  90,
  195,
  91,
  196,
  92,
  197,
  93,
  198,
  94,
  199,
  95,
  200,
  96,
  201,
  97,
  202,
  98,
  203,
  99,
  204,
  100,
  205,
  101,
  206,
  102,
  207,
  103,
  208,
  104,
  209,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default3d_chart_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default3d_chart_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, area3d_lighting_package_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, area3d_lighting_package_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, bar3d_lighting_package_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, bar3d_lighting_package_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, column3d_lighting_package_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, column3d_lighting_package_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default3d_lighting_package_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default3d_lighting_package_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, line3d_lighting_package_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, line3d_lighting_package_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, pie3d_lighting_package_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, pie3d_lighting_package_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_background_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_background_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_background_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_background_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_border_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_border_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_border_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_border_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_border_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_border_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_combine_layers_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_combine_layers_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_data_set_name_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_data_set_name_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_grid_background_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_grid_background_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_grid_background_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_grid_background_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_inter_bar_gap_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_inter_bar_gap_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_inter_set_gap_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_inter_set_gap_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_rounded_corner_outer_end_only_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_rounded_corner_outer_end_only_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_rounded_corner_radius_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_rounded_corner_radius_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_show_border_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_show_border_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_title_color_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_title_color_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_title_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, default_title_paragraph_style_index_undefined_),
  0,
  23,
  1,
  24,
  2,
  25,
  3,
  26,
  4,
  27,
  5,
  28,
  6,
  29,
  7,
  30,
  8,
  31,
  9,
  32,
  10,
  33,
  11,
  34,
  12,
  35,
  13,
  36,
  14,
  37,
  15,
  38,
  16,
  39,
  17,
  40,
  18,
  41,
  19,
  42,
  20,
  43,
  21,
  44,
  22,
  45,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::TSCHSOS::SpecSetChart3dLightingPackageArchive)},
  { 9, 16, sizeof(::TSCHSOS::SpecSetChart3dVectorArchive)},
  { 18, 25, sizeof(::TSCHSOS::SpecSetChartErrorBarCustomDataArchive)},
  { 27, 34, sizeof(::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive)},
  { 36, 43, sizeof(::TSCHSOS::SpecSetFormatObjectArchive)},
  { 45, 52, sizeof(::TSCHSOS::SpecSetNumberFormatArchive)},
  { 54, 60, sizeof(::TSCHSOS::SpecChart3dLightingPackageArchive)},
  { 61, 67, sizeof(::TSCHSOS::SpecChart3dVectorArchive)},
  { 68, 74, sizeof(::TSCHSOS::SpecChartErrorBarCustomDataArchive)},
  { 75, 81, sizeof(::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive)},
  { 82, 88, sizeof(::TSCHSOS::SpecFormatObjectArchive)},
  { 89, 95, sizeof(::TSCHSOS::SpecNumberFormatArchive)},
  { 96, 147, sizeof(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive)},
  { 193, 280, sizeof(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive)},
  { 362, -1, sizeof(::TSCHSOS::ChartLegendNonStylePropertyChangeSetArchive)},
  { 367, 382, sizeof(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive)},
  { 392, 459, sizeof(::TSCHSOS::ChartNonStylePropertyChangeSetArchive)},
  { 521, 538, sizeof(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive)},
  { 550, 563, sizeof(::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive)},
  { 571, 764, sizeof(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive)},
  { 952, 1167, sizeof(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive)},
  { 1377, 1428, sizeof(::TSCHSOS::ChartStylePropertyChangeSetArchive)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TSCHSOS::_SpecSetChart3dLightingPackageArchive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TSCHSOS::_SpecSetChart3dVectorArchive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TSCHSOS::_SpecSetChartErrorBarCustomDataArchive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TSCHSOS::_SpecSetChartsOptionalDoubleArchiveArchive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TSCHSOS::_SpecSetFormatObjectArchive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TSCHSOS::_SpecSetNumberFormatArchive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TSCHSOS::_SpecChart3dLightingPackageArchive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TSCHSOS::_SpecChart3dVectorArchive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TSCHSOS::_SpecChartErrorBarCustomDataArchive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TSCHSOS::_SpecChartsOptionalDoubleArchiveArchive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TSCHSOS::_SpecFormatObjectArchive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TSCHSOS::_SpecNumberFormatArchive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TSCHSOS::_ChartAxisNonStylePropertyChangeSetArchive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TSCHSOS::_ChartAxisStylePropertyChangeSetArchive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TSCHSOS::_ChartLegendNonStylePropertyChangeSetArchive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TSCHSOS::_ChartLegendStylePropertyChangeSetArchive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TSCHSOS::_ChartNonStylePropertyChangeSetArchive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TSCHSOS::_ChartReferenceLineNonStylePropertyChangeSetArchive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TSCHSOS::_ChartReferenceLineStylePropertyChangeSetArchive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TSCHSOS::_ChartSeriesNonStylePropertyChangeSetArchive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TSCHSOS::_ChartSeriesStylePropertyChangeSetArchive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TSCHSOS::_ChartStylePropertyChangeSetArchive_default_instance_),
};

const char descriptor_table_protodef_TSCHArchives_2esos_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026TSCHArchives.sos.proto\022\007TSCHSOS\032\024TSCH3"
  "DArchives.proto\032\031TSCHArchives.Common.pro"
  "to\032\025TSDArchives.sos.proto\032\021TSKArchives.p"
  "roto\032\025TSSArchives.sos.proto\"|\n$SpecSetCh"
  "art3dLightingPackageArchive\022E\n\030chart3d_l"
  "ighting_package\030\001 \001(\0132#.TSCH.Chart3DLigh"
  "tingPackageArchive\022\r\n\005unset\030\002 \002(\010\"`\n\033Spe"
  "cSetChart3dVectorArchive\0222\n\016chart3d_vect"
  "or\030\001 \001(\0132\032.TSCH.Chart3DVectorArchive\022\r\n\005"
  "unset\030\002 \002(\010\"\207\001\n%SpecSetChartErrorBarCust"
  "omDataArchive\022O\n\033chart_error_bar_custom_"
  "data\030\001 \001(\0132*.TSCH.ChartsNSArrayOfNSNumbe"
  "rDoubleArchive\022\r\n\005unset\030\002 \002(\010\"\205\001\n)SpecSe"
  "tChartsOptionalDoubleArchiveArchive\022I\n\036c"
  "harts_optional_double_archive\030\001 \001(\0132!.TS"
  "CH.ChartsNSNumberDoubleArchive\022\r\n\005unset\030"
  "\002 \002(\010\"\\\n\032SpecSetFormatObjectArchive\022/\n\rf"
  "ormat_object\030\001 \001(\0132\030.TSK.FormatStructArc"
  "hive\022\r\n\005unset\030\002 \002(\010\"\\\n\032SpecSetNumberForm"
  "atArchive\022/\n\rnumber_format\030\001 \001(\0132\030.TSK.F"
  "ormatStructArchive\022\r\n\005unset\030\002 \002(\010\"}\n!Spe"
  "cChart3dLightingPackageArchive\022X\n!spec_s"
  "et_chart3d_lighting_package\030\001 \001(\0132-.TSCH"
  "SOS.SpecSetChart3dLightingPackageArchive"
  "\"a\n\030SpecChart3dVectorArchive\022E\n\027spec_set"
  "_chart3d_vector\030\001 \001(\0132$.TSCHSOS.SpecSetC"
  "hart3dVectorArchive\"\202\001\n\"SpecChartErrorBa"
  "rCustomDataArchive\022\\\n$spec_set_chart_err"
  "or_bar_custom_data\030\001 \001(\0132..TSCHSOS.SpecS"
  "etChartErrorBarCustomDataArchive\"\215\001\n&Spe"
  "cChartsOptionalDoubleArchiveArchive\022c\n\'s"
  "pec_set_charts_optional_double_archive\030\001"
  " \001(\01322.TSCHSOS.SpecSetChartsOptionalDoub"
  "leArchiveArchive\"^\n\027SpecFormatObjectArch"
  "ive\022C\n\026spec_set_format_object\030\001 \001(\0132#.TS"
  "CHSOS.SpecSetFormatObjectArchive\"^\n\027Spec"
  "NumberFormatArchive\022C\n\026spec_set_number_f"
  "ormat\030\001 \001(\0132#.TSCHSOS.SpecSetNumberForma"
  "tArchive\"\315\022\n)ChartAxisNonStylePropertyCh"
  "angeSetArchive\022\?\n\025default10_date_format\030"
  "\001 \001(\0132 .TSCHSOS.SpecFormatObjectArchive\022"
  "\'\n\037default10_date_format_undefined\030\002 \001(\010"
  "\022A\n\027default10_number_format\030\003 \001(\0132 .TSCH"
  "SOS.SpecNumberFormatArchive\022)\n!default10"
  "_number_format_undefined\030\004 \001(\010\022<\n\030defaul"
  "t3d_label_position\030\005 \001(\0132\032.TSSSOS.SpecIn"
  "tegerArchive\022*\n\"default3d_label_position"
  "_undefined\030\006 \001(\010\022=\n\023default_date_format\030"
  "\007 \001(\0132 .TSCHSOS.SpecFormatObjectArchive\022"
  "%\n\035default_date_format_undefined\030\010 \001(\010\022A"
  "\n\027default_duration_format\030\t \001(\0132 .TSCHSO"
  "S.SpecFormatObjectArchive\022)\n!default_dur"
  "ation_format_undefined\030\n \001(\010\022\?\n\025default_"
  "number_format\030\013 \001(\0132 .TSCHSOS.SpecNumber"
  "FormatArchive\022\'\n\037default_number_format_u"
  "ndefined\030\014 \001(\010\022>\n\032default_number_format_"
  "type\030\r \001(\0132\032.TSSSOS.SpecIntegerArchive\022,"
  "\n$default_number_format_type_undefined\030\016"
  " \001(\010\022;\n\027value_number_of_decades\030\017 \001(\0132\032."
  "TSSSOS.SpecIntegerArchive\022)\n!value_numbe"
  "r_of_decades_undefined\030\020 \001(\010\022C\n\037value_nu"
  "mber_of_major_gridlines\030\021 \001(\0132\032.TSSSOS.S"
  "pecIntegerArchive\0221\n)value_number_of_maj"
  "or_gridlines_undefined\030\022 \001(\010\022C\n\037value_nu"
  "mber_of_minor_gridlines\030\023 \001(\0132\032.TSSSOS.S"
  "pecIntegerArchive\0221\n)value_number_of_min"
  "or_gridlines_undefined\030\024 \001(\010\0227\n\026category"
  "_plot_to_edges\030\025 \001(\0132\027.TSSSOS.SpecBoolAr"
  "chive\022(\n category_plot_to_edges_undefine"
  "d\030\026 \001(\010\022/\n\013value_scale\030\027 \001(\0132\032.TSSSOS.Sp"
  "ecIntegerArchive\022\035\n\025value_scale_undefine"
  "d\030\030 \001(\010\0225\n\024category_show_labels\030\031 \001(\0132\027."
  "TSSSOS.SpecBoolArchive\022&\n\036category_show_"
  "labels_undefined\030\032 \001(\010\0224\n\023default_show_l"
  "abels\030\033 \001(\0132\027.TSSSOS.SpecBoolArchive\022%\n\035"
  "default_show_labels_undefined\030\034 \001(\010\0222\n\021v"
  "alue_show_labels\030\035 \001(\0132\027.TSSSOS.SpecBool"
  "Archive\022#\n\033value_show_labels_undefined\030\036"
  " \001(\010\022<\n\033category_show_series_labels\030\037 \001("
  "\0132\027.TSSSOS.SpecBoolArchive\022-\n%category_s"
  "how_series_labels_undefined\030  \001(\010\022>\n\035mul"
  "ti_data_show_series_labels\030! \001(\0132\027.TSSSO"
  "S.SpecBoolArchive\022/\n\'multi_data_show_ser"
  "ies_labels_undefined\030\" \001(\010\0224\n\023category_s"
  "how_title\030# \001(\0132\027.TSSSOS.SpecBoolArchive"
  "\022%\n\035category_show_title_undefined\030$ \001(\010\022"
  "1\n\020value_show_title\030% \001(\0132\027.TSSSOS.SpecB"
  "oolArchive\022\"\n\032value_show_title_undefined"
  "\030& \001(\010\0221\n\016category_title\030\' \001(\0132\031.TSSSOS."
  "SpecStringArchive\022 \n\030category_title_unde"
  "fined\030( \001(\010\022.\n\013value_title\030) \001(\0132\031.TSSSO"
  "S.SpecStringArchive\022\035\n\025value_title_undef"
  "ined\030* \001(\010\022I\n\020default_user_max\030+ \001(\0132/.T"
  "SCHSOS.SpecChartsOptionalDoubleArchiveAr"
  "chive\022\"\n\032default_user_max_undefined\030, \001("
  "\010\022I\n\020default_user_min\030- \001(\0132/.TSCHSOS.Sp"
  "ecChartsOptionalDoubleArchiveArchive\022\"\n\032"
  "default_user_min_undefined\030. \001(\010\"\225$\n&Cha"
  "rtAxisStylePropertyChangeSetArchive\022>\n\033c"
  "ategory3d_gridline_opacity\030\001 \001(\0132\031.TSSSO"
  "S.SpecDoubleArchive\022-\n%category3d_gridli"
  "ne_opacity_undefined\030\002 \001(\010\022;\n\030value3d_gr"
  "idline_opacity\030\003 \001(\0132\031.TSSSOS.SpecDouble"
  "Archive\022*\n\"value3d_gridline_opacity_unde"
  "fined\030\004 \001(\010\022=\n\032category3d_gridline_strok"
  "e\030\005 \001(\0132\031.TSDSOS.SpecStrokeArchive\022,\n$ca"
  "tegory3d_gridline_stroke_undefined\030\006 \001(\010"
  "\022:\n\027value3d_gridline_stroke\030\007 \001(\0132\031.TSDS"
  "OS.SpecStrokeArchive\022)\n!value3d_gridline"
  "_stroke_undefined\030\010 \001(\010\022\?\n\033category_hori"
  "zontal_spacing\030\t \001(\0132\032.TSSSOS.SpecIntege"
  "rArchive\022-\n%category_horizontal_spacing_"
  "undefined\030\n \001(\010\022H\n$category_label_paragr"
  "aph_style_index\030\013 \001(\0132\032.TSSSOS.SpecInteg"
  "erArchive\0226\n.category_label_paragraph_st"
  "yle_index_undefined\030\014 \001(\010\022G\n#default_lab"
  "el_paragraph_style_index\030\r \001(\0132\032.TSSSOS."
  "SpecIntegerArchive\0225\n-default_label_para"
  "graph_style_index_undefined\030\016 \001(\010\022E\n!val"
  "ue_label_paragraph_style_index\030\017 \001(\0132\032.T"
  "SSSOS.SpecIntegerArchive\0223\n+value_label_"
  "paragraph_style_index_undefined\030\020 \001(\010\022>\n"
  "\033category_labels_orientation\030\021 \001(\0132\031.TSS"
  "SOS.SpecDoubleArchive\022-\n%category_labels"
  "_orientation_undefined\030\022 \001(\010\022=\n\032default_"
  "labels_orientation\030\023 \001(\0132\031.TSSSOS.SpecDo"
  "ubleArchive\022,\n$default_labels_orientatio"
  "n_undefined\030\024 \001(\010\022;\n\030value_labels_orient"
  "ation\030\025 \001(\0132\031.TSSSOS.SpecDoubleArchive\022*"
  "\n\"value_labels_orientation_undefined\030\026 \001"
  "(\010\022B\n\037category_major_gridline_opacity\030\027 "
  "\001(\0132\031.TSSSOS.SpecDoubleArchive\0221\n)catego"
  "ry_major_gridline_opacity_undefined\030\030 \001("
  "\010\022\?\n\034value_major_gridline_opacity\030\031 \001(\0132"
  "\031.TSSSOS.SpecDoubleArchive\022.\n&value_majo"
  "r_gridline_opacity_undefined\030\032 \001(\010\022A\n\036ca"
  "tegory_major_gridline_shadow\030\033 \001(\0132\031.TSD"
  "SOS.SpecShadowArchive\0220\n(category_major_"
  "gridline_shadow_undefined\030\034 \001(\010\022>\n\033value"
  "_major_gridline_shadow\030\035 \001(\0132\031.TSDSOS.Sp"
  "ecShadowArchive\022-\n%value_major_gridline_"
  "shadow_undefined\030\036 \001(\010\022A\n\036category_major"
  "_gridline_stroke\030\037 \001(\0132\031.TSDSOS.SpecStro"
  "keArchive\0220\n(category_major_gridline_str"
  "oke_undefined\030  \001(\010\022>\n\033value_major_gridl"
  "ine_stroke\030! \001(\0132\031.TSDSOS.SpecStrokeArch"
  "ive\022-\n%value_major_gridline_stroke_undef"
  "ined\030\" \001(\010\022B\n\037category_minor_gridline_op"
  "acity\030# \001(\0132\031.TSSSOS.SpecDoubleArchive\0221"
  "\n)category_minor_gridline_opacity_undefi"
  "ned\030$ \001(\010\022\?\n\034value_minor_gridline_opacit"
  "y\030% \001(\0132\031.TSSSOS.SpecDoubleArchive\022.\n&va"
  "lue_minor_gridline_opacity_undefined\030& \001"
  "(\010\022A\n\036category_minor_gridline_shadow\030\' \001"
  "(\0132\031.TSDSOS.SpecShadowArchive\0220\n(categor"
  "y_minor_gridline_shadow_undefined\030( \001(\010\022"
  ">\n\033value_minor_gridline_shadow\030) \001(\0132\031.T"
  "SDSOS.SpecShadowArchive\022-\n%value_minor_g"
  "ridline_shadow_undefined\030* \001(\010\022A\n\036catego"
  "ry_minor_gridline_stroke\030+ \001(\0132\031.TSDSOS."
  "SpecStrokeArchive\0220\n(category_minor_grid"
  "line_stroke_undefined\030, \001(\010\022>\n\033value_min"
  "or_gridline_stroke\030- \001(\0132\031.TSDSOS.SpecSt"
  "rokeArchive\022-\n%value_minor_gridline_stro"
  "ke_undefined\030. \001(\010\0223\n\022category_show_axis"
  "\030/ \001(\0132\027.TSSSOS.SpecBoolArchive\022$\n\034categ"
  "ory_show_axis_undefined\0300 \001(\010\0220\n\017value_s"
  "how_axis\0301 \001(\0132\027.TSSSOS.SpecBoolArchive\022"
  "!\n\031value_show_axis_undefined\0302 \001(\010\0229\n\030ca"
  "tegory_show_last_label\0303 \001(\0132\027.TSSSOS.Sp"
  "ecBoolArchive\022*\n\"category_show_last_labe"
  "l_undefined\0304 \001(\010\022>\n\035category_show_major"
  "_gridlines\0305 \001(\0132\027.TSSSOS.SpecBoolArchiv"
  "e\022/\n\'category_show_major_gridlines_undef"
  "ined\0306 \001(\010\022;\n\032value_show_major_gridlines"
  "\0307 \001(\0132\027.TSSSOS.SpecBoolArchive\022,\n$value"
  "_show_major_gridlines_undefined\0308 \001(\010\022>\n"
  "\035category_show_major_tickmarks\0309 \001(\0132\027.T"
  "SSSOS.SpecBoolArchive\022/\n\'category_show_m"
  "ajor_tickmarks_undefined\030: \001(\010\022;\n\032value_"
  "show_major_tickmarks\030; \001(\0132\027.TSSSOS.Spec"
  "BoolArchive\022,\n$value_show_major_tickmark"
  "s_undefined\030< \001(\010\0229\n\030value_show_minimum_"
  "label\030= \001(\0132\027.TSSSOS.SpecBoolArchive\022*\n\""
  "value_show_minimum_label_undefined\030> \001(\010"
  "\022>\n\035category_show_minor_gridlines\030\? \001(\0132"
  "\027.TSSSOS.SpecBoolArchive\022/\n\'category_sho"
  "w_minor_gridlines_undefined\030@ \001(\010\022;\n\032val"
  "ue_show_minor_gridlines\030A \001(\0132\027.TSSSOS.S"
  "pecBoolArchive\022,\n$value_show_minor_gridl"
  "ines_undefined\030B \001(\010\022>\n\035category_show_mi"
  "nor_tickmarks\030C \001(\0132\027.TSSSOS.SpecBoolArc"
  "hive\022/\n\'category_show_minor_tickmarks_un"
  "defined\030D \001(\010\022;\n\032value_show_minor_tickma"
  "rks\030E \001(\0132\027.TSSSOS.SpecBoolArchive\022,\n$va"
  "lue_show_minor_tickmarks_undefined\030F \001(\010"
  "\022>\n\032category_tickmark_location\030G \001(\0132\032.T"
  "SSSOS.SpecIntegerArchive\022,\n$category_tic"
  "kmark_location_undefined\030H \001(\010\022;\n\027value_"
  "tickmark_location\030I \001(\0132\032.TSSSOS.SpecInt"
  "egerArchive\022)\n!value_tickmark_location_u"
  "ndefined\030J \001(\010\022H\n$category_title_paragra"
  "ph_style_index\030K \001(\0132\032.TSSSOS.SpecIntege"
  "rArchive\0226\n.category_title_paragraph_sty"
  "le_index_undefined\030L \001(\010\022G\n#default_titl"
  "e_paragraph_style_index\030M \001(\0132\032.TSSSOS.S"
  "pecIntegerArchive\0225\n-default_title_parag"
  "raph_style_index_undefined\030N \001(\010\022E\n!valu"
  "e_title_paragraph_style_index\030O \001(\0132\032.TS"
  "SSOS.SpecIntegerArchive\0223\n+value_title_p"
  "aragraph_style_index_undefined\030P \001(\010\022=\n\031"
  "category_vertical_spacing\030Q \001(\0132\032.TSSSOS"
  ".SpecIntegerArchive\022+\n#category_vertical"
  "_spacing_undefined\030R \001(\010\"-\n+ChartLegendN"
  "onStylePropertyChangeSetArchive\"\372\003\n(Char"
  "tLegendStylePropertyChangeSetArchive\022-\n\014"
  "default_fill\030\001 \001(\0132\027.TSDSOS.SpecFillArch"
  "ive\022\036\n\026default_fill_undefined\030\002 \001(\010\022G\n#d"
  "efault_label_paragraph_style_index\030\003 \001(\013"
  "2\032.TSSSOS.SpecIntegerArchive\0225\n-default_"
  "label_paragraph_style_index_undefined\030\004 "
  "\001(\010\0222\n\017default_opacity\030\005 \001(\0132\031.TSSSOS.Sp"
  "ecDoubleArchive\022!\n\031default_opacity_undef"
  "ined\030\006 \001(\010\0221\n\016default_shadow\030\007 \001(\0132\031.TSD"
  "SOS.SpecShadowArchive\022 \n\030default_shadow_"
  "undefined\030\010 \001(\010\0221\n\016default_stroke\030\t \001(\0132"
  "\031.TSDSOS.SpecStrokeArchive\022 \n\030default_st"
  "roke_undefined\030\n \001(\010\"\352\031\n%ChartNonStylePr"
  "opertyChangeSetArchive\0227\n\023default3d_bar_"
  "shape\030\001 \001(\0132\032.TSSSOS.SpecIntegerArchive\022"
  "%\n\035default3d_bar_shape_undefined\030\002 \001(\010\0226"
  "\n\025default3d_bevel_edges\030\003 \001(\0132\027.TSSSOS.S"
  "pecBoolArchive\022\'\n\037default3d_bevel_edges_"
  "undefined\030\004 \001(\010\022@\n\035default3d_inter_set_d"
  "epth_gap\030\005 \001(\0132\031.TSSSOS.SpecDoubleArchiv"
  "e\022/\n\'default3d_inter_set_depth_gap_undef"
  "ined\030\006 \001(\010\022=\n\022default3d_rotation\030\007 \001(\0132!"
  ".TSCHSOS.SpecChart3dVectorArchive\022$\n\034def"
  "ault3d_rotation_undefined\030\010 \001(\010\0227\n\014area3"
  "d_scale\030\t \001(\0132!.TSCHSOS.SpecChart3dVecto"
  "rArchive\022\036\n\026area3d_scale_undefined\030\n \001(\010"
  "\0226\n\013bar3d_scale\030\013 \001(\0132!.TSCHSOS.SpecChar"
  "t3dVectorArchive\022\035\n\025bar3d_scale_undefine"
  "d\030\014 \001(\010\0229\n\016column3d_scale\030\r \001(\0132!.TSCHSO"
  "S.SpecChart3dVectorArchive\022 \n\030column3d_s"
  "cale_undefined\030\016 \001(\010\022:\n\017default3d_scale\030"
  "\017 \001(\0132!.TSCHSOS.SpecChart3dVectorArchive"
  "\022!\n\031default3d_scale_undefined\030\020 \001(\010\0227\n\014l"
  "ine3d_scale\030\021 \001(\0132!.TSCHSOS.SpecChart3dV"
  "ectorArchive\022\036\n\026line3d_scale_undefined\030\022"
  " \001(\010\0226\n\013pie3d_scale\030\023 \001(\0132!.TSCHSOS.Spec"
  "Chart3dVectorArchive\022\035\n\025pie3d_scale_unde"
  "fined\030\024 \001(\010\022=\n\022default3d_viewport\030\025 \001(\0132"
  "!.TSCHSOS.SpecChart3dVectorArchive\022$\n\034de"
  "fault3d_viewport_undefined\030\026 \001(\010\022:\n\026area"
  "_callout_line_type\030\027 \001(\0132\032.TSSSOS.SpecIn"
  "tegerArchive\022(\n area_callout_line_type_u"
  "ndefined\030\030 \001(\010\0229\n\025bar_callout_line_type\030"
  "\031 \001(\0132\032.TSSSOS.SpecIntegerArchive\022\'\n\037bar"
  "_callout_line_type_undefined\030\032 \001(\010\022<\n\030bu"
  "bble_callout_line_type\030\033 \001(\0132\032.TSSSOS.Sp"
  "ecIntegerArchive\022*\n\"bubble_callout_line_"
  "type_undefined\030\034 \001(\010\022=\n\031default_callout_"
  "line_type\030\035 \001(\0132\032.TSSSOS.SpecIntegerArch"
  "ive\022+\n#default_callout_line_type_undefin"
  "ed\030\036 \001(\010\022:\n\026line_callout_line_type\030\037 \001(\013"
  "2\032.TSSSOS.SpecIntegerArchive\022(\n line_cal"
  "lout_line_type_undefined\030  \001(\010\0229\n\025pie_ca"
  "llout_line_type\030! \001(\0132\032.TSSSOS.SpecInteg"
  "erArchive\022\'\n\037pie_callout_line_type_undef"
  "ined\030\" \001(\010\022=\n\031scatter_callout_line_type\030"
  "# \001(\0132\032.TSSSOS.SpecIntegerArchive\022+\n#sca"
  "tter_callout_line_type_undefined\030$ \001(\010\022B"
  "\n\036stacked_area_callout_line_type\030% \001(\0132\032"
  ".TSSSOS.SpecIntegerArchive\0220\n(stacked_ar"
  "ea_callout_line_type_undefined\030& \001(\010\022A\n\035"
  "stacked_bar_callout_line_type\030\' \001(\0132\032.TS"
  "SSOS.SpecIntegerArchive\022/\n\'stacked_bar_c"
  "allout_line_type_undefined\030( \001(\010\022Z\n9defa"
  "ult_d_e_p_r_e_c_a_t_e_d_rounded_corner_o"
  "uter_end_only\030) \001(\0132\027.TSSSOS.SpecBoolArc"
  "hive\022K\nCdefault_d_e_p_r_e_c_a_t_e_d_roun"
  "ded_corner_outer_end_only_undefined\030* \001("
  "\010\022T\n1default_d_e_p_r_e_c_a_t_e_d_rounded"
  "_corner_radius\030+ \001(\0132\031.TSSSOS.SpecDouble"
  "Archive\022C\n;default_d_e_p_r_e_c_a_t_e_d_r"
  "ounded_corner_radius_undefined\030, \001(\010\022B\n\036"
  "default_data_set_name_location\030- \001(\0132\032.T"
  "SSSOS.SpecIntegerArchive\0220\n(default_data"
  "_set_name_location_undefined\030. \001(\010\022D\n#de"
  "fault_donut_place_title_at_center\030/ \001(\0132"
  "\027.TSSSOS.SpecBoolArchive\0225\n-default_donu"
  "t_place_title_at_center_undefined\0300 \001(\010\022"
  "7\n\024default_inner_radius\0301 \001(\0132\031.TSSSOS.S"
  "pecDoubleArchive\022&\n\036default_inner_radius"
  "_undefined\0302 \001(\010\022C\n\037default_multi_data_c"
  "ontrol_type\0303 \001(\0132\032.TSSSOS.SpecIntegerAr"
  "chive\0221\n)default_multi_data_control_type"
  "_undefined\0304 \001(\010\022:\n\027default_pie_start_an"
  "gle\0305 \001(\0132\031.TSSSOS.SpecDoubleArchive\022)\n!"
  "default_pie_start_angle_undefined\0306 \001(\010\022"
  "4\n\023default_show_legend\0307 \001(\0132\027.TSSSOS.Sp"
  "ecBoolArchive\022%\n\035default_show_legend_und"
  "efined\0308 \001(\010\0223\n\022default_show_title\0309 \001(\013"
  "2\027.TSSSOS.SpecBoolArchive\022$\n\034default_sho"
  "w_title_undefined\030: \001(\010\0229\n\030default_skip_"
  "hidden_data\030; \001(\0132\027.TSSSOS.SpecBoolArchi"
  "ve\022*\n\"default_skip_hidden_data_undefined"
  "\030< \001(\010\0220\n\rdefault_title\030= \001(\0132\031.TSSSOS.S"
  "pecStringArchive\022\037\n\027default_title_undefi"
  "ned\030> \001(\010\"\353\004\n2ChartReferenceLineNonStyle"
  "PropertyChangeSetArchive\022M\n\024default_cust"
  "om_value\030\001 \001(\0132/.TSCHSOS.SpecChartsOptio"
  "nalDoubleArchiveArchive\022&\n\036default_custo"
  "m_value_undefined\030\002 \001(\010\0220\n\rdefault_label"
  "\030\003 \001(\0132\031.TSSSOS.SpecStringArchive\022\037\n\027def"
  "ault_label_undefined\030\004 \001(\010\0223\n\022default_sh"
  "ow_label\030\005 \001(\0132\027.TSSSOS.SpecBoolArchive\022"
  "$\n\034default_show_label_undefined\030\006 \001(\010\0222\n"
  "\021default_show_line\030\007 \001(\0132\027.TSSSOS.SpecBo"
  "olArchive\022#\n\033default_show_line_undefined"
  "\030\010 \001(\010\0229\n\030default_show_value_label\030\t \001(\013"
  "2\027.TSSSOS.SpecBoolArchive\022*\n\"default_sho"
  "w_value_label_undefined\030\n \001(\010\0220\n\014default"
  "_type\030\013 \001(\0132\032.TSSSOS.SpecIntegerArchive\022"
  "\036\n\026default_type_undefined\030\014 \001(\010\"\347\003\n/Char"
  "tReferenceLineStylePropertyChangeSetArch"
  "ive\022G\n#default_label_paragraph_style_ind"
  "ex\030\001 \001(\0132\032.TSSSOS.SpecIntegerArchive\0225\n-"
  "default_label_paragraph_style_index_unde"
  "fined\030\002 \001(\010\0221\n\016default_shadow\030\003 \001(\0132\031.TS"
  "DSOS.SpecShadowArchive\022 \n\030default_shadow"
  "_undefined\030\004 \001(\010\0221\n\016default_stroke\030\005 \001(\013"
  "2\031.TSDSOS.SpecStrokeArchive\022 \n\030default_s"
  "troke_undefined\030\006 \001(\010\022M\n)default_value_l"
  "abel_paragraph_style_index\030\007 \001(\0132\032.TSSSO"
  "S.SpecIntegerArchive\022;\n3default_value_la"
  "bel_paragraph_style_index_undefined\030\010 \001("
  "\010\"\220P\n+ChartSeriesNonStylePropertyChangeS"
  "etArchive\022\?\n\025default10_date_format\030\001 \001(\013"
  "2 .TSCHSOS.SpecFormatObjectArchive\022\'\n\037de"
  "fault10_date_format_undefined\030\002 \001(\010\022A\n\027d"
  "efault10_number_format\030\003 \001(\0132 .TSCHSOS.S"
  "pecNumberFormatArchive\022)\n!default10_numb"
  "er_format_undefined\030\004 \001(\010\022=\n\023pie10_numbe"
  "r_format\030\005 \001(\0132 .TSCHSOS.SpecNumberForma"
  "tArchive\022%\n\035pie10_number_format_undefine"
  "d\030\006 \001(\010\0228\n\025pie23_label_explosion\030\007 \001(\0132\031"
  ".TSSSOS.SpecDoubleArchive\022\'\n\037pie23_label"
  "_explosion_undefined\030\010 \001(\010\022:\n\027bubble_adj"
  "ustment_scale\030\t \001(\0132\031.TSSSOS.SpecDoubleA"
  "rchive\022)\n!bubble_adjustment_scale_undefi"
  "ned\030\n \001(\010\022=\n\023default_date_format\030\013 \001(\0132 "
  ".TSCHSOS.SpecFormatObjectArchive\022%\n\035defa"
  "ult_date_format_undefined\030\014 \001(\010\022A\n\027defau"
  "lt_duration_format\030\r \001(\0132 .TSCHSOS.SpecF"
  "ormatObjectArchive\022)\n!default_duration_f"
  "ormat_undefined\030\016 \001(\010\022<\n\030area_enable_cal"
  "lout_line\030\017 \001(\0132\032.TSSSOS.SpecIntegerArch"
  "ive\022*\n\"area_enable_callout_line_undefine"
  "d\030\020 \001(\010\022;\n\027bar_enable_callout_line\030\021 \001(\013"
  "2\032.TSSSOS.SpecIntegerArchive\022)\n!bar_enab"
  "le_callout_line_undefined\030\022 \001(\010\022>\n\032bubbl"
  "e_enable_callout_line\030\023 \001(\0132\032.TSSSOS.Spe"
  "cIntegerArchive\022,\n$bubble_enable_callout"
  "_line_undefined\030\024 \001(\010\022\?\n\033default_enable_"
  "callout_line\030\025 \001(\0132\032.TSSSOS.SpecIntegerA"
  "rchive\022-\n%default_enable_callout_line_un"
  "defined\030\026 \001(\010\022<\n\030line_enable_callout_lin"
  "e\030\027 \001(\0132\032.TSSSOS.SpecIntegerArchive\022*\n\"l"
  "ine_enable_callout_line_undefined\030\030 \001(\010\022"
  ";\n\027pie_enable_callout_line\030\031 \001(\0132\032.TSSSO"
  "S.SpecIntegerArchive\022)\n!pie_enable_callo"
  "ut_line_undefined\030\032 \001(\010\022\?\n\033scatter_enabl"
  "e_callout_line\030\033 \001(\0132\032.TSSSOS.SpecIntege"
  "rArchive\022-\n%scatter_enable_callout_line_"
  "undefined\030\034 \001(\010\022D\n stacked_area_enable_c"
  "allout_line\030\035 \001(\0132\032.TSSSOS.SpecIntegerAr"
  "chive\0222\n*stacked_area_enable_callout_lin"
  "e_undefined\030\036 \001(\010\022C\n\037stacked_bar_enable_"
  "callout_line\030\037 \001(\0132\032.TSSSOS.SpecIntegerA"
  "rchive\0221\n)stacked_bar_enable_callout_lin"
  "e_undefined\030  \001(\010\022[\n&default_error_bar_c"
  "ustom_negative_data\030! \001(\0132+.TSCHSOS.Spec"
  "ChartErrorBarCustomDataArchive\0228\n0defaul"
  "t_error_bar_custom_negative_data_undefin"
  "ed\030\" \001(\010\022e\n0default_error_bar_custom_neg"
  "ative_data_scatter_x\030# \001(\0132+.TSCHSOS.Spe"
  "cChartErrorBarCustomDataArchive\022B\n:defau"
  "lt_error_bar_custom_negative_data_scatte"
  "r_x_undefined\030$ \001(\010\022[\n&default_error_bar"
  "_custom_positive_data\030% \001(\0132+.TSCHSOS.Sp"
  "ecChartErrorBarCustomDataArchive\0228\n0defa"
  "ult_error_bar_custom_positive_data_undef"
  "ined\030& \001(\010\022e\n0default_error_bar_custom_p"
  "ositive_data_scatter_x\030\' \001(\0132+.TSCHSOS.S"
  "pecChartErrorBarCustomDataArchive\022B\n:def"
  "ault_error_bar_custom_positive_data_scat"
  "ter_x_undefined\030( \001(\010\022@\n\035default_error_b"
  "ar_fixed_value\030) \001(\0132\031.TSSSOS.SpecDouble"
  "Archive\022/\n\'default_error_bar_fixed_value"
  "_undefined\030* \001(\010\022J\n\'default_error_bar_fi"
  "xed_value_scatter_x\030+ \001(\0132\031.TSSSOS.SpecD"
  "oubleArchive\0229\n1default_error_bar_fixed_"
  "value_scatter_x_undefined\030, \001(\010\022B\n\037defau"
  "lt_error_bar_percent_value\030- \001(\0132\031.TSSSO"
  "S.SpecDoubleArchive\0221\n)default_error_bar"
  "_percent_value_undefined\030. \001(\010\022L\n)defaul"
  "t_error_bar_percent_value_scatter_x\030/ \001("
  "\0132\031.TSSSOS.SpecDoubleArchive\022;\n3default_"
  "error_bar_percent_value_scatter_x_undefi"
  "ned\0300 \001(\010\022=\n\031default_error_bar_setting\0301"
  " \001(\0132\032.TSSSOS.SpecIntegerArchive\022+\n#defa"
  "ult_error_bar_setting_undefined\0302 \001(\010\022G\n"
  "#default_error_bar_setting_scatter_x\0303 \001"
  "(\0132\032.TSSSOS.SpecIntegerArchive\0225\n-defaul"
  "t_error_bar_setting_scatter_x_undefined\030"
  "4 \001(\010\022B\n\037default_error_bar_std_dev_value"
  "\0305 \001(\0132\031.TSSSOS.SpecDoubleArchive\0221\n)def"
  "ault_error_bar_std_dev_value_undefined\0306"
  " \001(\010\022L\n)default_error_bar_std_dev_value_"
  "scatter_x\0307 \001(\0132\031.TSSSOS.SpecDoubleArchi"
  "ve\022;\n3default_error_bar_std_dev_value_sc"
  "atter_x_undefined\0308 \001(\010\022:\n\026default_error"
  "_bar_type\0309 \001(\0132\032.TSSSOS.SpecIntegerArch"
  "ive\022(\n default_error_bar_type_undefined\030"
  ": \001(\010\022D\n default_error_bar_type_scatter_"
  "x\030; \001(\0132\032.TSSSOS.SpecIntegerArchive\0222\n*d"
  "efault_error_bar_type_scatter_x_undefine"
  "d\030< \001(\010\0226\n\023pie_label_explosion\030= \001(\0132\031.T"
  "SSSOS.SpecDoubleArchive\022%\n\035pie_label_exp"
  "losion_undefined\030> \001(\010\0224\n\020bubble_line_ty"
  "pe\030\? \001(\0132\032.TSSSOS.SpecIntegerArchive\022\"\n\032"
  "bubble_line_type_undefined\030@ \001(\010\0222\n\016line"
  "_line_type\030A \001(\0132\032.TSSSOS.SpecIntegerArc"
  "hive\022 \n\030line_line_type_undefined\030B \001(\010\0228"
  "\n\024mixed_line_line_type\030C \001(\0132\032.TSSSOS.Sp"
  "ecIntegerArchive\022&\n\036mixed_line_line_type"
  "_undefined\030D \001(\010\0225\n\021scatter_line_type\030E "
  "\001(\0132\032.TSSSOS.SpecIntegerArchive\022#\n\033scatt"
  "er_line_type_undefined\030F \001(\010\022\?\n\025default_"
  "number_format\030G \001(\0132 .TSCHSOS.SpecNumber"
  "FormatArchive\022\'\n\037default_number_format_u"
  "ndefined\030H \001(\010\022;\n\021pie_number_format\030I \001("
  "\0132 .TSCHSOS.SpecNumberFormatArchive\022#\n\033p"
  "ie_number_format_undefined\030J \001(\010\022>\n\032defa"
  "ult_number_format_type\030K \001(\0132\032.TSSSOS.Sp"
  "ecIntegerArchive\022,\n$default_number_forma"
  "t_type_undefined\030L \001(\010\022:\n\026pie_number_for"
  "mat_type\030M \001(\0132\032.TSSSOS.SpecIntegerArchi"
  "ve\022(\n pie_number_format_type_undefined\030N"
  " \001(\010\022G\n\035stacked_percent_number_format\030O "
  "\001(\0132 .TSCHSOS.SpecNumberFormatArchive\022/\n"
  "\'stacked_percent_number_format_undefined"
  "\030P \001(\010\0227\n\023default_series_type\030Q \001(\0132\032.TS"
  "SSOS.SpecIntegerArchive\022%\n\035default_serie"
  "s_type_undefined\030R \001(\010\0227\n\026default_show_e"
  "rror_bar\030S \001(\0132\027.TSSSOS.SpecBoolArchive\022"
  "(\n default_show_error_bar_undefined\030T \001("
  "\010\022A\n default_show_error_bar_scatter_x\030U "
  "\001(\0132\027.TSSSOS.SpecBoolArchive\0222\n*default_"
  "show_error_bar_scatter_x_undefined\030V \001(\010"
  "\022<\n\033bubble_show_labels_in_front\030W \001(\0132\027."
  "TSSSOS.SpecBoolArchive\022-\n%bubble_show_la"
  "bels_in_front_undefined\030X \001(\010\022=\n\034default"
  "_show_labels_in_front\030Y \001(\0132\027.TSSSOS.Spe"
  "cBoolArchive\022.\n&default_show_labels_in_f"
  "ront_undefined\030Z \001(\010\0222\n\021scatter_show_lin"
  "e\030[ \001(\0132\027.TSSSOS.SpecBoolArchive\022#\n\033scat"
  "ter_show_line_undefined\030\\ \001(\010\022:\n\031bubble_"
  "show_negative_data\030] \001(\0132\027.TSSSOS.SpecBo"
  "olArchive\022+\n#bubble_show_negative_data_u"
  "ndefined\030^ \001(\010\022:\n\031bubble_show_series_lab"
  "els\030_ \001(\0132\027.TSSSOS.SpecBoolArchive\022+\n#bu"
  "bble_show_series_labels_undefined\030` \001(\010\022"
  "7\n\026pie_show_series_labels\030a \001(\0132\027.TSSSOS"
  ".SpecBoolArchive\022(\n pie_show_series_labe"
  "ls_undefined\030b \001(\010\022;\n\032scatter_show_serie"
  "s_labels\030c \001(\0132\027.TSSSOS.SpecBoolArchive\022"
  ",\n$scatter_show_series_labels_undefined\030"
  "d \001(\010\0221\n\020area_show_symbol\030e \001(\0132\027.TSSSOS"
  ".SpecBoolArchive\022\"\n\032area_show_symbol_und"
  "efined\030f \001(\010\0221\n\020line_show_symbol\030g \001(\0132\027"
  ".TSSSOS.SpecBoolArchive\022\"\n\032line_show_sym"
  "bol_undefined\030h \001(\010\0227\n\026mixed_area_show_s"
  "ymbol\030i \001(\0132\027.TSSSOS.SpecBoolArchive\022(\n "
  "mixed_area_show_symbol_undefined\030j \001(\010\0227"
  "\n\026mixed_line_show_symbol\030k \001(\0132\027.TSSSOS."
  "SpecBoolArchive\022(\n mixed_line_show_symbo"
  "l_undefined\030l \001(\010\0224\n\023scatter_show_symbol"
  "\030m \001(\0132\027.TSSSOS.SpecBoolArchive\022%\n\035scatt"
  "er_show_symbol_undefined\030n \001(\010\0228\n\027defaul"
  "t_show_trend_line\030o \001(\0132\027.TSSSOS.SpecBoo"
  "lArchive\022)\n!default_show_trend_line_unde"
  "fined\030p \001(\010\0227\n\026area_show_value_labels\030q "
  "\001(\0132\027.TSSSOS.SpecBoolArchive\022(\n area_sho"
  "w_value_labels_undefined\030r \001(\010\0226\n\025bar_sh"
  "ow_value_labels\030s \001(\0132\027.TSSSOS.SpecBoolA"
  "rchive\022\'\n\037bar_show_value_labels_undefine"
  "d\030t \001(\010\0229\n\030bubble_show_value_labels\030u \001("
  "\0132\027.TSSSOS.SpecBoolArchive\022*\n\"bubble_sho"
  "w_value_labels_undefined\030v \001(\010\022:\n\031defaul"
  "t_show_value_labels\030w \001(\0132\027.TSSSOS.SpecB"
  "oolArchive\022+\n#default_show_value_labels_"
  "undefined\030x \001(\010\0227\n\026line_show_value_label"
  "s\030y \001(\0132\027.TSSSOS.SpecBoolArchive\022(\n line"
  "_show_value_labels_undefined\030z \001(\010\0228\n\027mi"
  "xed_show_value_labels\030{ \001(\0132\027.TSSSOS.Spe"
  "cBoolArchive\022)\n!mixed_show_value_labels_"
  "undefined\030| \001(\010\0226\n\025pie_show_value_labels"
  "\030} \001(\0132\027.TSSSOS.SpecBoolArchive\022\'\n\037pie_s"
  "how_value_labels_undefined\030~ \001(\010\022:\n\031scat"
  "ter_show_value_labels\030\177 \001(\0132\027.TSSSOS.Spe"
  "cBoolArchive\022,\n#scatter_show_value_label"
  "s_undefined\030\200\001 \001(\010\022:\n\025bubble_size_dimens"
  "ion\030\201\001 \001(\0132\032.TSSSOS.SpecIntegerArchive\022("
  "\n\037bubble_size_dimension_undefined\030\202\001 \001(\010"
  "\0223\n\021area_stack_labels\030\203\001 \001(\0132\027.TSSSOS.Sp"
  "ecBoolArchive\022$\n\033area_stack_labels_undef"
  "ined\030\204\001 \001(\010\0222\n\020bar_stack_labels\030\205\001 \001(\0132\027"
  ".TSSSOS.SpecBoolArchive\022#\n\032bar_stack_lab"
  "els_undefined\030\206\001 \001(\010\0225\n\023bubble_stack_lab"
  "els\030\207\001 \001(\0132\027.TSSSOS.SpecBoolArchive\022&\n\035b"
  "ubble_stack_labels_undefined\030\210\001 \001(\010\0226\n\024d"
  "efault_stack_labels\030\211\001 \001(\0132\027.TSSSOS.Spec"
  "BoolArchive\022\'\n\036default_stack_labels_unde"
  "fined\030\212\001 \001(\010\0223\n\021line_stack_labels\030\213\001 \001(\013"
  "2\027.TSSSOS.SpecBoolArchive\022$\n\033line_stack_"
  "labels_undefined\030\214\001 \001(\010\0222\n\020pie_stack_lab"
  "els\030\215\001 \001(\0132\027.TSSSOS.SpecBoolArchive\022#\n\032p"
  "ie_stack_labels_undefined\030\216\001 \001(\010\0226\n\024scat"
  "ter_stack_labels\030\217\001 \001(\0132\027.TSSSOS.SpecBoo"
  "lArchive\022\'\n\036scatter_stack_labels_undefin"
  "ed\030\220\001 \001(\010\022;\n\031stacked_area_stack_labels\030\221"
  "\001 \001(\0132\027.TSSSOS.SpecBoolArchive\022,\n#stacke"
  "d_area_stack_labels_undefined\030\222\001 \001(\010\022:\n\030"
  "stacked_bar_stack_labels\030\223\001 \001(\0132\027.TSSSOS"
  ".SpecBoolArchive\022+\n\"stacked_bar_stack_la"
  "bels_undefined\030\224\001 \001(\010\0225\n\020area_symbol_typ"
  "e\030\225\001 \001(\0132\032.TSSSOS.SpecIntegerArchive\022#\n\032"
  "area_symbol_type_undefined\030\226\001 \001(\010\0225\n\020lin"
  "e_symbol_type\030\227\001 \001(\0132\032.TSSSOS.SpecIntege"
  "rArchive\022#\n\032line_symbol_type_undefined\030\230"
  "\001 \001(\010\022;\n\026mixed_area_symbol_type\030\231\001 \001(\0132\032"
  ".TSSSOS.SpecIntegerArchive\022)\n mixed_area"
  "_symbol_type_undefined\030\232\001 \001(\010\022;\n\026mixed_l"
  "ine_symbol_type\030\233\001 \001(\0132\032.TSSSOS.SpecInte"
  "gerArchive\022)\n mixed_line_symbol_type_und"
  "efined\030\234\001 \001(\010\0228\n\023scatter_symbol_type\030\235\001 "
  "\001(\0132\032.TSSSOS.SpecIntegerArchive\022&\n\035scatt"
  "er_symbol_type_undefined\030\236\001 \001(\010\022H\n$defau"
  "lt_trend_line_equation_offset_x\030\237\001 \001(\0132\031"
  ".TSSSOS.SpecDoubleArchive\0227\n.default_tre"
  "nd_line_equation_offset_x_undefined\030\240\001 \001"
  "(\010\022H\n$default_trend_line_equation_offset"
  "_y\030\241\001 \001(\0132\031.TSSSOS.SpecDoubleArchive\0227\n."
  "default_trend_line_equation_offset_y_und"
  "efined\030\242\001 \001(\010\022C\n\037default_trend_line_labe"
  "l_string\030\243\001 \001(\0132\031.TSSSOS.SpecStringArchi"
  "ve\0222\n)default_trend_line_label_string_un"
  "defined\030\244\001 \001(\010\022=\n\030default_trend_line_ord"
  "er\030\245\001 \001(\0132\032.TSSSOS.SpecIntegerArchive\022+\n"
  "\"default_trend_line_order_undefined\030\246\001 \001"
  "(\010\022>\n\031default_trend_line_period\030\247\001 \001(\0132\032"
  ".TSSSOS.SpecIntegerArchive\022,\n#default_tr"
  "end_line_period_undefined\030\250\001 \001(\010\022I\n%defa"
  "ult_trend_line_r_squared_offset_x\030\251\001 \001(\013"
  "2\031.TSSSOS.SpecDoubleArchive\0228\n/default_t"
  "rend_line_r_squared_offset_x_undefined\030\252"
  "\001 \001(\010\022I\n%default_trend_line_r_squared_of"
  "fset_y\030\253\001 \001(\0132\031.TSSSOS.SpecDoubleArchive"
  "\0228\n/default_trend_line_r_squared_offset_"
  "y_undefined\030\254\001 \001(\010\022B\n default_trend_line"
  "_show_equation\030\255\001 \001(\0132\027.TSSSOS.SpecBoolA"
  "rchive\0223\n*default_trend_line_show_equati"
  "on_undefined\030\256\001 \001(\010\022\?\n\035default_trend_lin"
  "e_show_label\030\257\001 \001(\0132\027.TSSSOS.SpecBoolArc"
  "hive\0220\n\'default_trend_line_show_label_un"
  "defined\030\260\001 \001(\010\022B\n default_trend_line_sho"
  "w_r2_value\030\261\001 \001(\0132\027.TSSSOS.SpecBoolArchi"
  "ve\0223\n*default_trend_line_show_r2_value_u"
  "ndefined\030\262\001 \001(\010\022<\n\027default_trend_line_ty"
  "pe\030\263\001 \001(\0132\032.TSSSOS.SpecIntegerArchive\022*\n"
  "!default_trend_line_type_undefined\030\264\001 \001("
  "\010\022=\n\030bubble_value_labels_axis\030\265\001 \001(\0132\032.T"
  "SSSOS.SpecIntegerArchive\022+\n\"bubble_value"
  "_labels_axis_undefined\030\266\001 \001(\010\022>\n\031scatter"
  "_value_labels_axis\030\267\001 \001(\0132\032.TSSSOS.SpecI"
  "ntegerArchive\022,\n#scatter_value_labels_ax"
  "is_undefined\030\270\001 \001(\010\0227\n\023pie_wedge_explosi"
  "on\030\271\001 \001(\0132\031.TSSSOS.SpecDoubleArchive\022&\n\035"
  "pie_wedge_explosion_undefined\030\272\001 \001(\010\022;\n\026"
  "default_y_axis_ordinal\030\273\001 \001(\0132\032.TSSSOS.S"
  "pecIntegerArchive\022)\n default_y_axis_ordi"
  "nal_undefined\030\274\001 \001(\010\"\323V\n(ChartSeriesStyl"
  "ePropertyChangeSetArchive\022E\n!default_cal"
  "lout_line_end_line_end\030\001 \001(\0132\032.TSDSOS.Sp"
  "ecLineEndArchive\0223\n+default_callout_line"
  "_end_line_end_undefined\030\002 \001(\010\022G\n#default"
  "_callout_line_start_line_end\030\003 \001(\0132\032.TSD"
  "SOS.SpecLineEndArchive\0225\n-default_callou"
  "t_line_start_line_end_undefined\030\004 \001(\010\022D\n"
  "!default_callout_line_stroke_style\030\005 \001(\013"
  "2\031.TSDSOS.SpecStrokeArchive\0223\n+default_c"
  "allout_line_stroke_style_undefined\030\006 \001(\010"
  "\022>\n\032default_error_bar_line_end\030\007 \001(\0132\032.T"
  "SDSOS.SpecLineEndArchive\022,\n$default_erro"
  "r_bar_line_end_undefined\030\010 \001(\010\022H\n$defaul"
  "t_error_bar_line_end_scatter_x\030\t \001(\0132\032.T"
  "SDSOS.SpecLineEndArchive\0226\n.default_erro"
  "r_bar_line_end_scatter_x_undefined\030\n \001(\010"
  "\022;\n\030default_error_bar_shadow\030\013 \001(\0132\031.TSD"
  "SOS.SpecShadowArchive\022*\n\"default_error_b"
  "ar_shadow_undefined\030\014 \001(\010\022=\n\031default_err"
  "or_bar_spacing\030\r \001(\0132\032.TSSSOS.SpecIntege"
  "rArchive\022+\n#default_error_bar_spacing_un"
  "defined\030\016 \001(\010\022G\n#default_error_bar_spaci"
  "ng_scatter_x\030\017 \001(\0132\032.TSSSOS.SpecIntegerA"
  "rchive\0225\n-default_error_bar_spacing_scat"
  "ter_x_undefined\030\020 \001(\010\022;\n\030default_error_b"
  "ar_stroke\030\021 \001(\0132\031.TSDSOS.SpecStrokeArchi"
  "ve\022*\n\"default_error_bar_stroke_undefined"
  "\030\022 \001(\010\022E\n\"default_error_bar_stroke_scatt"
  "er_x\030\023 \001(\0132\031.TSDSOS.SpecStrokeArchive\0224\n"
  ",default_error_bar_stroke_scatter_x_unde"
  "fined\030\024 \001(\010\022,\n\013area3d_fill\030\025 \001(\0132\027.TSDSO"
  "S.SpecFillArchive\022\035\n\025area3d_fill_undefin"
  "ed\030\026 \001(\010\022+\n\nbar3d_fill\030\027 \001(\0132\027.TSDSOS.Sp"
  "ecFillArchive\022\034\n\024bar3d_fill_undefined\030\030 "
  "\001(\010\022.\n\rcolumn3d_fill\030\031 \001(\0132\027.TSDSOS.Spec"
  "FillArchive\022\037\n\027column3d_fill_undefined\030\032"
  " \001(\010\022,\n\013line3d_fill\030\033 \001(\0132\027.TSDSOS.SpecF"
  "illArchive\022\035\n\025line3d_fill_undefined\030\034 \001("
  "\010\022+\n\npie3d_fill\030\035 \001(\0132\027.TSDSOS.SpecFillA"
  "rchive\022\034\n\024pie3d_fill_undefined\030\036 \001(\010\022*\n\t"
  "area_fill\030\037 \001(\0132\027.TSDSOS.SpecFillArchive"
  "\022\033\n\023area_fill_undefined\030  \001(\010\022)\n\010bar_fil"
  "l\030! \001(\0132\027.TSDSOS.SpecFillArchive\022\032\n\022bar_"
  "fill_undefined\030\" \001(\010\022,\n\013column_fill\030# \001("
  "\0132\027.TSDSOS.SpecFillArchive\022\035\n\025column_fil"
  "l_undefined\030$ \001(\010\022-\n\014default_fill\030% \001(\0132"
  "\027.TSDSOS.SpecFillArchive\022\036\n\026default_fill"
  "_undefined\030& \001(\010\0220\n\017mixed_area_fill\030\' \001("
  "\0132\027.TSDSOS.SpecFillArchive\022!\n\031mixed_area"
  "_fill_undefined\030( \001(\010\0222\n\021mixed_column_fi"
  "ll\030) \001(\0132\027.TSDSOS.SpecFillArchive\022#\n\033mix"
  "ed_column_fill_undefined\030* \001(\010\022)\n\010pie_fi"
  "ll\030+ \001(\0132\027.TSDSOS.SpecFillArchive\022\032\n\022pie"
  "_fill_undefined\030, \001(\010\022D\n area_label_para"
  "graph_style_index\030- \001(\0132\032.TSSSOS.SpecInt"
  "egerArchive\0222\n*area_label_paragraph_styl"
  "e_index_undefined\030. \001(\010\022C\n\037bar_label_par"
  "agraph_style_index\030/ \001(\0132\032.TSSSOS.SpecIn"
  "tegerArchive\0221\n)bar_label_paragraph_styl"
  "e_index_undefined\0300 \001(\010\022G\n#default_label"
  "_paragraph_style_index\0301 \001(\0132\032.TSSSOS.Sp"
  "ecIntegerArchive\0225\n-default_label_paragr"
  "aph_style_index_undefined\0302 \001(\010\022E\n!donut"
  "_label_paragraph_style_index\0303 \001(\0132\032.TSS"
  "SOS.SpecIntegerArchive\0223\n+donut_label_pa"
  "ragraph_style_index_undefined\0304 \001(\010\022D\n l"
  "ine_label_paragraph_style_index\0305 \001(\0132\032."
  "TSSSOS.SpecIntegerArchive\0222\n*line_label_"
  "paragraph_style_index_undefined\0306 \001(\010\022E\n"
  "!mixed_label_paragraph_style_index\0307 \001(\013"
  "2\032.TSSSOS.SpecIntegerArchive\0223\n+mixed_la"
  "bel_paragraph_style_index_undefined\0308 \001("
  "\010\022C\n\037pie_label_paragraph_style_index\0309 \001"
  "(\0132\032.TSSSOS.SpecIntegerArchive\0221\n)pie_la"
  "bel_paragraph_style_index_undefined\030: \001("
  "\010\0222\n\017default_opacity\030; \001(\0132\031.TSSSOS.Spec"
  "DoubleArchive\022!\n\031default_opacity_undefin"
  "ed\030< \001(\010\022L\n(area_outside_label_paragraph"
  "_style_index\030= \001(\0132\032.TSSSOS.SpecIntegerA"
  "rchive\022:\n2area_outside_label_paragraph_s"
  "tyle_index_undefined\030> \001(\010\022K\n\'bar_outsid"
  "e_label_paragraph_style_index\030\? \001(\0132\032.TS"
  "SSOS.SpecIntegerArchive\0229\n1bar_outside_l"
  "abel_paragraph_style_index_undefined\030@ \001"
  "(\010\022O\n+default_outside_label_paragraph_st"
  "yle_index\030A \001(\0132\032.TSSSOS.SpecIntegerArch"
  "ive\022=\n5default_outside_label_paragraph_s"
  "tyle_index_undefined\030B \001(\010\022M\n)donut_outs"
  "ide_label_paragraph_style_index\030C \001(\0132\032."
  "TSSSOS.SpecIntegerArchive\022;\n3donut_outsi"
  "de_label_paragraph_style_index_undefined"
  "\030D \001(\010\022M\n)mixed_outside_label_paragraph_"
  "style_index\030E \001(\0132\032.TSSSOS.SpecIntegerAr"
  "chive\022;\n3mixed_outside_label_paragraph_s"
  "tyle_index_undefined\030F \001(\010\022K\n\'pie_outsid"
  "e_label_paragraph_style_index\030G \001(\0132\032.TS"
  "SSOS.SpecIntegerArchive\0229\n1pie_outside_l"
  "abel_paragraph_style_index_undefined\030H \001"
  "(\010\0220\n\rarea3d_shadow\030I \001(\0132\031.TSDSOS.SpecS"
  "hadowArchive\022\037\n\027area3d_shadow_undefined\030"
  "J \001(\010\022/\n\014bar3d_shadow\030K \001(\0132\031.TSDSOS.Spe"
  "cShadowArchive\022\036\n\026bar3d_shadow_undefined"
  "\030L \001(\010\0222\n\017column3d_shadow\030M \001(\0132\031.TSDSOS"
  ".SpecShadowArchive\022!\n\031column3d_shadow_un"
  "defined\030N \001(\010\0220\n\rline3d_shadow\030O \001(\0132\031.T"
  "SDSOS.SpecShadowArchive\022\037\n\027line3d_shadow"
  "_undefined\030P \001(\010\022/\n\014pie3d_shadow\030Q \001(\0132\031"
  ".TSDSOS.SpecShadowArchive\022\036\n\026pie3d_shado"
  "w_undefined\030R \001(\010\022.\n\013area_shadow\030S \001(\0132\031"
  ".TSDSOS.SpecShadowArchive\022\035\n\025area_shadow"
  "_undefined\030T \001(\010\022-\n\nbar_shadow\030U \001(\0132\031.T"
  "SDSOS.SpecShadowArchive\022\034\n\024bar_shadow_un"
  "defined\030V \001(\010\0220\n\rbubble_shadow\030W \001(\0132\031.T"
  "SDSOS.SpecShadowArchive\022\037\n\027bubble_shadow"
  "_undefined\030X \001(\010\0221\n\016default_shadow\030Y \001(\013"
  "2\031.TSDSOS.SpecShadowArchive\022 \n\030default_s"
  "hadow_undefined\030Z \001(\010\022.\n\013line_shadow\030[ \001"
  "(\0132\031.TSDSOS.SpecShadowArchive\022\035\n\025line_sh"
  "adow_undefined\030\\ \001(\010\0224\n\021mixed_area_shado"
  "w\030] \001(\0132\031.TSDSOS.SpecShadowArchive\022#\n\033mi"
  "xed_area_shadow_undefined\030^ \001(\010\0226\n\023mixed"
  "_column_shadow\030_ \001(\0132\031.TSDSOS.SpecShadow"
  "Archive\022%\n\035mixed_column_shadow_undefined"
  "\030` \001(\010\0224\n\021mixed_line_shadow\030a \001(\0132\031.TSDS"
  "OS.SpecShadowArchive\022#\n\033mixed_line_shado"
  "w_undefined\030b \001(\010\022-\n\npie_shadow\030c \001(\0132\031."
  "TSDSOS.SpecShadowArchive\022\034\n\024pie_shadow_u"
  "ndefined\030d \001(\010\0221\n\016scatter_shadow\030e \001(\0132\031"
  ".TSDSOS.SpecShadowArchive\022 \n\030scatter_sha"
  "dow_undefined\030f \001(\010\022.\n\013area_stroke\030g \001(\013"
  "2\031.TSDSOS.SpecStrokeArchive\022\035\n\025area_stro"
  "ke_undefined\030h \001(\010\022-\n\nbar_stroke\030i \001(\0132\031"
  ".TSDSOS.SpecStrokeArchive\022\034\n\024bar_stroke_"
  "undefined\030j \001(\010\0220\n\rbubble_stroke\030k \001(\0132\031"
  ".TSDSOS.SpecStrokeArchive\022\037\n\027bubble_stro"
  "ke_undefined\030l \001(\010\022.\n\013line_stroke\030m \001(\0132"
  "\031.TSDSOS.SpecStrokeArchive\022\035\n\025line_strok"
  "e_undefined\030n \001(\010\0224\n\021mixed_area_stroke\030o"
  " \001(\0132\031.TSDSOS.SpecStrokeArchive\022#\n\033mixed"
  "_area_stroke_undefined\030p \001(\010\0226\n\023mixed_co"
  "lumn_stroke\030q \001(\0132\031.TSDSOS.SpecStrokeArc"
  "hive\022%\n\035mixed_column_stroke_undefined\030r "
  "\001(\010\0224\n\021mixed_line_stroke\030s \001(\0132\031.TSDSOS."
  "SpecStrokeArchive\022#\n\033mixed_line_stroke_u"
  "ndefined\030t \001(\010\022-\n\npie_stroke\030u \001(\0132\031.TSD"
  "SOS.SpecStrokeArchive\022\034\n\024pie_stroke_unde"
  "fined\030v \001(\010\0221\n\016scatter_stroke\030w \001(\0132\031.TS"
  "DSOS.SpecStrokeArchive\022 \n\030scatter_stroke"
  "_undefined\030x \001(\010\0221\n\020area_symbol_fill\030y \001"
  "(\0132\027.TSDSOS.SpecFillArchive\022\"\n\032area_symb"
  "ol_fill_undefined\030z \001(\010\0223\n\022bubble_symbol"
  "_fill\030{ \001(\0132\027.TSDSOS.SpecFillArchive\022$\n\034"
  "bubble_symbol_fill_undefined\030| \001(\010\0221\n\020li"
  "ne_symbol_fill\030} \001(\0132\027.TSDSOS.SpecFillAr"
  "chive\022\"\n\032line_symbol_fill_undefined\030~ \001("
  "\010\0227\n\026mixed_area_symbol_fill\030\177 \001(\0132\027.TSDS"
  "OS.SpecFillArchive\022)\n mixed_area_symbol_"
  "fill_undefined\030\200\001 \001(\010\0228\n\026mixed_line_symb"
  "ol_fill\030\201\001 \001(\0132\027.TSDSOS.SpecFillArchive\022"
  ")\n mixed_line_symbol_fill_undefined\030\202\001 \001"
  "(\010\0225\n\023scatter_symbol_fill\030\203\001 \001(\0132\027.TSDSO"
  "S.SpecFillArchive\022&\n\035scatter_symbol_fill"
  "_undefined\030\204\001 \001(\010\022B\n area_symbol_fill_us"
  "e_series_fill\030\205\001 \001(\0132\027.TSSSOS.SpecBoolAr"
  "chive\0223\n*area_symbol_fill_use_series_fil"
  "l_undefined\030\206\001 \001(\010\022B\n line_symbol_fill_u"
  "se_series_fill\030\207\001 \001(\0132\027.TSSSOS.SpecBoolA"
  "rchive\0223\n*line_symbol_fill_use_series_fi"
  "ll_undefined\030\210\001 \001(\010\022H\n&mixed_area_symbol"
  "_fill_use_series_fill\030\211\001 \001(\0132\027.TSSSOS.Sp"
  "ecBoolArchive\0229\n0mixed_area_symbol_fill_"
  "use_series_fill_undefined\030\212\001 \001(\010\022H\n&mixe"
  "d_line_symbol_fill_use_series_fill\030\213\001 \001("
  "\0132\027.TSSSOS.SpecBoolArchive\0229\n0mixed_line"
  "_symbol_fill_use_series_fill_undefined\030\214"
  "\001 \001(\010\022D\n\"area_symbol_fill_use_series_str"
  "oke\030\215\001 \001(\0132\027.TSSSOS.SpecBoolArchive\0225\n,a"
  "rea_symbol_fill_use_series_stroke_undefi"
  "ned\030\216\001 \001(\010\022F\n$bubble_symbol_fill_use_ser"
  "ies_stroke\030\217\001 \001(\0132\027.TSSSOS.SpecBoolArchi"
  "ve\0227\n.bubble_symbol_fill_use_series_stro"
  "ke_undefined\030\220\001 \001(\010\022D\n\"line_symbol_fill_"
  "use_series_stroke\030\221\001 \001(\0132\027.TSSSOS.SpecBo"
  "olArchive\0225\n,line_symbol_fill_use_series"
  "_stroke_undefined\030\222\001 \001(\010\022J\n(mixed_area_s"
  "ymbol_fill_use_series_stroke\030\223\001 \001(\0132\027.TS"
  "SSOS.SpecBoolArchive\022;\n2mixed_area_symbo"
  "l_fill_use_series_stroke_undefined\030\224\001 \001("
  "\010\022J\n(mixed_line_symbol_fill_use_series_s"
  "troke\030\225\001 \001(\0132\027.TSSSOS.SpecBoolArchive\022;\n"
  "2mixed_line_symbol_fill_use_series_strok"
  "e_undefined\030\226\001 \001(\010\022G\n%scatter_symbol_fil"
  "l_use_series_stroke\030\227\001 \001(\0132\027.TSSSOS.Spec"
  "BoolArchive\0228\n/scatter_symbol_fill_use_s"
  "eries_stroke_undefined\030\230\001 \001(\010\0224\n\020area_sy"
  "mbol_size\030\231\001 \001(\0132\031.TSSSOS.SpecDoubleArch"
  "ive\022#\n\032area_symbol_size_undefined\030\232\001 \001(\010"
  "\0224\n\020line_symbol_size\030\233\001 \001(\0132\031.TSSSOS.Spe"
  "cDoubleArchive\022#\n\032line_symbol_size_undef"
  "ined\030\234\001 \001(\010\022:\n\026mixed_area_symbol_size\030\235\001"
  " \001(\0132\031.TSSSOS.SpecDoubleArchive\022)\n mixed"
  "_area_symbol_size_undefined\030\236\001 \001(\010\022:\n\026mi"
  "xed_line_symbol_size\030\237\001 \001(\0132\031.TSSSOS.Spe"
  "cDoubleArchive\022)\n mixed_line_symbol_size"
  "_undefined\030\240\001 \001(\010\0227\n\023scatter_symbol_size"
  "\030\241\001 \001(\0132\031.TSSSOS.SpecDoubleArchive\022&\n\035sc"
  "atter_symbol_size_undefined\030\242\001 \001(\010\0226\n\022ar"
  "ea_symbol_stroke\030\243\001 \001(\0132\031.TSDSOS.SpecStr"
  "okeArchive\022%\n\034area_symbol_stroke_undefin"
  "ed\030\244\001 \001(\010\0228\n\024bubble_symbol_stroke\030\245\001 \001(\013"
  "2\031.TSDSOS.SpecStrokeArchive\022\'\n\036bubble_sy"
  "mbol_stroke_undefined\030\246\001 \001(\010\0226\n\022line_sym"
  "bol_stroke\030\247\001 \001(\0132\031.TSDSOS.SpecStrokeArc"
  "hive\022%\n\034line_symbol_stroke_undefined\030\250\001 "
  "\001(\010\022<\n\030mixed_area_symbol_stroke\030\251\001 \001(\0132\031"
  ".TSDSOS.SpecStrokeArchive\022+\n\"mixed_area_"
  "symbol_stroke_undefined\030\252\001 \001(\010\022<\n\030mixed_"
  "line_symbol_stroke\030\253\001 \001(\0132\031.TSDSOS.SpecS"
  "trokeArchive\022+\n\"mixed_line_symbol_stroke"
  "_undefined\030\254\001 \001(\010\0229\n\025scatter_symbol_stro"
  "ke\030\255\001 \001(\0132\031.TSDSOS.SpecStrokeArchive\022(\n\037"
  "scatter_symbol_stroke_undefined\030\256\001 \001(\010\022="
  "\n\031default_trend_line_shadow\030\257\001 \001(\0132\031.TSD"
  "SOS.SpecShadowArchive\022,\n#default_trend_l"
  "ine_shadow_undefined\030\260\001 \001(\010\022=\n\031default_t"
  "rend_line_stroke\030\261\001 \001(\0132\031.TSDSOS.SpecStr"
  "okeArchive\022,\n#default_trend_line_stroke_"
  "undefined\030\262\001 \001(\010\022F\n\"default_trendline_eq"
  "uation_opacity\030\263\001 \001(\0132\031.TSSSOS.SpecDoubl"
  "eArchive\0225\n,default_trendline_equation_o"
  "pacity_undefined\030\264\001 \001(\010\022U\n0default_trend"
  "line_equation_paragraph_style_index\030\265\001 \001"
  "(\0132\032.TSSSOS.SpecIntegerArchive\022C\n:defaul"
  "t_trendline_equation_paragraph_style_ind"
  "ex_undefined\030\266\001 \001(\010\022G\n#default_trendline"
  "_r_squared_opacity\030\267\001 \001(\0132\031.TSSSOS.SpecD"
  "oubleArchive\0226\n-default_trendline_r_squa"
  "red_opacity_undefined\030\270\001 \001(\010\022V\n1default_"
  "trendline_r_squared_paragraph_style_inde"
  "x\030\271\001 \001(\0132\032.TSSSOS.SpecIntegerArchive\022D\n;"
  "default_trendline_r_squared_paragraph_st"
  "yle_index_undefined\030\272\001 \001(\010\022>\n\031area_value"
  "_label_position\030\273\001 \001(\0132\032.TSSSOS.SpecInte"
  "gerArchive\022,\n#area_value_label_position_"
  "undefined\030\274\001 \001(\010\022=\n\030bar_value_label_posi"
  "tion\030\275\001 \001(\0132\032.TSSSOS.SpecIntegerArchive\022"
  "+\n\"bar_value_label_position_undefined\030\276\001"
  " \001(\010\022@\n\033bubble_value_label_position\030\277\001 \001"
  "(\0132\032.TSSSOS.SpecIntegerArchive\022.\n%bubble"
  "_value_label_position_undefined\030\300\001 \001(\010\022A"
  "\n\034default_value_label_position\030\301\001 \001(\0132\032."
  "TSSSOS.SpecIntegerArchive\022/\n&default_val"
  "ue_label_position_undefined\030\302\001 \001(\010\022>\n\031li"
  "ne_value_label_position\030\303\001 \001(\0132\032.TSSSOS."
  "SpecIntegerArchive\022,\n#line_value_label_p"
  "osition_undefined\030\304\001 \001(\010\022D\n\037mixed_area_v"
  "alue_label_position\030\305\001 \001(\0132\032.TSSSOS.Spec"
  "IntegerArchive\0222\n)mixed_area_value_label"
  "_position_undefined\030\306\001 \001(\010\022F\n!mixed_colu"
  "mn_value_label_position\030\307\001 \001(\0132\032.TSSSOS."
  "SpecIntegerArchive\0224\n+mixed_column_value"
  "_label_position_undefined\030\310\001 \001(\010\022D\n\037mixe"
  "d_line_value_label_position\030\311\001 \001(\0132\032.TSS"
  "SOS.SpecIntegerArchive\0222\n)mixed_line_val"
  "ue_label_position_undefined\030\312\001 \001(\010\022A\n\034sc"
  "atter_value_label_position\030\313\001 \001(\0132\032.TSSS"
  "OS.SpecIntegerArchive\022/\n&scatter_value_l"
  "abel_position_undefined\030\314\001 \001(\010\022F\n!stacke"
  "d_area_value_label_position\030\315\001 \001(\0132\032.TSS"
  "SOS.SpecIntegerArchive\0224\n+stacked_area_v"
  "alue_label_position_undefined\030\316\001 \001(\010\022E\n "
  "stacked_bar_value_label_position\030\317\001 \001(\0132"
  "\032.TSSSOS.SpecIntegerArchive\0223\n*stacked_b"
  "ar_value_label_position_undefined\030\320\001 \001(\010"
  "\022@\n\033default_value_label_spacing\030\321\001 \001(\0132\032"
  ".TSSSOS.SpecIntegerArchive\022.\n%default_va"
  "lue_label_spacing_undefined\030\322\001 \001(\010\"\252\024\n\"C"
  "hartStylePropertyChangeSetArchive\022:\n\027def"
  "ault3d_chart_opacity\030\001 \001(\0132\031.TSSSOS.Spec"
  "DoubleArchive\022)\n!default3d_chart_opacity"
  "_undefined\030\002 \001(\010\022K\n\027area3d_lighting_pack"
  "age\030\003 \001(\0132*.TSCHSOS.SpecChart3dLightingP"
  "ackageArchive\022)\n!area3d_lighting_package"
  "_undefined\030\004 \001(\010\022J\n\026bar3d_lighting_packa"
  "ge\030\005 \001(\0132*.TSCHSOS.SpecChart3dLightingPa"
  "ckageArchive\022(\n bar3d_lighting_package_u"
  "ndefined\030\006 \001(\010\022M\n\031column3d_lighting_pack"
  "age\030\007 \001(\0132*.TSCHSOS.SpecChart3dLightingP"
  "ackageArchive\022+\n#column3d_lighting_packa"
  "ge_undefined\030\010 \001(\010\022N\n\032default3d_lighting"
  "_package\030\t \001(\0132*.TSCHSOS.SpecChart3dLigh"
  "tingPackageArchive\022,\n$default3d_lighting"
  "_package_undefined\030\n \001(\010\022K\n\027line3d_light"
  "ing_package\030\013 \001(\0132*.TSCHSOS.SpecChart3dL"
  "ightingPackageArchive\022)\n!line3d_lighting"
  "_package_undefined\030\014 \001(\010\022J\n\026pie3d_lighti"
  "ng_package\030\r \001(\0132*.TSCHSOS.SpecChart3dLi"
  "ghtingPackageArchive\022(\n pie3d_lighting_p"
  "ackage_undefined\030\016 \001(\010\0228\n\027default_backgr"
  "ound_fill\030\017 \001(\0132\027.TSDSOS.SpecFillArchive"
  "\022)\n!default_background_fill_undefined\030\020 "
  "\001(\010\022<\n\031default_background_stroke\030\021 \001(\0132\031"
  ".TSDSOS.SpecStrokeArchive\022+\n#default_bac"
  "kground_stroke_undefined\030\022 \001(\010\0229\n\026defaul"
  "t_border_opacity\030\023 \001(\0132\031.TSSSOS.SpecDoub"
  "leArchive\022(\n default_border_opacity_unde"
  "fined\030\024 \001(\010\0228\n\025default_border_shadow\030\025 \001"
  "(\0132\031.TSDSOS.SpecShadowArchive\022\'\n\037default"
  "_border_shadow_undefined\030\026 \001(\010\0228\n\025defaul"
  "t_border_stroke\030\027 \001(\0132\031.TSDSOS.SpecStrok"
  "eArchive\022\'\n\037default_border_stroke_undefi"
  "ned\030\030 \001(\010\0227\n\026default_combine_layers\030\031 \001("
  "\0132\027.TSSSOS.SpecBoolArchive\022(\n default_co"
  "mbine_layers_undefined\030\032 \001(\010\022O\n+default_"
  "data_set_name_paragraph_style_index\030\033 \001("
  "\0132\032.TSSSOS.SpecIntegerArchive\022=\n5default"
  "_data_set_name_paragraph_style_index_und"
  "efined\030\034 \001(\010\022=\n\034default_grid_background_"
  "fill\030\035 \001(\0132\027.TSDSOS.SpecFillArchive\022.\n&d"
  "efault_grid_background_fill_undefined\030\036 "
  "\001(\010\022B\n\037default_grid_background_opacity\030\037"
  " \001(\0132\031.TSSSOS.SpecDoubleArchive\0221\n)defau"
  "lt_grid_background_opacity_undefined\030  \001"
  "(\010\0228\n\025default_inter_bar_gap\030! \001(\0132\031.TSSS"
  "OS.SpecDoubleArchive\022\'\n\037default_inter_ba"
  "r_gap_undefined\030\" \001(\010\0228\n\025default_inter_s"
  "et_gap\030# \001(\0132\031.TSSSOS.SpecDoubleArchive\022"
  "\'\n\037default_inter_set_gap_undefined\030$ \001(\010"
  "\022F\n%default_rounded_corner_outer_end_onl"
  "y\030% \001(\0132\027.TSSSOS.SpecBoolArchive\0227\n/defa"
  "ult_rounded_corner_outer_end_only_undefi"
  "ned\030& \001(\010\022@\n\035default_rounded_corner_radi"
  "us\030\' \001(\0132\031.TSSSOS.SpecDoubleArchive\022/\n\'d"
  "efault_rounded_corner_radius_undefined\030("
  " \001(\010\0224\n\023default_show_border\030) \001(\0132\027.TSSS"
  "OS.SpecBoolArchive\022%\n\035default_show_borde"
  "r_undefined\030* \001(\010\0225\n\023default_title_color"
  "\030+ \001(\0132\030.TSSSOS.SpecColorArchive\022%\n\035defa"
  "ult_title_color_undefined\030, \001(\010\022G\n#defau"
  "lt_title_paragraph_style_index\030- \001(\0132\032.T"
  "SSSOS.SpecIntegerArchive\0225\n-default_titl"
  "e_paragraph_style_index_undefined\030. \001(\010"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_TSCHArchives_2esos_2eproto_deps[5] = {
  &::descriptor_table_TSCH3DArchives_2eproto,
  &::descriptor_table_TSCHArchives_2eCommon_2eproto,
  &::descriptor_table_TSDArchives_2esos_2eproto,
  &::descriptor_table_TSKArchives_2eproto,
  &::descriptor_table_TSSArchives_2esos_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_TSCHArchives_2esos_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_TSCHArchives_2esos_2eproto = {
  false, false, 37479, descriptor_table_protodef_TSCHArchives_2esos_2eproto, "TSCHArchives.sos.proto", 
  &descriptor_table_TSCHArchives_2esos_2eproto_once, descriptor_table_TSCHArchives_2esos_2eproto_deps, 5, 22,
  schemas, file_default_instances, TableStruct_TSCHArchives_2esos_2eproto::offsets,
  file_level_metadata_TSCHArchives_2esos_2eproto, file_level_enum_descriptors_TSCHArchives_2esos_2eproto, file_level_service_descriptors_TSCHArchives_2esos_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_TSCHArchives_2esos_2eproto_getter() {
  return &descriptor_table_TSCHArchives_2esos_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_TSCHArchives_2esos_2eproto(&descriptor_table_TSCHArchives_2esos_2eproto);
namespace TSCHSOS {

// ===================================================================

class SpecSetChart3dLightingPackageArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetChart3dLightingPackageArchive>()._has_bits_);
  static const ::TSCH::Chart3DLightingPackageArchive& chart3d_lighting_package(const SpecSetChart3dLightingPackageArchive* msg);
  static void set_has_chart3d_lighting_package(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::TSCH::Chart3DLightingPackageArchive&
SpecSetChart3dLightingPackageArchive::_Internal::chart3d_lighting_package(const SpecSetChart3dLightingPackageArchive* msg) {
  return *msg->chart3d_lighting_package_;
}
void SpecSetChart3dLightingPackageArchive::clear_chart3d_lighting_package() {
  if (chart3d_lighting_package_ != nullptr) chart3d_lighting_package_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
SpecSetChart3dLightingPackageArchive::SpecSetChart3dLightingPackageArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecSetChart3dLightingPackageArchive)
}
SpecSetChart3dLightingPackageArchive::SpecSetChart3dLightingPackageArchive(const SpecSetChart3dLightingPackageArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_chart3d_lighting_package()) {
    chart3d_lighting_package_ = new ::TSCH::Chart3DLightingPackageArchive(*from.chart3d_lighting_package_);
  } else {
    chart3d_lighting_package_ = nullptr;
  }
  unset_ = from.unset_;
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecSetChart3dLightingPackageArchive)
}

void SpecSetChart3dLightingPackageArchive::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&chart3d_lighting_package_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&unset_) -
    reinterpret_cast<char*>(&chart3d_lighting_package_)) + sizeof(unset_));
}

SpecSetChart3dLightingPackageArchive::~SpecSetChart3dLightingPackageArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecSetChart3dLightingPackageArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SpecSetChart3dLightingPackageArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete chart3d_lighting_package_;
}

void SpecSetChart3dLightingPackageArchive::ArenaDtor(void* object) {
  SpecSetChart3dLightingPackageArchive* _this = reinterpret_cast< SpecSetChart3dLightingPackageArchive* >(object);
  (void)_this;
}
void SpecSetChart3dLightingPackageArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SpecSetChart3dLightingPackageArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SpecSetChart3dLightingPackageArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecSetChart3dLightingPackageArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(chart3d_lighting_package_ != nullptr);
    chart3d_lighting_package_->Clear();
  }
  unset_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetChart3dLightingPackageArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCH.Chart3DLightingPackageArchive chart3d_lighting_package = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_chart3d_lighting_package(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bool unset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_unset(&has_bits);
          unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SpecSetChart3dLightingPackageArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecSetChart3dLightingPackageArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .TSCH.Chart3DLightingPackageArchive chart3d_lighting_package = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::chart3d_lighting_package(this), target, stream);
  }

  // required bool unset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecSetChart3dLightingPackageArchive)
  return target;
}

size_t SpecSetChart3dLightingPackageArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecSetChart3dLightingPackageArchive)
  size_t total_size = 0;

  // required bool unset = 2;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSCH.Chart3DLightingPackageArchive chart3d_lighting_package = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *chart3d_lighting_package_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpecSetChart3dLightingPackageArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSCHSOS.SpecSetChart3dLightingPackageArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const SpecSetChart3dLightingPackageArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpecSetChart3dLightingPackageArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSCHSOS.SpecSetChart3dLightingPackageArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSCHSOS.SpecSetChart3dLightingPackageArchive)
    MergeFrom(*source);
  }
}

void SpecSetChart3dLightingPackageArchive::MergeFrom(const SpecSetChart3dLightingPackageArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecSetChart3dLightingPackageArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_chart3d_lighting_package()->::TSCH::Chart3DLightingPackageArchive::MergeFrom(from._internal_chart3d_lighting_package());
    }
    if (cached_has_bits & 0x00000002u) {
      unset_ = from.unset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SpecSetChart3dLightingPackageArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSCHSOS.SpecSetChart3dLightingPackageArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpecSetChart3dLightingPackageArchive::CopyFrom(const SpecSetChart3dLightingPackageArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecSetChart3dLightingPackageArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetChart3dLightingPackageArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_chart3d_lighting_package()) {
    if (!chart3d_lighting_package_->IsInitialized()) return false;
  }
  return true;
}

void SpecSetChart3dLightingPackageArchive::InternalSwap(SpecSetChart3dLightingPackageArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetChart3dLightingPackageArchive, unset_)
      + sizeof(SpecSetChart3dLightingPackageArchive::unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetChart3dLightingPackageArchive, chart3d_lighting_package_)>(
          reinterpret_cast<char*>(&chart3d_lighting_package_),
          reinterpret_cast<char*>(&other->chart3d_lighting_package_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetChart3dLightingPackageArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[0]);
}

// ===================================================================

class SpecSetChart3dVectorArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetChart3dVectorArchive>()._has_bits_);
  static const ::TSCH::Chart3DVectorArchive& chart3d_vector(const SpecSetChart3dVectorArchive* msg);
  static void set_has_chart3d_vector(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::TSCH::Chart3DVectorArchive&
SpecSetChart3dVectorArchive::_Internal::chart3d_vector(const SpecSetChart3dVectorArchive* msg) {
  return *msg->chart3d_vector_;
}
void SpecSetChart3dVectorArchive::clear_chart3d_vector() {
  if (chart3d_vector_ != nullptr) chart3d_vector_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
SpecSetChart3dVectorArchive::SpecSetChart3dVectorArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecSetChart3dVectorArchive)
}
SpecSetChart3dVectorArchive::SpecSetChart3dVectorArchive(const SpecSetChart3dVectorArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_chart3d_vector()) {
    chart3d_vector_ = new ::TSCH::Chart3DVectorArchive(*from.chart3d_vector_);
  } else {
    chart3d_vector_ = nullptr;
  }
  unset_ = from.unset_;
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecSetChart3dVectorArchive)
}

void SpecSetChart3dVectorArchive::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&chart3d_vector_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&unset_) -
    reinterpret_cast<char*>(&chart3d_vector_)) + sizeof(unset_));
}

SpecSetChart3dVectorArchive::~SpecSetChart3dVectorArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecSetChart3dVectorArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SpecSetChart3dVectorArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete chart3d_vector_;
}

void SpecSetChart3dVectorArchive::ArenaDtor(void* object) {
  SpecSetChart3dVectorArchive* _this = reinterpret_cast< SpecSetChart3dVectorArchive* >(object);
  (void)_this;
}
void SpecSetChart3dVectorArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SpecSetChart3dVectorArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SpecSetChart3dVectorArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecSetChart3dVectorArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(chart3d_vector_ != nullptr);
    chart3d_vector_->Clear();
  }
  unset_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetChart3dVectorArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCH.Chart3DVectorArchive chart3d_vector = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_chart3d_vector(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bool unset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_unset(&has_bits);
          unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SpecSetChart3dVectorArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecSetChart3dVectorArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .TSCH.Chart3DVectorArchive chart3d_vector = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::chart3d_vector(this), target, stream);
  }

  // required bool unset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecSetChart3dVectorArchive)
  return target;
}

size_t SpecSetChart3dVectorArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecSetChart3dVectorArchive)
  size_t total_size = 0;

  // required bool unset = 2;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSCH.Chart3DVectorArchive chart3d_vector = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *chart3d_vector_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpecSetChart3dVectorArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSCHSOS.SpecSetChart3dVectorArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const SpecSetChart3dVectorArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpecSetChart3dVectorArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSCHSOS.SpecSetChart3dVectorArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSCHSOS.SpecSetChart3dVectorArchive)
    MergeFrom(*source);
  }
}

void SpecSetChart3dVectorArchive::MergeFrom(const SpecSetChart3dVectorArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecSetChart3dVectorArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_chart3d_vector()->::TSCH::Chart3DVectorArchive::MergeFrom(from._internal_chart3d_vector());
    }
    if (cached_has_bits & 0x00000002u) {
      unset_ = from.unset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SpecSetChart3dVectorArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSCHSOS.SpecSetChart3dVectorArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpecSetChart3dVectorArchive::CopyFrom(const SpecSetChart3dVectorArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecSetChart3dVectorArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetChart3dVectorArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_chart3d_vector()) {
    if (!chart3d_vector_->IsInitialized()) return false;
  }
  return true;
}

void SpecSetChart3dVectorArchive::InternalSwap(SpecSetChart3dVectorArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetChart3dVectorArchive, unset_)
      + sizeof(SpecSetChart3dVectorArchive::unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetChart3dVectorArchive, chart3d_vector_)>(
          reinterpret_cast<char*>(&chart3d_vector_),
          reinterpret_cast<char*>(&other->chart3d_vector_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetChart3dVectorArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[1]);
}

// ===================================================================

class SpecSetChartErrorBarCustomDataArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetChartErrorBarCustomDataArchive>()._has_bits_);
  static const ::TSCH::ChartsNSArrayOfNSNumberDoubleArchive& chart_error_bar_custom_data(const SpecSetChartErrorBarCustomDataArchive* msg);
  static void set_has_chart_error_bar_custom_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::TSCH::ChartsNSArrayOfNSNumberDoubleArchive&
SpecSetChartErrorBarCustomDataArchive::_Internal::chart_error_bar_custom_data(const SpecSetChartErrorBarCustomDataArchive* msg) {
  return *msg->chart_error_bar_custom_data_;
}
void SpecSetChartErrorBarCustomDataArchive::clear_chart_error_bar_custom_data() {
  if (chart_error_bar_custom_data_ != nullptr) chart_error_bar_custom_data_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
SpecSetChartErrorBarCustomDataArchive::SpecSetChartErrorBarCustomDataArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecSetChartErrorBarCustomDataArchive)
}
SpecSetChartErrorBarCustomDataArchive::SpecSetChartErrorBarCustomDataArchive(const SpecSetChartErrorBarCustomDataArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_chart_error_bar_custom_data()) {
    chart_error_bar_custom_data_ = new ::TSCH::ChartsNSArrayOfNSNumberDoubleArchive(*from.chart_error_bar_custom_data_);
  } else {
    chart_error_bar_custom_data_ = nullptr;
  }
  unset_ = from.unset_;
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecSetChartErrorBarCustomDataArchive)
}

void SpecSetChartErrorBarCustomDataArchive::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&chart_error_bar_custom_data_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&unset_) -
    reinterpret_cast<char*>(&chart_error_bar_custom_data_)) + sizeof(unset_));
}

SpecSetChartErrorBarCustomDataArchive::~SpecSetChartErrorBarCustomDataArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecSetChartErrorBarCustomDataArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SpecSetChartErrorBarCustomDataArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete chart_error_bar_custom_data_;
}

void SpecSetChartErrorBarCustomDataArchive::ArenaDtor(void* object) {
  SpecSetChartErrorBarCustomDataArchive* _this = reinterpret_cast< SpecSetChartErrorBarCustomDataArchive* >(object);
  (void)_this;
}
void SpecSetChartErrorBarCustomDataArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SpecSetChartErrorBarCustomDataArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SpecSetChartErrorBarCustomDataArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecSetChartErrorBarCustomDataArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(chart_error_bar_custom_data_ != nullptr);
    chart_error_bar_custom_data_->Clear();
  }
  unset_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetChartErrorBarCustomDataArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive chart_error_bar_custom_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_chart_error_bar_custom_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bool unset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_unset(&has_bits);
          unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SpecSetChartErrorBarCustomDataArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecSetChartErrorBarCustomDataArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive chart_error_bar_custom_data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::chart_error_bar_custom_data(this), target, stream);
  }

  // required bool unset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecSetChartErrorBarCustomDataArchive)
  return target;
}

size_t SpecSetChartErrorBarCustomDataArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecSetChartErrorBarCustomDataArchive)
  size_t total_size = 0;

  // required bool unset = 2;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive chart_error_bar_custom_data = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *chart_error_bar_custom_data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpecSetChartErrorBarCustomDataArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSCHSOS.SpecSetChartErrorBarCustomDataArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const SpecSetChartErrorBarCustomDataArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpecSetChartErrorBarCustomDataArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSCHSOS.SpecSetChartErrorBarCustomDataArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSCHSOS.SpecSetChartErrorBarCustomDataArchive)
    MergeFrom(*source);
  }
}

void SpecSetChartErrorBarCustomDataArchive::MergeFrom(const SpecSetChartErrorBarCustomDataArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecSetChartErrorBarCustomDataArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_chart_error_bar_custom_data()->::TSCH::ChartsNSArrayOfNSNumberDoubleArchive::MergeFrom(from._internal_chart_error_bar_custom_data());
    }
    if (cached_has_bits & 0x00000002u) {
      unset_ = from.unset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SpecSetChartErrorBarCustomDataArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSCHSOS.SpecSetChartErrorBarCustomDataArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpecSetChartErrorBarCustomDataArchive::CopyFrom(const SpecSetChartErrorBarCustomDataArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecSetChartErrorBarCustomDataArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetChartErrorBarCustomDataArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void SpecSetChartErrorBarCustomDataArchive::InternalSwap(SpecSetChartErrorBarCustomDataArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetChartErrorBarCustomDataArchive, unset_)
      + sizeof(SpecSetChartErrorBarCustomDataArchive::unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetChartErrorBarCustomDataArchive, chart_error_bar_custom_data_)>(
          reinterpret_cast<char*>(&chart_error_bar_custom_data_),
          reinterpret_cast<char*>(&other->chart_error_bar_custom_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetChartErrorBarCustomDataArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[2]);
}

// ===================================================================

class SpecSetChartsOptionalDoubleArchiveArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetChartsOptionalDoubleArchiveArchive>()._has_bits_);
  static const ::TSCH::ChartsNSNumberDoubleArchive& charts_optional_double_archive(const SpecSetChartsOptionalDoubleArchiveArchive* msg);
  static void set_has_charts_optional_double_archive(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::TSCH::ChartsNSNumberDoubleArchive&
SpecSetChartsOptionalDoubleArchiveArchive::_Internal::charts_optional_double_archive(const SpecSetChartsOptionalDoubleArchiveArchive* msg) {
  return *msg->charts_optional_double_archive_;
}
void SpecSetChartsOptionalDoubleArchiveArchive::clear_charts_optional_double_archive() {
  if (charts_optional_double_archive_ != nullptr) charts_optional_double_archive_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
SpecSetChartsOptionalDoubleArchiveArchive::SpecSetChartsOptionalDoubleArchiveArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive)
}
SpecSetChartsOptionalDoubleArchiveArchive::SpecSetChartsOptionalDoubleArchiveArchive(const SpecSetChartsOptionalDoubleArchiveArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_charts_optional_double_archive()) {
    charts_optional_double_archive_ = new ::TSCH::ChartsNSNumberDoubleArchive(*from.charts_optional_double_archive_);
  } else {
    charts_optional_double_archive_ = nullptr;
  }
  unset_ = from.unset_;
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive)
}

void SpecSetChartsOptionalDoubleArchiveArchive::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&charts_optional_double_archive_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&unset_) -
    reinterpret_cast<char*>(&charts_optional_double_archive_)) + sizeof(unset_));
}

SpecSetChartsOptionalDoubleArchiveArchive::~SpecSetChartsOptionalDoubleArchiveArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SpecSetChartsOptionalDoubleArchiveArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete charts_optional_double_archive_;
}

void SpecSetChartsOptionalDoubleArchiveArchive::ArenaDtor(void* object) {
  SpecSetChartsOptionalDoubleArchiveArchive* _this = reinterpret_cast< SpecSetChartsOptionalDoubleArchiveArchive* >(object);
  (void)_this;
}
void SpecSetChartsOptionalDoubleArchiveArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SpecSetChartsOptionalDoubleArchiveArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SpecSetChartsOptionalDoubleArchiveArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(charts_optional_double_archive_ != nullptr);
    charts_optional_double_archive_->Clear();
  }
  unset_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetChartsOptionalDoubleArchiveArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCH.ChartsNSNumberDoubleArchive charts_optional_double_archive = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_charts_optional_double_archive(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bool unset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_unset(&has_bits);
          unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SpecSetChartsOptionalDoubleArchiveArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .TSCH.ChartsNSNumberDoubleArchive charts_optional_double_archive = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::charts_optional_double_archive(this), target, stream);
  }

  // required bool unset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive)
  return target;
}

size_t SpecSetChartsOptionalDoubleArchiveArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive)
  size_t total_size = 0;

  // required bool unset = 2;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSCH.ChartsNSNumberDoubleArchive charts_optional_double_archive = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *charts_optional_double_archive_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpecSetChartsOptionalDoubleArchiveArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const SpecSetChartsOptionalDoubleArchiveArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpecSetChartsOptionalDoubleArchiveArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive)
    MergeFrom(*source);
  }
}

void SpecSetChartsOptionalDoubleArchiveArchive::MergeFrom(const SpecSetChartsOptionalDoubleArchiveArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_charts_optional_double_archive()->::TSCH::ChartsNSNumberDoubleArchive::MergeFrom(from._internal_charts_optional_double_archive());
    }
    if (cached_has_bits & 0x00000002u) {
      unset_ = from.unset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SpecSetChartsOptionalDoubleArchiveArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpecSetChartsOptionalDoubleArchiveArchive::CopyFrom(const SpecSetChartsOptionalDoubleArchiveArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetChartsOptionalDoubleArchiveArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void SpecSetChartsOptionalDoubleArchiveArchive::InternalSwap(SpecSetChartsOptionalDoubleArchiveArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetChartsOptionalDoubleArchiveArchive, unset_)
      + sizeof(SpecSetChartsOptionalDoubleArchiveArchive::unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetChartsOptionalDoubleArchiveArchive, charts_optional_double_archive_)>(
          reinterpret_cast<char*>(&charts_optional_double_archive_),
          reinterpret_cast<char*>(&other->charts_optional_double_archive_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetChartsOptionalDoubleArchiveArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[3]);
}

// ===================================================================

class SpecSetFormatObjectArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetFormatObjectArchive>()._has_bits_);
  static const ::TSK::FormatStructArchive& format_object(const SpecSetFormatObjectArchive* msg);
  static void set_has_format_object(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::TSK::FormatStructArchive&
SpecSetFormatObjectArchive::_Internal::format_object(const SpecSetFormatObjectArchive* msg) {
  return *msg->format_object_;
}
void SpecSetFormatObjectArchive::clear_format_object() {
  if (format_object_ != nullptr) format_object_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
SpecSetFormatObjectArchive::SpecSetFormatObjectArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecSetFormatObjectArchive)
}
SpecSetFormatObjectArchive::SpecSetFormatObjectArchive(const SpecSetFormatObjectArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_format_object()) {
    format_object_ = new ::TSK::FormatStructArchive(*from.format_object_);
  } else {
    format_object_ = nullptr;
  }
  unset_ = from.unset_;
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecSetFormatObjectArchive)
}

void SpecSetFormatObjectArchive::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&format_object_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&unset_) -
    reinterpret_cast<char*>(&format_object_)) + sizeof(unset_));
}

SpecSetFormatObjectArchive::~SpecSetFormatObjectArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecSetFormatObjectArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SpecSetFormatObjectArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete format_object_;
}

void SpecSetFormatObjectArchive::ArenaDtor(void* object) {
  SpecSetFormatObjectArchive* _this = reinterpret_cast< SpecSetFormatObjectArchive* >(object);
  (void)_this;
}
void SpecSetFormatObjectArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SpecSetFormatObjectArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SpecSetFormatObjectArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecSetFormatObjectArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(format_object_ != nullptr);
    format_object_->Clear();
  }
  unset_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetFormatObjectArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSK.FormatStructArchive format_object = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_format_object(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bool unset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_unset(&has_bits);
          unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SpecSetFormatObjectArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecSetFormatObjectArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .TSK.FormatStructArchive format_object = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::format_object(this), target, stream);
  }

  // required bool unset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecSetFormatObjectArchive)
  return target;
}

size_t SpecSetFormatObjectArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecSetFormatObjectArchive)
  size_t total_size = 0;

  // required bool unset = 2;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSK.FormatStructArchive format_object = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *format_object_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpecSetFormatObjectArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSCHSOS.SpecSetFormatObjectArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const SpecSetFormatObjectArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpecSetFormatObjectArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSCHSOS.SpecSetFormatObjectArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSCHSOS.SpecSetFormatObjectArchive)
    MergeFrom(*source);
  }
}

void SpecSetFormatObjectArchive::MergeFrom(const SpecSetFormatObjectArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecSetFormatObjectArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_format_object()->::TSK::FormatStructArchive::MergeFrom(from._internal_format_object());
    }
    if (cached_has_bits & 0x00000002u) {
      unset_ = from.unset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SpecSetFormatObjectArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSCHSOS.SpecSetFormatObjectArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpecSetFormatObjectArchive::CopyFrom(const SpecSetFormatObjectArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecSetFormatObjectArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetFormatObjectArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_format_object()) {
    if (!format_object_->IsInitialized()) return false;
  }
  return true;
}

void SpecSetFormatObjectArchive::InternalSwap(SpecSetFormatObjectArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetFormatObjectArchive, unset_)
      + sizeof(SpecSetFormatObjectArchive::unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetFormatObjectArchive, format_object_)>(
          reinterpret_cast<char*>(&format_object_),
          reinterpret_cast<char*>(&other->format_object_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetFormatObjectArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[4]);
}

// ===================================================================

class SpecSetNumberFormatArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetNumberFormatArchive>()._has_bits_);
  static const ::TSK::FormatStructArchive& number_format(const SpecSetNumberFormatArchive* msg);
  static void set_has_number_format(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::TSK::FormatStructArchive&
SpecSetNumberFormatArchive::_Internal::number_format(const SpecSetNumberFormatArchive* msg) {
  return *msg->number_format_;
}
void SpecSetNumberFormatArchive::clear_number_format() {
  if (number_format_ != nullptr) number_format_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
SpecSetNumberFormatArchive::SpecSetNumberFormatArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecSetNumberFormatArchive)
}
SpecSetNumberFormatArchive::SpecSetNumberFormatArchive(const SpecSetNumberFormatArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_number_format()) {
    number_format_ = new ::TSK::FormatStructArchive(*from.number_format_);
  } else {
    number_format_ = nullptr;
  }
  unset_ = from.unset_;
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecSetNumberFormatArchive)
}

void SpecSetNumberFormatArchive::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&number_format_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&unset_) -
    reinterpret_cast<char*>(&number_format_)) + sizeof(unset_));
}

SpecSetNumberFormatArchive::~SpecSetNumberFormatArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecSetNumberFormatArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SpecSetNumberFormatArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete number_format_;
}

void SpecSetNumberFormatArchive::ArenaDtor(void* object) {
  SpecSetNumberFormatArchive* _this = reinterpret_cast< SpecSetNumberFormatArchive* >(object);
  (void)_this;
}
void SpecSetNumberFormatArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SpecSetNumberFormatArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SpecSetNumberFormatArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecSetNumberFormatArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(number_format_ != nullptr);
    number_format_->Clear();
  }
  unset_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetNumberFormatArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSK.FormatStructArchive number_format = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_number_format(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bool unset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_unset(&has_bits);
          unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SpecSetNumberFormatArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecSetNumberFormatArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .TSK.FormatStructArchive number_format = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::number_format(this), target, stream);
  }

  // required bool unset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecSetNumberFormatArchive)
  return target;
}

size_t SpecSetNumberFormatArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecSetNumberFormatArchive)
  size_t total_size = 0;

  // required bool unset = 2;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSK.FormatStructArchive number_format = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *number_format_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpecSetNumberFormatArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSCHSOS.SpecSetNumberFormatArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const SpecSetNumberFormatArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpecSetNumberFormatArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSCHSOS.SpecSetNumberFormatArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSCHSOS.SpecSetNumberFormatArchive)
    MergeFrom(*source);
  }
}

void SpecSetNumberFormatArchive::MergeFrom(const SpecSetNumberFormatArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecSetNumberFormatArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_number_format()->::TSK::FormatStructArchive::MergeFrom(from._internal_number_format());
    }
    if (cached_has_bits & 0x00000002u) {
      unset_ = from.unset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SpecSetNumberFormatArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSCHSOS.SpecSetNumberFormatArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpecSetNumberFormatArchive::CopyFrom(const SpecSetNumberFormatArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecSetNumberFormatArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetNumberFormatArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_number_format()) {
    if (!number_format_->IsInitialized()) return false;
  }
  return true;
}

void SpecSetNumberFormatArchive::InternalSwap(SpecSetNumberFormatArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetNumberFormatArchive, unset_)
      + sizeof(SpecSetNumberFormatArchive::unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetNumberFormatArchive, number_format_)>(
          reinterpret_cast<char*>(&number_format_),
          reinterpret_cast<char*>(&other->number_format_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetNumberFormatArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[5]);
}

// ===================================================================

class SpecChart3dLightingPackageArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecChart3dLightingPackageArchive>()._has_bits_);
  static const ::TSCHSOS::SpecSetChart3dLightingPackageArchive& spec_set_chart3d_lighting_package(const SpecChart3dLightingPackageArchive* msg);
  static void set_has_spec_set_chart3d_lighting_package(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSCHSOS::SpecSetChart3dLightingPackageArchive&
SpecChart3dLightingPackageArchive::_Internal::spec_set_chart3d_lighting_package(const SpecChart3dLightingPackageArchive* msg) {
  return *msg->spec_set_chart3d_lighting_package_;
}
SpecChart3dLightingPackageArchive::SpecChart3dLightingPackageArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecChart3dLightingPackageArchive)
}
SpecChart3dLightingPackageArchive::SpecChart3dLightingPackageArchive(const SpecChart3dLightingPackageArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_chart3d_lighting_package()) {
    spec_set_chart3d_lighting_package_ = new ::TSCHSOS::SpecSetChart3dLightingPackageArchive(*from.spec_set_chart3d_lighting_package_);
  } else {
    spec_set_chart3d_lighting_package_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecChart3dLightingPackageArchive)
}

void SpecChart3dLightingPackageArchive::SharedCtor() {
spec_set_chart3d_lighting_package_ = nullptr;
}

SpecChart3dLightingPackageArchive::~SpecChart3dLightingPackageArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecChart3dLightingPackageArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SpecChart3dLightingPackageArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete spec_set_chart3d_lighting_package_;
}

void SpecChart3dLightingPackageArchive::ArenaDtor(void* object) {
  SpecChart3dLightingPackageArchive* _this = reinterpret_cast< SpecChart3dLightingPackageArchive* >(object);
  (void)_this;
}
void SpecChart3dLightingPackageArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SpecChart3dLightingPackageArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SpecChart3dLightingPackageArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecChart3dLightingPackageArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(spec_set_chart3d_lighting_package_ != nullptr);
    spec_set_chart3d_lighting_package_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecChart3dLightingPackageArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCHSOS.SpecSetChart3dLightingPackageArchive spec_set_chart3d_lighting_package = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_chart3d_lighting_package(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SpecChart3dLightingPackageArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecChart3dLightingPackageArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecSetChart3dLightingPackageArchive spec_set_chart3d_lighting_package = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::spec_set_chart3d_lighting_package(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecChart3dLightingPackageArchive)
  return target;
}

size_t SpecChart3dLightingPackageArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecChart3dLightingPackageArchive)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSCHSOS.SpecSetChart3dLightingPackageArchive spec_set_chart3d_lighting_package = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *spec_set_chart3d_lighting_package_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpecChart3dLightingPackageArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSCHSOS.SpecChart3dLightingPackageArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const SpecChart3dLightingPackageArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpecChart3dLightingPackageArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSCHSOS.SpecChart3dLightingPackageArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSCHSOS.SpecChart3dLightingPackageArchive)
    MergeFrom(*source);
  }
}

void SpecChart3dLightingPackageArchive::MergeFrom(const SpecChart3dLightingPackageArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecChart3dLightingPackageArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_chart3d_lighting_package()) {
    _internal_mutable_spec_set_chart3d_lighting_package()->::TSCHSOS::SpecSetChart3dLightingPackageArchive::MergeFrom(from._internal_spec_set_chart3d_lighting_package());
  }
}

void SpecChart3dLightingPackageArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSCHSOS.SpecChart3dLightingPackageArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpecChart3dLightingPackageArchive::CopyFrom(const SpecChart3dLightingPackageArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecChart3dLightingPackageArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecChart3dLightingPackageArchive::IsInitialized() const {
  if (_internal_has_spec_set_chart3d_lighting_package()) {
    if (!spec_set_chart3d_lighting_package_->IsInitialized()) return false;
  }
  return true;
}

void SpecChart3dLightingPackageArchive::InternalSwap(SpecChart3dLightingPackageArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(spec_set_chart3d_lighting_package_, other->spec_set_chart3d_lighting_package_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecChart3dLightingPackageArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[6]);
}

// ===================================================================

class SpecChart3dVectorArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecChart3dVectorArchive>()._has_bits_);
  static const ::TSCHSOS::SpecSetChart3dVectorArchive& spec_set_chart3d_vector(const SpecChart3dVectorArchive* msg);
  static void set_has_spec_set_chart3d_vector(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSCHSOS::SpecSetChart3dVectorArchive&
SpecChart3dVectorArchive::_Internal::spec_set_chart3d_vector(const SpecChart3dVectorArchive* msg) {
  return *msg->spec_set_chart3d_vector_;
}
SpecChart3dVectorArchive::SpecChart3dVectorArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecChart3dVectorArchive)
}
SpecChart3dVectorArchive::SpecChart3dVectorArchive(const SpecChart3dVectorArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_chart3d_vector()) {
    spec_set_chart3d_vector_ = new ::TSCHSOS::SpecSetChart3dVectorArchive(*from.spec_set_chart3d_vector_);
  } else {
    spec_set_chart3d_vector_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecChart3dVectorArchive)
}

void SpecChart3dVectorArchive::SharedCtor() {
spec_set_chart3d_vector_ = nullptr;
}

SpecChart3dVectorArchive::~SpecChart3dVectorArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecChart3dVectorArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SpecChart3dVectorArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete spec_set_chart3d_vector_;
}

void SpecChart3dVectorArchive::ArenaDtor(void* object) {
  SpecChart3dVectorArchive* _this = reinterpret_cast< SpecChart3dVectorArchive* >(object);
  (void)_this;
}
void SpecChart3dVectorArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SpecChart3dVectorArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SpecChart3dVectorArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecChart3dVectorArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(spec_set_chart3d_vector_ != nullptr);
    spec_set_chart3d_vector_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecChart3dVectorArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCHSOS.SpecSetChart3dVectorArchive spec_set_chart3d_vector = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_chart3d_vector(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SpecChart3dVectorArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecChart3dVectorArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecSetChart3dVectorArchive spec_set_chart3d_vector = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::spec_set_chart3d_vector(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecChart3dVectorArchive)
  return target;
}

size_t SpecChart3dVectorArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecChart3dVectorArchive)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSCHSOS.SpecSetChart3dVectorArchive spec_set_chart3d_vector = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *spec_set_chart3d_vector_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpecChart3dVectorArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSCHSOS.SpecChart3dVectorArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const SpecChart3dVectorArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpecChart3dVectorArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSCHSOS.SpecChart3dVectorArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSCHSOS.SpecChart3dVectorArchive)
    MergeFrom(*source);
  }
}

void SpecChart3dVectorArchive::MergeFrom(const SpecChart3dVectorArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecChart3dVectorArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_chart3d_vector()) {
    _internal_mutable_spec_set_chart3d_vector()->::TSCHSOS::SpecSetChart3dVectorArchive::MergeFrom(from._internal_spec_set_chart3d_vector());
  }
}

void SpecChart3dVectorArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSCHSOS.SpecChart3dVectorArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpecChart3dVectorArchive::CopyFrom(const SpecChart3dVectorArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecChart3dVectorArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecChart3dVectorArchive::IsInitialized() const {
  if (_internal_has_spec_set_chart3d_vector()) {
    if (!spec_set_chart3d_vector_->IsInitialized()) return false;
  }
  return true;
}

void SpecChart3dVectorArchive::InternalSwap(SpecChart3dVectorArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(spec_set_chart3d_vector_, other->spec_set_chart3d_vector_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecChart3dVectorArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[7]);
}

// ===================================================================

class SpecChartErrorBarCustomDataArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecChartErrorBarCustomDataArchive>()._has_bits_);
  static const ::TSCHSOS::SpecSetChartErrorBarCustomDataArchive& spec_set_chart_error_bar_custom_data(const SpecChartErrorBarCustomDataArchive* msg);
  static void set_has_spec_set_chart_error_bar_custom_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSCHSOS::SpecSetChartErrorBarCustomDataArchive&
SpecChartErrorBarCustomDataArchive::_Internal::spec_set_chart_error_bar_custom_data(const SpecChartErrorBarCustomDataArchive* msg) {
  return *msg->spec_set_chart_error_bar_custom_data_;
}
SpecChartErrorBarCustomDataArchive::SpecChartErrorBarCustomDataArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecChartErrorBarCustomDataArchive)
}
SpecChartErrorBarCustomDataArchive::SpecChartErrorBarCustomDataArchive(const SpecChartErrorBarCustomDataArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_chart_error_bar_custom_data()) {
    spec_set_chart_error_bar_custom_data_ = new ::TSCHSOS::SpecSetChartErrorBarCustomDataArchive(*from.spec_set_chart_error_bar_custom_data_);
  } else {
    spec_set_chart_error_bar_custom_data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecChartErrorBarCustomDataArchive)
}

void SpecChartErrorBarCustomDataArchive::SharedCtor() {
spec_set_chart_error_bar_custom_data_ = nullptr;
}

SpecChartErrorBarCustomDataArchive::~SpecChartErrorBarCustomDataArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecChartErrorBarCustomDataArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SpecChartErrorBarCustomDataArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete spec_set_chart_error_bar_custom_data_;
}

void SpecChartErrorBarCustomDataArchive::ArenaDtor(void* object) {
  SpecChartErrorBarCustomDataArchive* _this = reinterpret_cast< SpecChartErrorBarCustomDataArchive* >(object);
  (void)_this;
}
void SpecChartErrorBarCustomDataArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SpecChartErrorBarCustomDataArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SpecChartErrorBarCustomDataArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecChartErrorBarCustomDataArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(spec_set_chart_error_bar_custom_data_ != nullptr);
    spec_set_chart_error_bar_custom_data_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecChartErrorBarCustomDataArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCHSOS.SpecSetChartErrorBarCustomDataArchive spec_set_chart_error_bar_custom_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_chart_error_bar_custom_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SpecChartErrorBarCustomDataArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecChartErrorBarCustomDataArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecSetChartErrorBarCustomDataArchive spec_set_chart_error_bar_custom_data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::spec_set_chart_error_bar_custom_data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecChartErrorBarCustomDataArchive)
  return target;
}

size_t SpecChartErrorBarCustomDataArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecChartErrorBarCustomDataArchive)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSCHSOS.SpecSetChartErrorBarCustomDataArchive spec_set_chart_error_bar_custom_data = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *spec_set_chart_error_bar_custom_data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpecChartErrorBarCustomDataArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSCHSOS.SpecChartErrorBarCustomDataArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const SpecChartErrorBarCustomDataArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpecChartErrorBarCustomDataArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSCHSOS.SpecChartErrorBarCustomDataArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSCHSOS.SpecChartErrorBarCustomDataArchive)
    MergeFrom(*source);
  }
}

void SpecChartErrorBarCustomDataArchive::MergeFrom(const SpecChartErrorBarCustomDataArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecChartErrorBarCustomDataArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_chart_error_bar_custom_data()) {
    _internal_mutable_spec_set_chart_error_bar_custom_data()->::TSCHSOS::SpecSetChartErrorBarCustomDataArchive::MergeFrom(from._internal_spec_set_chart_error_bar_custom_data());
  }
}

void SpecChartErrorBarCustomDataArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSCHSOS.SpecChartErrorBarCustomDataArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpecChartErrorBarCustomDataArchive::CopyFrom(const SpecChartErrorBarCustomDataArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecChartErrorBarCustomDataArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecChartErrorBarCustomDataArchive::IsInitialized() const {
  if (_internal_has_spec_set_chart_error_bar_custom_data()) {
    if (!spec_set_chart_error_bar_custom_data_->IsInitialized()) return false;
  }
  return true;
}

void SpecChartErrorBarCustomDataArchive::InternalSwap(SpecChartErrorBarCustomDataArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(spec_set_chart_error_bar_custom_data_, other->spec_set_chart_error_bar_custom_data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecChartErrorBarCustomDataArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[8]);
}

// ===================================================================

class SpecChartsOptionalDoubleArchiveArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecChartsOptionalDoubleArchiveArchive>()._has_bits_);
  static const ::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive& spec_set_charts_optional_double_archive(const SpecChartsOptionalDoubleArchiveArchive* msg);
  static void set_has_spec_set_charts_optional_double_archive(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive&
SpecChartsOptionalDoubleArchiveArchive::_Internal::spec_set_charts_optional_double_archive(const SpecChartsOptionalDoubleArchiveArchive* msg) {
  return *msg->spec_set_charts_optional_double_archive_;
}
SpecChartsOptionalDoubleArchiveArchive::SpecChartsOptionalDoubleArchiveArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecChartsOptionalDoubleArchiveArchive)
}
SpecChartsOptionalDoubleArchiveArchive::SpecChartsOptionalDoubleArchiveArchive(const SpecChartsOptionalDoubleArchiveArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_charts_optional_double_archive()) {
    spec_set_charts_optional_double_archive_ = new ::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive(*from.spec_set_charts_optional_double_archive_);
  } else {
    spec_set_charts_optional_double_archive_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecChartsOptionalDoubleArchiveArchive)
}

void SpecChartsOptionalDoubleArchiveArchive::SharedCtor() {
spec_set_charts_optional_double_archive_ = nullptr;
}

SpecChartsOptionalDoubleArchiveArchive::~SpecChartsOptionalDoubleArchiveArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecChartsOptionalDoubleArchiveArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SpecChartsOptionalDoubleArchiveArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete spec_set_charts_optional_double_archive_;
}

void SpecChartsOptionalDoubleArchiveArchive::ArenaDtor(void* object) {
  SpecChartsOptionalDoubleArchiveArchive* _this = reinterpret_cast< SpecChartsOptionalDoubleArchiveArchive* >(object);
  (void)_this;
}
void SpecChartsOptionalDoubleArchiveArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SpecChartsOptionalDoubleArchiveArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SpecChartsOptionalDoubleArchiveArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecChartsOptionalDoubleArchiveArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(spec_set_charts_optional_double_archive_ != nullptr);
    spec_set_charts_optional_double_archive_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecChartsOptionalDoubleArchiveArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive spec_set_charts_optional_double_archive = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_charts_optional_double_archive(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SpecChartsOptionalDoubleArchiveArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecChartsOptionalDoubleArchiveArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive spec_set_charts_optional_double_archive = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::spec_set_charts_optional_double_archive(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecChartsOptionalDoubleArchiveArchive)
  return target;
}

size_t SpecChartsOptionalDoubleArchiveArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecChartsOptionalDoubleArchiveArchive)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive spec_set_charts_optional_double_archive = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *spec_set_charts_optional_double_archive_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpecChartsOptionalDoubleArchiveArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSCHSOS.SpecChartsOptionalDoubleArchiveArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const SpecChartsOptionalDoubleArchiveArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpecChartsOptionalDoubleArchiveArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSCHSOS.SpecChartsOptionalDoubleArchiveArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSCHSOS.SpecChartsOptionalDoubleArchiveArchive)
    MergeFrom(*source);
  }
}

void SpecChartsOptionalDoubleArchiveArchive::MergeFrom(const SpecChartsOptionalDoubleArchiveArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecChartsOptionalDoubleArchiveArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_charts_optional_double_archive()) {
    _internal_mutable_spec_set_charts_optional_double_archive()->::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive::MergeFrom(from._internal_spec_set_charts_optional_double_archive());
  }
}

void SpecChartsOptionalDoubleArchiveArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSCHSOS.SpecChartsOptionalDoubleArchiveArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpecChartsOptionalDoubleArchiveArchive::CopyFrom(const SpecChartsOptionalDoubleArchiveArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecChartsOptionalDoubleArchiveArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecChartsOptionalDoubleArchiveArchive::IsInitialized() const {
  if (_internal_has_spec_set_charts_optional_double_archive()) {
    if (!spec_set_charts_optional_double_archive_->IsInitialized()) return false;
  }
  return true;
}

void SpecChartsOptionalDoubleArchiveArchive::InternalSwap(SpecChartsOptionalDoubleArchiveArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(spec_set_charts_optional_double_archive_, other->spec_set_charts_optional_double_archive_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecChartsOptionalDoubleArchiveArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[9]);
}

// ===================================================================

class SpecFormatObjectArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecFormatObjectArchive>()._has_bits_);
  static const ::TSCHSOS::SpecSetFormatObjectArchive& spec_set_format_object(const SpecFormatObjectArchive* msg);
  static void set_has_spec_set_format_object(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSCHSOS::SpecSetFormatObjectArchive&
SpecFormatObjectArchive::_Internal::spec_set_format_object(const SpecFormatObjectArchive* msg) {
  return *msg->spec_set_format_object_;
}
SpecFormatObjectArchive::SpecFormatObjectArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecFormatObjectArchive)
}
SpecFormatObjectArchive::SpecFormatObjectArchive(const SpecFormatObjectArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_format_object()) {
    spec_set_format_object_ = new ::TSCHSOS::SpecSetFormatObjectArchive(*from.spec_set_format_object_);
  } else {
    spec_set_format_object_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecFormatObjectArchive)
}

void SpecFormatObjectArchive::SharedCtor() {
spec_set_format_object_ = nullptr;
}

SpecFormatObjectArchive::~SpecFormatObjectArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecFormatObjectArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SpecFormatObjectArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete spec_set_format_object_;
}

void SpecFormatObjectArchive::ArenaDtor(void* object) {
  SpecFormatObjectArchive* _this = reinterpret_cast< SpecFormatObjectArchive* >(object);
  (void)_this;
}
void SpecFormatObjectArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SpecFormatObjectArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SpecFormatObjectArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecFormatObjectArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(spec_set_format_object_ != nullptr);
    spec_set_format_object_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecFormatObjectArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCHSOS.SpecSetFormatObjectArchive spec_set_format_object = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_format_object(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SpecFormatObjectArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecFormatObjectArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecSetFormatObjectArchive spec_set_format_object = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::spec_set_format_object(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecFormatObjectArchive)
  return target;
}

size_t SpecFormatObjectArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecFormatObjectArchive)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSCHSOS.SpecSetFormatObjectArchive spec_set_format_object = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *spec_set_format_object_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpecFormatObjectArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSCHSOS.SpecFormatObjectArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const SpecFormatObjectArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpecFormatObjectArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSCHSOS.SpecFormatObjectArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSCHSOS.SpecFormatObjectArchive)
    MergeFrom(*source);
  }
}

void SpecFormatObjectArchive::MergeFrom(const SpecFormatObjectArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecFormatObjectArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_format_object()) {
    _internal_mutable_spec_set_format_object()->::TSCHSOS::SpecSetFormatObjectArchive::MergeFrom(from._internal_spec_set_format_object());
  }
}

void SpecFormatObjectArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSCHSOS.SpecFormatObjectArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpecFormatObjectArchive::CopyFrom(const SpecFormatObjectArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecFormatObjectArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecFormatObjectArchive::IsInitialized() const {
  if (_internal_has_spec_set_format_object()) {
    if (!spec_set_format_object_->IsInitialized()) return false;
  }
  return true;
}

void SpecFormatObjectArchive::InternalSwap(SpecFormatObjectArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(spec_set_format_object_, other->spec_set_format_object_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecFormatObjectArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[10]);
}

// ===================================================================

class SpecNumberFormatArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecNumberFormatArchive>()._has_bits_);
  static const ::TSCHSOS::SpecSetNumberFormatArchive& spec_set_number_format(const SpecNumberFormatArchive* msg);
  static void set_has_spec_set_number_format(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSCHSOS::SpecSetNumberFormatArchive&
SpecNumberFormatArchive::_Internal::spec_set_number_format(const SpecNumberFormatArchive* msg) {
  return *msg->spec_set_number_format_;
}
SpecNumberFormatArchive::SpecNumberFormatArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecNumberFormatArchive)
}
SpecNumberFormatArchive::SpecNumberFormatArchive(const SpecNumberFormatArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_number_format()) {
    spec_set_number_format_ = new ::TSCHSOS::SpecSetNumberFormatArchive(*from.spec_set_number_format_);
  } else {
    spec_set_number_format_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecNumberFormatArchive)
}

void SpecNumberFormatArchive::SharedCtor() {
spec_set_number_format_ = nullptr;
}

SpecNumberFormatArchive::~SpecNumberFormatArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecNumberFormatArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SpecNumberFormatArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete spec_set_number_format_;
}

void SpecNumberFormatArchive::ArenaDtor(void* object) {
  SpecNumberFormatArchive* _this = reinterpret_cast< SpecNumberFormatArchive* >(object);
  (void)_this;
}
void SpecNumberFormatArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SpecNumberFormatArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SpecNumberFormatArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecNumberFormatArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(spec_set_number_format_ != nullptr);
    spec_set_number_format_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecNumberFormatArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCHSOS.SpecSetNumberFormatArchive spec_set_number_format = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_number_format(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SpecNumberFormatArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecNumberFormatArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecSetNumberFormatArchive spec_set_number_format = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::spec_set_number_format(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecNumberFormatArchive)
  return target;
}

size_t SpecNumberFormatArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecNumberFormatArchive)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSCHSOS.SpecSetNumberFormatArchive spec_set_number_format = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *spec_set_number_format_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpecNumberFormatArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSCHSOS.SpecNumberFormatArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const SpecNumberFormatArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SpecNumberFormatArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSCHSOS.SpecNumberFormatArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSCHSOS.SpecNumberFormatArchive)
    MergeFrom(*source);
  }
}

void SpecNumberFormatArchive::MergeFrom(const SpecNumberFormatArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecNumberFormatArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_number_format()) {
    _internal_mutable_spec_set_number_format()->::TSCHSOS::SpecSetNumberFormatArchive::MergeFrom(from._internal_spec_set_number_format());
  }
}

void SpecNumberFormatArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSCHSOS.SpecNumberFormatArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpecNumberFormatArchive::CopyFrom(const SpecNumberFormatArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecNumberFormatArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecNumberFormatArchive::IsInitialized() const {
  if (_internal_has_spec_set_number_format()) {
    if (!spec_set_number_format_->IsInitialized()) return false;
  }
  return true;
}

void SpecNumberFormatArchive::InternalSwap(SpecNumberFormatArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(spec_set_number_format_, other->spec_set_number_format_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecNumberFormatArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[11]);
}

// ===================================================================

class ChartAxisNonStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<ChartAxisNonStylePropertyChangeSetArchive>()._has_bits_);
  static const ::TSCHSOS::SpecFormatObjectArchive& default10_date_format(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_default10_date_format(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_default10_date_format_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static const ::TSCHSOS::SpecNumberFormatArchive& default10_number_format(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_default10_number_format(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_default10_number_format_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default3d_label_position(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_default3d_label_position(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_default3d_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static const ::TSCHSOS::SpecFormatObjectArchive& default_date_format(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_date_format(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_default_date_format_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static const ::TSCHSOS::SpecFormatObjectArchive& default_duration_format(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_duration_format(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_default_duration_format_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static const ::TSCHSOS::SpecNumberFormatArchive& default_number_format(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_number_format(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_default_number_format_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_number_format_type(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_number_format_type(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_default_number_format_type_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static const ::TSSSOS::SpecIntegerArchive& value_number_of_decades(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_value_number_of_decades(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_value_number_of_decades_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static const ::TSSSOS::SpecIntegerArchive& value_number_of_major_gridlines(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_value_number_of_major_gridlines(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_value_number_of_major_gridlines_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static const ::TSSSOS::SpecIntegerArchive& value_number_of_minor_gridlines(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_value_number_of_minor_gridlines(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_value_number_of_minor_gridlines_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static const ::TSSSOS::SpecBoolArchive& category_plot_to_edges(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_category_plot_to_edges(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_category_plot_to_edges_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static const ::TSSSOS::SpecIntegerArchive& value_scale(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_value_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_value_scale_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static const ::TSSSOS::SpecBoolArchive& category_show_labels(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_category_show_labels(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_category_show_labels_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_labels(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_labels(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_default_show_labels_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static const ::TSSSOS::SpecBoolArchive& value_show_labels(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_value_show_labels(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_value_show_labels_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static const ::TSSSOS::SpecBoolArchive& category_show_series_labels(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_category_show_series_labels(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_category_show_series_labels_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static const ::TSSSOS::SpecBoolArchive& multi_data_show_series_labels(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_multi_data_show_series_labels(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_multi_data_show_series_labels_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static const ::TSSSOS::SpecBoolArchive& category_show_title(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_category_show_title(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_category_show_title_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 256u;
  }
  static const ::TSSSOS::SpecBoolArchive& value_show_title(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_value_show_title(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_value_show_title_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 512u;
  }
  static const ::TSSSOS::SpecStringArchive& category_title(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_category_title(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_category_title_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1024u;
  }
  static const ::TSSSOS::SpecStringArchive& value_title(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_value_title(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_value_title_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2048u;
  }
  static const ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive& default_user_max(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_user_max(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_default_user_max_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4096u;
  }
  static const ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive& default_user_min(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_user_min(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_default_user_min_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8192u;
  }
};

const ::TSCHSOS::SpecFormatObjectArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::default10_date_format(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->default10_date_format_;
}
const ::TSCHSOS::SpecNumberFormatArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::default10_number_format(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->default10_number_format_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::default3d_label_position(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->default3d_label_position_;
}
const ::TSCHSOS::SpecFormatObjectArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::default_date_format(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_date_format_;
}
const ::TSCHSOS::SpecFormatObjectArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::default_duration_format(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_duration_format_;
}
const ::TSCHSOS::SpecNumberFormatArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::default_number_format(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_number_format_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::default_number_format_type(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_number_format_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::value_number_of_decades(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->value_number_of_decades_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::value_number_of_major_gridlines(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->value_number_of_major_gridlines_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::value_number_of_minor_gridlines(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->value_number_of_minor_gridlines_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::category_plot_to_edges(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->category_plot_to_edges_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::value_scale(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->value_scale_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::category_show_labels(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->category_show_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::default_show_labels(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_show_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::value_show_labels(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->value_show_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::category_show_series_labels(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->category_show_series_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::multi_data_show_series_labels(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->multi_data_show_series_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::category_show_title(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->category_show_title_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::value_show_title(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->value_show_title_;
}
const ::TSSSOS::SpecStringArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::category_title(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->category_title_;
}
const ::TSSSOS::SpecStringArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::value_title(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->value_title_;
}
const ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::default_user_max(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_user_max_;
}
const ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::default_user_min(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_user_min_;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_default3d_label_position() {
  if (default3d_label_position_ != nullptr) default3d_label_position_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_default_number_format_type() {
  if (default_number_format_type_ != nullptr) default_number_format_type_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_value_number_of_decades() {
  if (value_number_of_decades_ != nullptr) value_number_of_decades_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_value_number_of_major_gridlines() {
  if (value_number_of_major_gridlines_ != nullptr) value_number_of_major_gridlines_->Clear();
  _has_bits_[0] &= ~0x00000100u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_value_number_of_minor_gridlines() {
  if (value_number_of_minor_gridlines_ != nullptr) value_number_of_minor_gridlines_->Clear();
  _has_bits_[0] &= ~0x00000200u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_category_plot_to_edges() {
  if (category_plot_to_edges_ != nullptr) category_plot_to_edges_->Clear();
  _has_bits_[0] &= ~0x00000400u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_value_scale() {
  if (value_scale_ != nullptr) value_scale_->Clear();
  _has_bits_[0] &= ~0x00000800u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_category_show_labels() {
  if (category_show_labels_ != nullptr) category_show_labels_->Clear();
  _has_bits_[0] &= ~0x00001000u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_default_show_labels() {
  if (default_show_labels_ != nullptr) default_show_labels_->Clear();
  _has_bits_[0] &= ~0x00002000u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_value_show_labels() {
  if (value_show_labels_ != nullptr) value_show_labels_->Clear();
  _has_bits_[0] &= ~0x00004000u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_category_show_series_labels() {
  if (category_show_series_labels_ != nullptr) category_show_series_labels_->Clear();
  _has_bits_[0] &= ~0x00008000u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_multi_data_show_series_labels() {
  if (multi_data_show_series_labels_ != nullptr) multi_data_show_series_labels_->Clear();
  _has_bits_[0] &= ~0x00010000u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_category_show_title() {
  if (category_show_title_ != nullptr) category_show_title_->Clear();
  _has_bits_[0] &= ~0x00020000u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_value_show_title() {
  if (value_show_title_ != nullptr) value_show_title_->Clear();
  _has_bits_[0] &= ~0x00040000u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_category_title() {
  if (category_title_ != nullptr) category_title_->Clear();
  _has_bits_[0] &= ~0x00080000u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_value_title() {
  if (value_title_ != nullptr) value_title_->Clear();
  _has_bits_[0] &= ~0x00100000u;
}
ChartAxisNonStylePropertyChangeSetArchive::ChartAxisNonStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive)
}
ChartAxisNonStylePropertyChangeSetArchive::ChartAxisNonStylePropertyChangeSetArchive(const ChartAxisNonStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_default10_date_format()) {
    default10_date_format_ = new ::TSCHSOS::SpecFormatObjectArchive(*from.default10_date_format_);
  } else {
    default10_date_format_ = nullptr;
  }
  if (from._internal_has_default10_number_format()) {
    default10_number_format_ = new ::TSCHSOS::SpecNumberFormatArchive(*from.default10_number_format_);
  } else {
    default10_number_format_ = nullptr;
  }
  if (from._internal_has_default3d_label_position()) {
    default3d_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from.default3d_label_position_);
  } else {
    default3d_label_position_ = nullptr;
  }
  if (from._internal_has_default_date_format()) {
    default_date_format_ = new ::TSCHSOS::SpecFormatObjectArchive(*from.default_date_format_);
  } else {
    default_date_format_ = nullptr;
  }
  if (from._internal_has_default_duration_format()) {
    default_duration_format_ = new ::TSCHSOS::SpecFormatObjectArchive(*from.default_duration_format_);
  } else {
    default_duration_format_ = nullptr;
  }
  if (from._internal_has_default_number_format()) {
    default_number_format_ = new ::TSCHSOS::SpecNumberFormatArchive(*from.default_number_format_);
  } else {
    default_number_format_ = nullptr;
  }
  if (from._internal_has_default_number_format_type()) {
    default_number_format_type_ = new ::TSSSOS::SpecIntegerArchive(*from.default_number_format_type_);
  } else {
    default_number_format_type_ = nullptr;
  }
  if (from._internal_has_value_number_of_decades()) {
    value_number_of_decades_ = new ::TSSSOS::SpecIntegerArchive(*from.value_number_of_decades_);
  } else {
    value_number_of_decades_ = nullptr;
  }
  if (from._internal_has_value_number_of_major_gridlines()) {
    value_number_of_major_gridlines_ = new ::TSSSOS::SpecIntegerArchive(*from.value_number_of_major_gridlines_);
  } else {
    value_number_of_major_gridlines_ = nullptr;
  }
  if (from._internal_has_value_number_of_minor_gridlines()) {
    value_number_of_minor_gridlines_ = new ::TSSSOS::SpecIntegerArchive(*from.value_number_of_minor_gridlines_);
  } else {
    value_number_of_minor_gridlines_ = nullptr;
  }
  if (from._internal_has_category_plot_to_edges()) {
    category_plot_to_edges_ = new ::TSSSOS::SpecBoolArchive(*from.category_plot_to_edges_);
  } else {
    category_plot_to_edges_ = nullptr;
  }
  if (from._internal_has_value_scale()) {
    value_scale_ = new ::TSSSOS::SpecIntegerArchive(*from.value_scale_);
  } else {
    value_scale_ = nullptr;
  }
  if (from._internal_has_category_show_labels()) {
    category_show_labels_ = new ::TSSSOS::SpecBoolArchive(*from.category_show_labels_);
  } else {
    category_show_labels_ = nullptr;
  }
  if (from._internal_has_default_show_labels()) {
    default_show_labels_ = new ::TSSSOS::SpecBoolArchive(*from.default_show_labels_);
  } else {
    default_show_labels_ = nullptr;
  }
  if (from._internal_has_value_show_labels()) {
    value_show_labels_ = new ::TSSSOS::SpecBoolArchive(*from.value_show_labels_);
  } else {
    value_show_labels_ = nullptr;
  }
  if (from._internal_has_category_show_series_labels()) {
    category_show_series_labels_ = new ::TSSSOS::SpecBoolArchive(*from.category_show_series_labels_);
  } else {
    category_show_series_labels_ = nullptr;
  }
  if (from._internal_has_multi_data_show_series_labels()) {
    multi_data_show_series_labels_ = new ::TSSSOS::SpecBoolArchive(*from.multi_data_show_series_labels_);
  } else {
    multi_data_show_series_labels_ = nullptr;
  }
  if (from._internal_has_category_show_title()) {
    category_show_title_ = new ::TSSSOS::SpecBoolArchive(*from.category_show_title_);
  } else {
    category_show_title_ = nullptr;
  }
  if (from._internal_has_value_show_title()) {
    value_show_title_ = new ::TSSSOS::SpecBoolArchive(*from.value_show_title_);
  } else {
    value_show_title_ = nullptr;
  }
  if (from._internal_has_category_title()) {
    category_title_ = new ::TSSSOS::SpecStringArchive(*from.category_title_);
  } else {
    category_title_ = nullptr;
  }
  if (from._internal_has_value_title()) {
    value_title_ = new ::TSSSOS::SpecStringArchive(*from.value_title_);
  } else {
    value_title_ = nullptr;
  }
  if (from._internal_has_default_user_max()) {
    default_user_max_ = new ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive(*from.default_user_max_);
  } else {
    default_user_max_ = nullptr;
  }
  if (from._internal_has_default_user_min()) {
    default_user_min_ = new ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive(*from.default_user_min_);
  } else {
    default_user_min_ = nullptr;
  }
  ::memcpy(&default10_date_format_undefined_, &from.default10_date_format_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&default_user_min_undefined_) -
    reinterpret_cast<char*>(&default10_date_format_undefined_)) + sizeof(default_user_min_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive)
}

void ChartAxisNonStylePropertyChangeSetArchive::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&default10_date_format_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&default_user_min_undefined_) -
    reinterpret_cast<char*>(&default10_date_format_)) + sizeof(default_user_min_undefined_));
}

ChartAxisNonStylePropertyChangeSetArchive::~ChartAxisNonStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChartAxisNonStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete default10_date_format_;
  if (this != internal_default_instance()) delete default10_number_format_;
  if (this != internal_default_instance()) delete default3d_label_position_;
  if (this != internal_default_instance()) delete default_date_format_;
  if (this != internal_default_instance()) delete default_duration_format_;
  if (this != internal_default_instance()) delete default_number_format_;
  if (this != internal_default_instance()) delete default_number_format_type_;
  if (this != internal_default_instance()) delete value_number_of_decades_;
  if (this != internal_default_instance()) delete value_number_of_major_gridlines_;
  if (this != internal_default_instance()) delete value_number_of_minor_gridlines_;
  if (this != internal_default_instance()) delete category_plot_to_edges_;
  if (this != internal_default_instance()) delete value_scale_;
  if (this != internal_default_instance()) delete category_show_labels_;
  if (this != internal_default_instance()) delete default_show_labels_;
  if (this != internal_default_instance()) delete value_show_labels_;
  if (this != internal_default_instance()) delete category_show_series_labels_;
  if (this != internal_default_instance()) delete multi_data_show_series_labels_;
  if (this != internal_default_instance()) delete category_show_title_;
  if (this != internal_default_instance()) delete value_show_title_;
  if (this != internal_default_instance()) delete category_title_;
  if (this != internal_default_instance()) delete value_title_;
  if (this != internal_default_instance()) delete default_user_max_;
  if (this != internal_default_instance()) delete default_user_min_;
}

void ChartAxisNonStylePropertyChangeSetArchive::ArenaDtor(void* object) {
  ChartAxisNonStylePropertyChangeSetArchive* _this = reinterpret_cast< ChartAxisNonStylePropertyChangeSetArchive* >(object);
  (void)_this;
}
void ChartAxisNonStylePropertyChangeSetArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChartAxisNonStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ChartAxisNonStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(default10_date_format_ != nullptr);
      default10_date_format_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(default10_number_format_ != nullptr);
      default10_number_format_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(default3d_label_position_ != nullptr);
      default3d_label_position_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(default_date_format_ != nullptr);
      default_date_format_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(default_duration_format_ != nullptr);
      default_duration_format_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(default_number_format_ != nullptr);
      default_number_format_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(default_number_format_type_ != nullptr);
      default_number_format_type_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(value_number_of_decades_ != nullptr);
      value_number_of_decades_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(value_number_of_major_gridlines_ != nullptr);
      value_number_of_major_gridlines_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(value_number_of_minor_gridlines_ != nullptr);
      value_number_of_minor_gridlines_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(category_plot_to_edges_ != nullptr);
      category_plot_to_edges_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(value_scale_ != nullptr);
      value_scale_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(category_show_labels_ != nullptr);
      category_show_labels_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(default_show_labels_ != nullptr);
      default_show_labels_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(value_show_labels_ != nullptr);
      value_show_labels_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(category_show_series_labels_ != nullptr);
      category_show_series_labels_->Clear();
    }
  }
  if (cached_has_bits & 0x007f0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(multi_data_show_series_labels_ != nullptr);
      multi_data_show_series_labels_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(category_show_title_ != nullptr);
      category_show_title_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(value_show_title_ != nullptr);
      value_show_title_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(category_title_ != nullptr);
      category_title_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(value_title_ != nullptr);
      value_title_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(default_user_max_ != nullptr);
      default_user_max_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(default_user_min_ != nullptr);
      default_user_min_->Clear();
    }
  }
  default10_date_format_undefined_ = false;
  if (cached_has_bits & 0xff000000u) {
    ::memset(&default10_number_format_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&value_number_of_major_gridlines_undefined_) -
        reinterpret_cast<char*>(&default10_number_format_undefined_)) + sizeof(value_number_of_major_gridlines_undefined_));
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&value_number_of_minor_gridlines_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&multi_data_show_series_labels_undefined_) -
        reinterpret_cast<char*>(&value_number_of_minor_gridlines_undefined_)) + sizeof(multi_data_show_series_labels_undefined_));
  }
  if (cached_has_bits & 0x00003f00u) {
    ::memset(&category_show_title_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_user_min_undefined_) -
        reinterpret_cast<char*>(&category_show_title_undefined_)) + sizeof(default_user_min_undefined_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChartAxisNonStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCHSOS.SpecFormatObjectArchive default10_date_format = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default10_date_format(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default10_date_format_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_default10_date_format_undefined(&_has_bits_);
          default10_date_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecNumberFormatArchive default10_number_format = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default10_number_format(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default10_number_format_undefined = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_default10_number_format_undefined(&_has_bits_);
          default10_number_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default3d_label_position = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_default3d_label_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default3d_label_position_undefined = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_default3d_label_position_undefined(&_has_bits_);
          default3d_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecFormatObjectArchive default_date_format = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_date_format(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_date_format_undefined = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_default_date_format_undefined(&_has_bits_);
          default_date_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecFormatObjectArchive default_duration_format = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_duration_format(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_duration_format_undefined = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_default_duration_format_undefined(&_has_bits_);
          default_duration_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecNumberFormatArchive default_number_format = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_number_format(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_number_format_undefined = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_default_number_format_undefined(&_has_bits_);
          default_number_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_number_format_type = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_number_format_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_number_format_type_undefined = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_default_number_format_type_undefined(&_has_bits_);
          default_number_format_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive value_number_of_decades = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_number_of_decades(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value_number_of_decades_undefined = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_value_number_of_decades_undefined(&_has_bits_);
          value_number_of_decades_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive value_number_of_major_gridlines = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_number_of_major_gridlines(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value_number_of_major_gridlines_undefined = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_value_number_of_major_gridlines_undefined(&_has_bits_);
          value_number_of_major_gridlines_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive value_number_of_minor_gridlines = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_number_of_minor_gridlines(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value_number_of_minor_gridlines_undefined = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_value_number_of_minor_gridlines_undefined(&_has_bits_);
          value_number_of_minor_gridlines_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive category_plot_to_edges = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_plot_to_edges(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category_plot_to_edges_undefined = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_category_plot_to_edges_undefined(&_has_bits_);
          category_plot_to_edges_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive value_scale = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_scale(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value_scale_undefined = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_value_scale_undefined(&_has_bits_);
          value_scale_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive category_show_labels = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_show_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category_show_labels_undefined = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_category_show_labels_undefined(&_has_bits_);
          category_show_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_labels = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_show_labels_undefined = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_default_show_labels_undefined(&_has_bits_);
          default_show_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive value_show_labels = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_show_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value_show_labels_undefined = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_value_show_labels_undefined(&_has_bits_);
          value_show_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive category_show_series_labels = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_show_series_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category_show_series_labels_undefined = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          _Internal::set_has_category_show_series_labels_undefined(&_has_bits_);
          category_show_series_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive multi_data_show_series_labels = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_multi_data_show_series_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool multi_data_show_series_labels_undefined = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_multi_data_show_series_labels_undefined(&_has_bits_);
          multi_data_show_series_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive category_show_title = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_show_title(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category_show_title_undefined = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_category_show_title_undefined(&_has_bits_);
          category_show_title_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive value_show_title = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_show_title(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value_show_title_undefined = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_value_show_title_undefined(&_has_bits_);
          value_show_title_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecStringArchive category_title = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_title(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category_title_undefined = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_category_title_undefined(&_has_bits_);
          category_title_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecStringArchive value_title = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_title(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value_title_undefined = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_value_title_undefined(&_has_bits_);
          value_title_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChartsOptionalDoubleArchiveArchive default_user_max = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_user_max(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_user_max_undefined = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_default_user_max_undefined(&_has_bits_);
          default_user_max_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChartsOptionalDoubleArchiveArchive default_user_min = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_user_min(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_user_min_undefined = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_default_user_min_undefined(&_has_bits_);
          default_user_min_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChartAxisNonStylePropertyChangeSetArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecFormatObjectArchive default10_date_format = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::default10_date_format(this), target, stream);
  }

  // optional bool default10_date_format_undefined = 2;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_default10_date_format_undefined(), target);
  }

  // optional .TSCHSOS.SpecNumberFormatArchive default10_number_format = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::default10_number_format(this), target, stream);
  }

  // optional bool default10_number_format_undefined = 4;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_default10_number_format_undefined(), target);
  }

  // optional .TSSSOS.SpecIntegerArchive default3d_label_position = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::default3d_label_position(this), target, stream);
  }

  // optional bool default3d_label_position_undefined = 6;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_default3d_label_position_undefined(), target);
  }

  // optional .TSCHSOS.SpecFormatObjectArchive default_date_format = 7;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::default_date_format(this), target, stream);
  }

  // optional bool default_date_format_undefined = 8;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_default_date_format_undefined(), target);
  }

  // optional .TSCHSOS.SpecFormatObjectArchive default_duration_format = 9;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::default_duration_format(this), target, stream);
  }

  // optional bool default_duration_format_undefined = 10;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_default_duration_format_undefined(), target);
  }

  // optional .TSCHSOS.SpecNumberFormatArchive default_number_format = 11;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::default_number_format(this), target, stream);
  }

  // optional bool default_number_format_undefined = 12;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->_internal_default_number_format_undefined(), target);
  }

  // optional .TSSSOS.SpecIntegerArchive default_number_format_type = 13;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::default_number_format_type(this), target, stream);
  }

  // optional bool default_number_format_type_undefined = 14;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(14, this->_internal_default_number_format_type_undefined(), target);
  }

  // optional .TSSSOS.SpecIntegerArchive value_number_of_decades = 15;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        15, _Internal::value_number_of_decades(this), target, stream);
  }

  // optional bool value_number_of_decades_undefined = 16;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(16, this->_internal_value_number_of_decades_undefined(), target);
  }

  // optional .TSSSOS.SpecIntegerArchive value_number_of_major_gridlines = 17;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        17, _Internal::value_number_of_major_gridlines(this), target, stream);
  }

  // optional bool value_number_of_major_gridlines_undefined = 18;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(18, this->_internal_value_number_of_major_gridlines_undefined(), target);
  }

  // optional .TSSSOS.SpecIntegerArchive value_number_of_minor_gridlines = 19;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        19, _Internal::value_number_of_minor_gridlines(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool value_number_of_minor_gridlines_undefined = 20;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(20, this->_internal_value_number_of_minor_gridlines_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive category_plot_to_edges = 21;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        21, _Internal::category_plot_to_edges(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool category_plot_to_edges_undefined = 22;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(22, this->_internal_category_plot_to_edges_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive value_scale = 23;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        23, _Internal::value_scale(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool value_scale_undefined = 24;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(24, this->_internal_value_scale_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive category_show_labels = 25;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        25, _Internal::category_show_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool category_show_labels_undefined = 26;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(26, this->_internal_category_show_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive default_show_labels = 27;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        27, _Internal::default_show_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_show_labels_undefined = 28;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(28, this->_internal_default_show_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive value_show_labels = 29;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        29, _Internal::value_show_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool value_show_labels_undefined = 30;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(30, this->_internal_value_show_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive category_show_series_labels = 31;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        31, _Internal::category_show_series_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool category_show_series_labels_undefined = 32;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(32, this->_internal_category_show_series_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive multi_data_show_series_labels = 33;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        33, _Internal::multi_data_show_series_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool multi_data_show_series_labels_undefined = 34;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(34, this->_internal_multi_data_show_series_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive category_show_title = 35;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        35, _Internal::category_show_title(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool category_show_title_undefined = 36;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(36, this->_internal_category_show_title_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive value_show_title = 37;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        37, _Internal::value_show_title(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool value_show_title_undefined = 38;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(38, this->_internal_value_show_title_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecStringArchive category_title = 39;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        39, _Internal::category_title(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool category_title_undefined = 40;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(40, this->_internal_category_title_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecStringArchive value_title = 41;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        41, _Internal::value_title(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool value_title_undefined = 42;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(42, this->_internal_value_title_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecChartsOptionalDoubleArchiveArchive default_user_max = 43;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        43, _Internal::default_user_max(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_user_max_undefined = 44;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(44, this->_internal_default_user_max_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecChartsOptionalDoubleArchiveArchive default_user_min = 45;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        45, _Internal::default_user_min(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_user_min_undefined = 46;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(46, this->_internal_default_user_min_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive)
  return target;
}

size_t ChartAxisNonStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSCHSOS.SpecFormatObjectArchive default10_date_format = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default10_date_format_);
    }

    // optional .TSCHSOS.SpecNumberFormatArchive default10_number_format = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default10_number_format_);
    }

    // optional .TSSSOS.SpecIntegerArchive default3d_label_position = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default3d_label_position_);
    }

    // optional .TSCHSOS.SpecFormatObjectArchive default_date_format = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_date_format_);
    }

    // optional .TSCHSOS.SpecFormatObjectArchive default_duration_format = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_duration_format_);
    }

    // optional .TSCHSOS.SpecNumberFormatArchive default_number_format = 11;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_number_format_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_number_format_type = 13;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_number_format_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive value_number_of_decades = 15;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_number_of_decades_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSSSOS.SpecIntegerArchive value_number_of_major_gridlines = 17;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_number_of_major_gridlines_);
    }

    // optional .TSSSOS.SpecIntegerArchive value_number_of_minor_gridlines = 19;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_number_of_minor_gridlines_);
    }

    // optional .TSSSOS.SpecBoolArchive category_plot_to_edges = 21;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category_plot_to_edges_);
    }

    // optional .TSSSOS.SpecIntegerArchive value_scale = 23;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_scale_);
    }

    // optional .TSSSOS.SpecBoolArchive category_show_labels = 25;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category_show_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_labels = 27;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_show_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive value_show_labels = 29;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_show_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive category_show_series_labels = 31;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category_show_series_labels_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSSSOS.SpecBoolArchive multi_data_show_series_labels = 33;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *multi_data_show_series_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive category_show_title = 35;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category_show_title_);
    }

    // optional .TSSSOS.SpecBoolArchive value_show_title = 37;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_show_title_);
    }

    // optional .TSSSOS.SpecStringArchive category_title = 39;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category_title_);
    }

    // optional .TSSSOS.SpecStringArchive value_title = 41;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_title_);
    }

    // optional .TSCHSOS.SpecChartsOptionalDoubleArchiveArchive default_user_max = 43;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_user_max_);
    }

    // optional .TSCHSOS.SpecChartsOptionalDoubleArchiveArchive default_user_min = 45;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_user_min_);
    }

    // optional bool default10_date_format_undefined = 2;
    if (cached_has_bits & 0x00800000u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool default10_number_format_undefined = 4;
    if (cached_has_bits & 0x01000000u) {
      total_size += 1 + 1;
    }

    // optional bool default3d_label_position_undefined = 6;
    if (cached_has_bits & 0x02000000u) {
      total_size += 1 + 1;
    }

    // optional bool default_date_format_undefined = 8;
    if (cached_has_bits & 0x04000000u) {
      total_size += 1 + 1;
    }

    // optional bool default_duration_format_undefined = 10;
    if (cached_has_bits & 0x08000000u) {
      total_size += 1 + 1;
    }

    // optional bool default_number_format_undefined = 12;
    if (cached_has_bits & 0x10000000u) {
      total_size += 1 + 1;
    }

    // optional bool default_number_format_type_undefined = 14;
    if (cached_has_bits & 0x20000000u) {
      total_size += 1 + 1;
    }

    // optional bool value_number_of_decades_undefined = 16;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + 1;
    }

    // optional bool value_number_of_major_gridlines_undefined = 18;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + 1;
    }

  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool value_number_of_minor_gridlines_undefined = 20;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 1;
    }

    // optional bool category_plot_to_edges_undefined = 22;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 1;
    }

    // optional bool value_scale_undefined = 24;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool category_show_labels_undefined = 26;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

    // optional bool default_show_labels_undefined = 28;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional bool value_show_labels_undefined = 30;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional bool category_show_series_labels_undefined = 32;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool multi_data_show_series_labels_undefined = 34;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00003f00u) {
    // optional bool category_show_title_undefined = 36;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool value_show_title_undefined = 38;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool category_title_undefined = 40;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool value_title_undefined = 42;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool default_user_max_undefined = 44;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional bool default_user_min_undefined = 46;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChartAxisNonStylePropertyChangeSetArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const ChartAxisNonStylePropertyChangeSetArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChartAxisNonStylePropertyChangeSetArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive)
    MergeFrom(*source);
  }
}

void ChartAxisNonStylePropertyChangeSetArchive::MergeFrom(const ChartAxisNonStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_default10_date_format()->::TSCHSOS::SpecFormatObjectArchive::MergeFrom(from._internal_default10_date_format());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_default10_number_format()->::TSCHSOS::SpecNumberFormatArchive::MergeFrom(from._internal_default10_number_format());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_default3d_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default3d_label_position());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_default_date_format()->::TSCHSOS::SpecFormatObjectArchive::MergeFrom(from._internal_default_date_format());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_default_duration_format()->::TSCHSOS::SpecFormatObjectArchive::MergeFrom(from._internal_default_duration_format());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_default_number_format()->::TSCHSOS::SpecNumberFormatArchive::MergeFrom(from._internal_default_number_format());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_default_number_format_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_number_format_type());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_value_number_of_decades()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_value_number_of_decades());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_value_number_of_major_gridlines()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_value_number_of_major_gridlines());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_value_number_of_minor_gridlines()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_value_number_of_minor_gridlines());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_category_plot_to_edges()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_category_plot_to_edges());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_value_scale()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_value_scale());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_category_show_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_category_show_labels());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_default_show_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_default_show_labels());
    }
    if (cached_has_bits & 0x00004000u) {
      _internal_mutable_value_show_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_value_show_labels());
    }
    if (cached_has_bits & 0x00008000u) {
      _internal_mutable_category_show_series_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_category_show_series_labels());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _internal_mutable_multi_data_show_series_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_multi_data_show_series_labels());
    }
    if (cached_has_bits & 0x00020000u) {
      _internal_mutable_category_show_title()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_category_show_title());
    }
    if (cached_has_bits & 0x00040000u) {
      _internal_mutable_value_show_title()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_value_show_title());
    }
    if (cached_has_bits & 0x00080000u) {
      _internal_mutable_category_title()->::TSSSOS::SpecStringArchive::MergeFrom(from._internal_category_title());
    }
    if (cached_has_bits & 0x00100000u) {
      _internal_mutable_value_title()->::TSSSOS::SpecStringArchive::MergeFrom(from._internal_value_title());
    }
    if (cached_has_bits & 0x00200000u) {
      _internal_mutable_default_user_max()->::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive::MergeFrom(from._internal_default_user_max());
    }
    if (cached_has_bits & 0x00400000u) {
      _internal_mutable_default_user_min()->::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive::MergeFrom(from._internal_default_user_min());
    }
    if (cached_has_bits & 0x00800000u) {
      default10_date_format_undefined_ = from.default10_date_format_undefined_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      default10_number_format_undefined_ = from.default10_number_format_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      default3d_label_position_undefined_ = from.default3d_label_position_undefined_;
    }
    if (cached_has_bits & 0x04000000u) {
      default_date_format_undefined_ = from.default_date_format_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      default_duration_format_undefined_ = from.default_duration_format_undefined_;
    }
    if (cached_has_bits & 0x10000000u) {
      default_number_format_undefined_ = from.default_number_format_undefined_;
    }
    if (cached_has_bits & 0x20000000u) {
      default_number_format_type_undefined_ = from.default_number_format_type_undefined_;
    }
    if (cached_has_bits & 0x40000000u) {
      value_number_of_decades_undefined_ = from.value_number_of_decades_undefined_;
    }
    if (cached_has_bits & 0x80000000u) {
      value_number_of_major_gridlines_undefined_ = from.value_number_of_major_gridlines_undefined_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      value_number_of_minor_gridlines_undefined_ = from.value_number_of_minor_gridlines_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      category_plot_to_edges_undefined_ = from.category_plot_to_edges_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      value_scale_undefined_ = from.value_scale_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      category_show_labels_undefined_ = from.category_show_labels_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      default_show_labels_undefined_ = from.default_show_labels_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      value_show_labels_undefined_ = from.value_show_labels_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      category_show_series_labels_undefined_ = from.category_show_series_labels_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      multi_data_show_series_labels_undefined_ = from.multi_data_show_series_labels_undefined_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00003f00u) {
    if (cached_has_bits & 0x00000100u) {
      category_show_title_undefined_ = from.category_show_title_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      value_show_title_undefined_ = from.value_show_title_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      category_title_undefined_ = from.category_title_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      value_title_undefined_ = from.value_title_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      default_user_max_undefined_ = from.default_user_max_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      default_user_min_undefined_ = from.default_user_min_undefined_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
}

void ChartAxisNonStylePropertyChangeSetArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChartAxisNonStylePropertyChangeSetArchive::CopyFrom(const ChartAxisNonStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChartAxisNonStylePropertyChangeSetArchive::IsInitialized() const {
  if (_internal_has_default10_date_format()) {
    if (!default10_date_format_->IsInitialized()) return false;
  }
  if (_internal_has_default10_number_format()) {
    if (!default10_number_format_->IsInitialized()) return false;
  }
  if (_internal_has_default3d_label_position()) {
    if (!default3d_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_default_date_format()) {
    if (!default_date_format_->IsInitialized()) return false;
  }
  if (_internal_has_default_duration_format()) {
    if (!default_duration_format_->IsInitialized()) return false;
  }
  if (_internal_has_default_number_format()) {
    if (!default_number_format_->IsInitialized()) return false;
  }
  if (_internal_has_default_number_format_type()) {
    if (!default_number_format_type_->IsInitialized()) return false;
  }
  if (_internal_has_value_number_of_decades()) {
    if (!value_number_of_decades_->IsInitialized()) return false;
  }
  if (_internal_has_value_number_of_major_gridlines()) {
    if (!value_number_of_major_gridlines_->IsInitialized()) return false;
  }
  if (_internal_has_value_number_of_minor_gridlines()) {
    if (!value_number_of_minor_gridlines_->IsInitialized()) return false;
  }
  if (_internal_has_category_plot_to_edges()) {
    if (!category_plot_to_edges_->IsInitialized()) return false;
  }
  if (_internal_has_value_scale()) {
    if (!value_scale_->IsInitialized()) return false;
  }
  if (_internal_has_category_show_labels()) {
    if (!category_show_labels_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_labels()) {
    if (!default_show_labels_->IsInitialized()) return false;
  }
  if (_internal_has_value_show_labels()) {
    if (!value_show_labels_->IsInitialized()) return false;
  }
  if (_internal_has_category_show_series_labels()) {
    if (!category_show_series_labels_->IsInitialized()) return false;
  }
  if (_internal_has_multi_data_show_series_labels()) {
    if (!multi_data_show_series_labels_->IsInitialized()) return false;
  }
  if (_internal_has_category_show_title()) {
    if (!category_show_title_->IsInitialized()) return false;
  }
  if (_internal_has_value_show_title()) {
    if (!value_show_title_->IsInitialized()) return false;
  }
  if (_internal_has_category_title()) {
    if (!category_title_->IsInitialized()) return false;
  }
  if (_internal_has_value_title()) {
    if (!value_title_->IsInitialized()) return false;
  }
  if (_internal_has_default_user_max()) {
    if (!default_user_max_->IsInitialized()) return false;
  }
  if (_internal_has_default_user_min()) {
    if (!default_user_min_->IsInitialized()) return false;
  }
  return true;
}

void ChartAxisNonStylePropertyChangeSetArchive::InternalSwap(ChartAxisNonStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChartAxisNonStylePropertyChangeSetArchive, default_user_min_undefined_)
      + sizeof(ChartAxisNonStylePropertyChangeSetArchive::default_user_min_undefined_)
      - PROTOBUF_FIELD_OFFSET(ChartAxisNonStylePropertyChangeSetArchive, default10_date_format_)>(
          reinterpret_cast<char*>(&default10_date_format_),
          reinterpret_cast<char*>(&other->default10_date_format_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChartAxisNonStylePropertyChangeSetArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[12]);
}

// ===================================================================

class ChartAxisStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<ChartAxisStylePropertyChangeSetArchive>()._has_bits_);
  static const ::TSSSOS::SpecDoubleArchive& category3d_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category3d_gridline_opacity(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_category3d_gridline_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 512u;
  }
  static const ::TSSSOS::SpecDoubleArchive& value3d_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value3d_gridline_opacity(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_value3d_gridline_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1024u;
  }
  static const ::TSDSOS::SpecStrokeArchive& category3d_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category3d_gridline_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_category3d_gridline_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2048u;
  }
  static const ::TSDSOS::SpecStrokeArchive& value3d_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value3d_gridline_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_value3d_gridline_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4096u;
  }
  static const ::TSSSOS::SpecIntegerArchive& category_horizontal_spacing(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_horizontal_spacing(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_category_horizontal_spacing_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8192u;
  }
  static const ::TSSSOS::SpecIntegerArchive& category_label_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_category_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 16384u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_label_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_default_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_default_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 32768u;
  }
  static const ::TSSSOS::SpecIntegerArchive& value_label_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_value_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 65536u;
  }
  static const ::TSSSOS::SpecDoubleArchive& category_labels_orientation(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_labels_orientation(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_category_labels_orientation_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 131072u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_labels_orientation(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_default_labels_orientation(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_default_labels_orientation_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 262144u;
  }
  static const ::TSSSOS::SpecDoubleArchive& value_labels_orientation(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_labels_orientation(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_value_labels_orientation_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 524288u;
  }
  static const ::TSSSOS::SpecDoubleArchive& category_major_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_major_gridline_opacity(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_category_major_gridline_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1048576u;
  }
  static const ::TSSSOS::SpecDoubleArchive& value_major_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_major_gridline_opacity(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_value_major_gridline_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2097152u;
  }
  static const ::TSDSOS::SpecShadowArchive& category_major_gridline_shadow(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_major_gridline_shadow(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_category_major_gridline_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4194304u;
  }
  static const ::TSDSOS::SpecShadowArchive& value_major_gridline_shadow(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_major_gridline_shadow(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_value_major_gridline_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8388608u;
  }
  static const ::TSDSOS::SpecStrokeArchive& category_major_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_major_gridline_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_category_major_gridline_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 16777216u;
  }
  static const ::TSDSOS::SpecStrokeArchive& value_major_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_major_gridline_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_value_major_gridline_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 33554432u;
  }
  static const ::TSSSOS::SpecDoubleArchive& category_minor_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_minor_gridline_opacity(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_category_minor_gridline_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 67108864u;
  }
  static const ::TSSSOS::SpecDoubleArchive& value_minor_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_minor_gridline_opacity(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_value_minor_gridline_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 134217728u;
  }
  static const ::TSDSOS::SpecShadowArchive& category_minor_gridline_shadow(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_minor_gridline_shadow(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_category_minor_gridline_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 268435456u;
  }
  static const ::TSDSOS::SpecShadowArchive& value_minor_gridline_shadow(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_minor_gridline_shadow(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_value_minor_gridline_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 536870912u;
  }
  static const ::TSDSOS::SpecStrokeArchive& category_minor_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_minor_gridline_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_category_minor_gridline_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1073741824u;
  }
  static const ::TSDSOS::SpecStrokeArchive& value_minor_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_minor_gridline_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_value_minor_gridline_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2147483648u;
  }
  static const ::TSSSOS::SpecBoolArchive& category_show_axis(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_show_axis(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_category_show_axis_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 1u;
  }
  static const ::TSSSOS::SpecBoolArchive& value_show_axis(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_show_axis(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_value_show_axis_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 2u;
  }
  static const ::TSSSOS::SpecBoolArchive& category_show_last_label(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_show_last_label(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_category_show_last_label_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 4u;
  }
  static const ::TSSSOS::SpecBoolArchive& category_show_major_gridlines(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_show_major_gridlines(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_category_show_major_gridlines_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 8u;
  }
  static const ::TSSSOS::SpecBoolArchive& value_show_major_gridlines(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_show_major_gridlines(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static void set_has_value_show_major_gridlines_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 16u;
  }
  static const ::TSSSOS::SpecBoolArchive& category_show_major_tickmarks(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_show_major_tickmarks(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static void set_has_category_show_major_tickmarks_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 32u;
  }
  static const ::TSSSOS::SpecBoolArchive& value_show_major_tickmarks(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_show_major_tickmarks(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static void set_has_value_show_major_tickmarks_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 64u;
  }
  static const ::TSSSOS::SpecBoolArchive& value_show_minimum_label(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_show_minimum_label(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static void set_has_value_show_minimum_label_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 128u;
  }
  static const ::TSSSOS::SpecBoolArchive& category_show_minor_gridlines(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_show_minor_gridlines(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static void set_has_category_show_minor_gridlines_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 256u;
  }
  static const ::TSSSOS::SpecBoolArchive& value_show_minor_gridlines(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_show_minor_gridlines(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static void set_has_value_show_minor_gridlines_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 512u;
  }
  static const ::TSSSOS::SpecBoolArchive& category_show_minor_tickmarks(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_show_minor_tickmarks(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static void set_has_category_show_minor_tickmarks_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 1024u;
  }
  static const ::TSSSOS::SpecBoolArchive& value_show_minor_tickmarks(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_show_minor_tickmarks(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static void set_has_value_show_minor_tickmarks_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 2048u;
  }
  static const ::TSSSOS::SpecIntegerArchive& category_tickmark_location(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_tickmark_location(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static void set_has_category_tickmark_location_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 4096u;
  }
  static const ::TSSSOS::SpecIntegerArchive& value_tickmark_location(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_tickmark_location(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static void set_has_value_tickmark_location_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 8192u;
  }
  static const ::TSSSOS::SpecIntegerArchive& category_title_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_title_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static void set_has_category_title_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 16384u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_title_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_default_title_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static void set_has_default_title_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 32768u;
  }
  static const ::TSSSOS::SpecIntegerArchive& value_title_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_title_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static void set_has_value_title_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 65536u;
  }
  static const ::TSSSOS::SpecIntegerArchive& category_vertical_spacing(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_vertical_spacing(HasBits* has_bits) {
    (*has_bits)[1] |= 256u;
  }
  static void set_has_category_vertical_spacing_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 131072u;
  }
};

const ::TSSSOS::SpecDoubleArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category3d_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->category3d_gridline_opacity_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value3d_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->value3d_gridline_opacity_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category3d_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->category3d_gridline_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value3d_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->value3d_gridline_stroke_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_horizontal_spacing(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->category_horizontal_spacing_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_label_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->category_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::default_label_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->default_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_label_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->value_label_paragraph_style_index_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_labels_orientation(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->category_labels_orientation_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::default_labels_orientation(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->default_labels_orientation_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_labels_orientation(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->value_labels_orientation_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_major_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->category_major_gridline_opacity_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_major_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->value_major_gridline_opacity_;
}
const ::TSDSOS::SpecShadowArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_major_gridline_shadow(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->category_major_gridline_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_major_gridline_shadow(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->value_major_gridline_shadow_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_major_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->category_major_gridline_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_major_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->value_major_gridline_stroke_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_minor_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->category_minor_gridline_opacity_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_minor_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->value_minor_gridline_opacity_;
}
const ::TSDSOS::SpecShadowArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_minor_gridline_shadow(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->category_minor_gridline_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_minor_gridline_shadow(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->value_minor_gridline_shadow_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_minor_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->category_minor_gridline_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_minor_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->value_minor_gridline_stroke_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_show_axis(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->category_show_axis_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_show_axis(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->value_show_axis_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_show_last_label(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->category_show_last_label_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_show_major_gridlines(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->category_show_major_gridlines_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_show_major_gridlines(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->value_show_major_gridlines_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_show_major_tickmarks(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->category_show_major_tickmarks_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_show_major_tickmarks(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->value_show_major_tickmarks_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_show_minimum_label(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->value_show_minimum_label_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_show_minor_gridlines(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->category_show_minor_gridlines_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_show_minor_gridlines(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->value_show_minor_gridlines_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_show_minor_tickmarks(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->category_show_minor_tickmarks_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_show_minor_tickmarks(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->value_show_minor_tickmarks_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_tickmark_location(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->category_tickmark_location_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_tickmark_location(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->value_tickmark_location_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_title_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->category_title_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::default_title_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->default_title_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_title_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->value_title_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_vertical_spacing(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->category_vertical_spacing_;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category3d_gridline_opacity() {
  if (category3d_gridline_opacity_ != nullptr) category3d_gridline_opacity_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value3d_gridline_opacity() {
  if (value3d_gridline_opacity_ != nullptr) value3d_gridline_opacity_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category3d_gridline_stroke() {
  if (category3d_gridline_stroke_ != nullptr) category3d_gridline_stroke_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value3d_gridline_stroke() {
  if (value3d_gridline_stroke_ != nullptr) value3d_gridline_stroke_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_horizontal_spacing() {
  if (category_horizontal_spacing_ != nullptr) category_horizontal_spacing_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_label_paragraph_style_index() {
  if (category_label_paragraph_style_index_ != nullptr) category_label_paragraph_style_index_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_default_label_paragraph_style_index() {
  if (default_label_paragraph_style_index_ != nullptr) default_label_paragraph_style_index_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_label_paragraph_style_index() {
  if (value_label_paragraph_style_index_ != nullptr) value_label_paragraph_style_index_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_labels_orientation() {
  if (category_labels_orientation_ != nullptr) category_labels_orientation_->Clear();
  _has_bits_[0] &= ~0x00000100u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_default_labels_orientation() {
  if (default_labels_orientation_ != nullptr) default_labels_orientation_->Clear();
  _has_bits_[0] &= ~0x00000200u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_labels_orientation() {
  if (value_labels_orientation_ != nullptr) value_labels_orientation_->Clear();
  _has_bits_[0] &= ~0x00000400u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_major_gridline_opacity() {
  if (category_major_gridline_opacity_ != nullptr) category_major_gridline_opacity_->Clear();
  _has_bits_[0] &= ~0x00000800u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_major_gridline_opacity() {
  if (value_major_gridline_opacity_ != nullptr) value_major_gridline_opacity_->Clear();
  _has_bits_[0] &= ~0x00001000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_major_gridline_shadow() {
  if (category_major_gridline_shadow_ != nullptr) category_major_gridline_shadow_->Clear();
  _has_bits_[0] &= ~0x00002000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_major_gridline_shadow() {
  if (value_major_gridline_shadow_ != nullptr) value_major_gridline_shadow_->Clear();
  _has_bits_[0] &= ~0x00004000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_major_gridline_stroke() {
  if (category_major_gridline_stroke_ != nullptr) category_major_gridline_stroke_->Clear();
  _has_bits_[0] &= ~0x00008000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_major_gridline_stroke() {
  if (value_major_gridline_stroke_ != nullptr) value_major_gridline_stroke_->Clear();
  _has_bits_[0] &= ~0x00010000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_minor_gridline_opacity() {
  if (category_minor_gridline_opacity_ != nullptr) category_minor_gridline_opacity_->Clear();
  _has_bits_[0] &= ~0x00020000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_minor_gridline_opacity() {
  if (value_minor_gridline_opacity_ != nullptr) value_minor_gridline_opacity_->Clear();
  _has_bits_[0] &= ~0x00040000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_minor_gridline_shadow() {
  if (category_minor_gridline_shadow_ != nullptr) category_minor_gridline_shadow_->Clear();
  _has_bits_[0] &= ~0x00080000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_minor_gridline_shadow() {
  if (value_minor_gridline_shadow_ != nullptr) value_minor_gridline_shadow_->Clear();
  _has_bits_[0] &= ~0x00100000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_minor_gridline_stroke() {
  if (category_minor_gridline_stroke_ != nullptr) category_minor_gridline_stroke_->Clear();
  _has_bits_[0] &= ~0x00200000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_minor_gridline_stroke() {
  if (value_minor_gridline_stroke_ != nullptr) value_minor_gridline_stroke_->Clear();
  _has_bits_[0] &= ~0x00400000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_show_axis() {
  if (category_show_axis_ != nullptr) category_show_axis_->Clear();
  _has_bits_[0] &= ~0x00800000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_show_axis() {
  if (value_show_axis_ != nullptr) value_show_axis_->Clear();
  _has_bits_[0] &= ~0x01000000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_show_last_label() {
  if (category_show_last_label_ != nullptr) category_show_last_label_->Clear();
  _has_bits_[0] &= ~0x02000000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_show_major_gridlines() {
  if (category_show_major_gridlines_ != nullptr) category_show_major_gridlines_->Clear();
  _has_bits_[0] &= ~0x04000000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_show_major_gridlines() {
  if (value_show_major_gridlines_ != nullptr) value_show_major_gridlines_->Clear();
  _has_bits_[0] &= ~0x08000000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_show_major_tickmarks() {
  if (category_show_major_tickmarks_ != nullptr) category_show_major_tickmarks_->Clear();
  _has_bits_[0] &= ~0x10000000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_show_major_tickmarks() {
  if (value_show_major_tickmarks_ != nullptr) value_show_major_tickmarks_->Clear();
  _has_bits_[0] &= ~0x20000000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_show_minimum_label() {
  if (value_show_minimum_label_ != nullptr) value_show_minimum_label_->Clear();
  _has_bits_[0] &= ~0x40000000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_show_minor_gridlines() {
  if (category_show_minor_gridlines_ != nullptr) category_show_minor_gridlines_->Clear();
  _has_bits_[0] &= ~0x80000000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_show_minor_gridlines() {
  if (value_show_minor_gridlines_ != nullptr) value_show_minor_gridlines_->Clear();
  _has_bits_[1] &= ~0x00000001u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_show_minor_tickmarks() {
  if (category_show_minor_tickmarks_ != nullptr) category_show_minor_tickmarks_->Clear();
  _has_bits_[1] &= ~0x00000002u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_show_minor_tickmarks() {
  if (value_show_minor_tickmarks_ != nullptr) value_show_minor_tickmarks_->Clear();
  _has_bits_[1] &= ~0x00000004u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_tickmark_location() {
  if (category_tickmark_location_ != nullptr) category_tickmark_location_->Clear();
  _has_bits_[1] &= ~0x00000008u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_tickmark_location() {
  if (value_tickmark_location_ != nullptr) value_tickmark_location_->Clear();
  _has_bits_[1] &= ~0x00000010u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_title_paragraph_style_index() {
  if (category_title_paragraph_style_index_ != nullptr) category_title_paragraph_style_index_->Clear();
  _has_bits_[1] &= ~0x00000020u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_default_title_paragraph_style_index() {
  if (default_title_paragraph_style_index_ != nullptr) default_title_paragraph_style_index_->Clear();
  _has_bits_[1] &= ~0x00000040u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_title_paragraph_style_index() {
  if (value_title_paragraph_style_index_ != nullptr) value_title_paragraph_style_index_->Clear();
  _has_bits_[1] &= ~0x00000080u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_vertical_spacing() {
  if (category_vertical_spacing_ != nullptr) category_vertical_spacing_->Clear();
  _has_bits_[1] &= ~0x00000100u;
}
ChartAxisStylePropertyChangeSetArchive::ChartAxisStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.ChartAxisStylePropertyChangeSetArchive)
}
ChartAxisStylePropertyChangeSetArchive::ChartAxisStylePropertyChangeSetArchive(const ChartAxisStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_category3d_gridline_opacity()) {
    category3d_gridline_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from.category3d_gridline_opacity_);
  } else {
    category3d_gridline_opacity_ = nullptr;
  }
  if (from._internal_has_value3d_gridline_opacity()) {
    value3d_gridline_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from.value3d_gridline_opacity_);
  } else {
    value3d_gridline_opacity_ = nullptr;
  }
  if (from._internal_has_category3d_gridline_stroke()) {
    category3d_gridline_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.category3d_gridline_stroke_);
  } else {
    category3d_gridline_stroke_ = nullptr;
  }
  if (from._internal_has_value3d_gridline_stroke()) {
    value3d_gridline_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.value3d_gridline_stroke_);
  } else {
    value3d_gridline_stroke_ = nullptr;
  }
  if (from._internal_has_category_horizontal_spacing()) {
    category_horizontal_spacing_ = new ::TSSSOS::SpecIntegerArchive(*from.category_horizontal_spacing_);
  } else {
    category_horizontal_spacing_ = nullptr;
  }
  if (from._internal_has_category_label_paragraph_style_index()) {
    category_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.category_label_paragraph_style_index_);
  } else {
    category_label_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_default_label_paragraph_style_index()) {
    default_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.default_label_paragraph_style_index_);
  } else {
    default_label_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_value_label_paragraph_style_index()) {
    value_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.value_label_paragraph_style_index_);
  } else {
    value_label_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_category_labels_orientation()) {
    category_labels_orientation_ = new ::TSSSOS::SpecDoubleArchive(*from.category_labels_orientation_);
  } else {
    category_labels_orientation_ = nullptr;
  }
  if (from._internal_has_default_labels_orientation()) {
    default_labels_orientation_ = new ::TSSSOS::SpecDoubleArchive(*from.default_labels_orientation_);
  } else {
    default_labels_orientation_ = nullptr;
  }
  if (from._internal_has_value_labels_orientation()) {
    value_labels_orientation_ = new ::TSSSOS::SpecDoubleArchive(*from.value_labels_orientation_);
  } else {
    value_labels_orientation_ = nullptr;
  }
  if (from._internal_has_category_major_gridline_opacity()) {
    category_major_gridline_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from.category_major_gridline_opacity_);
  } else {
    category_major_gridline_opacity_ = nullptr;
  }
  if (from._internal_has_value_major_gridline_opacity()) {
    value_major_gridline_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from.value_major_gridline_opacity_);
  } else {
    value_major_gridline_opacity_ = nullptr;
  }
  if (from._internal_has_category_major_gridline_shadow()) {
    category_major_gridline_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.category_major_gridline_shadow_);
  } else {
    category_major_gridline_shadow_ = nullptr;
  }
  if (from._internal_has_value_major_gridline_shadow()) {
    value_major_gridline_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.value_major_gridline_shadow_);
  } else {
    value_major_gridline_shadow_ = nullptr;
  }
  if (from._internal_has_category_major_gridline_stroke()) {
    category_major_gridline_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.category_major_gridline_stroke_);
  } else {
    category_major_gridline_stroke_ = nullptr;
  }
  if (from._internal_has_value_major_gridline_stroke()) {
    value_major_gridline_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.value_major_gridline_stroke_);
  } else {
    value_major_gridline_stroke_ = nullptr;
  }
  if (from._internal_has_category_minor_gridline_opacity()) {
    category_minor_gridline_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from.category_minor_gridline_opacity_);
  } else {
    category_minor_gridline_opacity_ = nullptr;
  }
  if (from._internal_has_value_minor_gridline_opacity()) {
    value_minor_gridline_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from.value_minor_gridline_opacity_);
  } else {
    value_minor_gridline_opacity_ = nullptr;
  }
  if (from._internal_has_category_minor_gridline_shadow()) {
    category_minor_gridline_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.category_minor_gridline_shadow_);
  } else {
    category_minor_gridline_shadow_ = nullptr;
  }
  if (from._internal_has_value_minor_gridline_shadow()) {
    value_minor_gridline_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.value_minor_gridline_shadow_);
  } else {
    value_minor_gridline_shadow_ = nullptr;
  }
  if (from._internal_has_category_minor_gridline_stroke()) {
    category_minor_gridline_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.category_minor_gridline_stroke_);
  } else {
    category_minor_gridline_stroke_ = nullptr;
  }
  if (from._internal_has_value_minor_gridline_stroke()) {
    value_minor_gridline_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.value_minor_gridline_stroke_);
  } else {
    value_minor_gridline_stroke_ = nullptr;
  }
  if (from._internal_has_category_show_axis()) {
    category_show_axis_ = new ::TSSSOS::SpecBoolArchive(*from.category_show_axis_);
  } else {
    category_show_axis_ = nullptr;
  }
  if (from._internal_has_value_show_axis()) {
    value_show_axis_ = new ::TSSSOS::SpecBoolArchive(*from.value_show_axis_);
  } else {
    value_show_axis_ = nullptr;
  }
  if (from._internal_has_category_show_last_label()) {
    category_show_last_label_ = new ::TSSSOS::SpecBoolArchive(*from.category_show_last_label_);
  } else {
    category_show_last_label_ = nullptr;
  }
  if (from._internal_has_category_show_major_gridlines()) {
    category_show_major_gridlines_ = new ::TSSSOS::SpecBoolArchive(*from.category_show_major_gridlines_);
  } else {
    category_show_major_gridlines_ = nullptr;
  }
  if (from._internal_has_value_show_major_gridlines()) {
    value_show_major_gridlines_ = new ::TSSSOS::SpecBoolArchive(*from.value_show_major_gridlines_);
  } else {
    value_show_major_gridlines_ = nullptr;
  }
  if (from._internal_has_category_show_major_tickmarks()) {
    category_show_major_tickmarks_ = new ::TSSSOS::SpecBoolArchive(*from.category_show_major_tickmarks_);
  } else {
    category_show_major_tickmarks_ = nullptr;
  }
  if (from._internal_has_value_show_major_tickmarks()) {
    value_show_major_tickmarks_ = new ::TSSSOS::SpecBoolArchive(*from.value_show_major_tickmarks_);
  } else {
    value_show_major_tickmarks_ = nullptr;
  }
  if (from._internal_has_value_show_minimum_label()) {
    value_show_minimum_label_ = new ::TSSSOS::SpecBoolArchive(*from.value_show_minimum_label_);
  } else {
    value_show_minimum_label_ = nullptr;
  }
  if (from._internal_has_category_show_minor_gridlines()) {
    category_show_minor_gridlines_ = new ::TSSSOS::SpecBoolArchive(*from.category_show_minor_gridlines_);
  } else {
    category_show_minor_gridlines_ = nullptr;
  }
  if (from._internal_has_value_show_minor_gridlines()) {
    value_show_minor_gridlines_ = new ::TSSSOS::SpecBoolArchive(*from.value_show_minor_gridlines_);
  } else {
    value_show_minor_gridlines_ = nullptr;
  }
  if (from._internal_has_category_show_minor_tickmarks()) {
    category_show_minor_tickmarks_ = new ::TSSSOS::SpecBoolArchive(*from.category_show_minor_tickmarks_);
  } else {
    category_show_minor_tickmarks_ = nullptr;
  }
  if (from._internal_has_value_show_minor_tickmarks()) {
    value_show_minor_tickmarks_ = new ::TSSSOS::SpecBoolArchive(*from.value_show_minor_tickmarks_);
  } else {
    value_show_minor_tickmarks_ = nullptr;
  }
  if (from._internal_has_category_tickmark_location()) {
    category_tickmark_location_ = new ::TSSSOS::SpecIntegerArchive(*from.category_tickmark_location_);
  } else {
    category_tickmark_location_ = nullptr;
  }
  if (from._internal_has_value_tickmark_location()) {
    value_tickmark_location_ = new ::TSSSOS::SpecIntegerArchive(*from.value_tickmark_location_);
  } else {
    value_tickmark_location_ = nullptr;
  }
  if (from._internal_has_category_title_paragraph_style_index()) {
    category_title_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.category_title_paragraph_style_index_);
  } else {
    category_title_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_default_title_paragraph_style_index()) {
    default_title_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.default_title_paragraph_style_index_);
  } else {
    default_title_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_value_title_paragraph_style_index()) {
    value_title_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.value_title_paragraph_style_index_);
  } else {
    value_title_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_category_vertical_spacing()) {
    category_vertical_spacing_ = new ::TSSSOS::SpecIntegerArchive(*from.category_vertical_spacing_);
  } else {
    category_vertical_spacing_ = nullptr;
  }
  ::memcpy(&category3d_gridline_opacity_undefined_, &from.category3d_gridline_opacity_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&category_vertical_spacing_undefined_) -
    reinterpret_cast<char*>(&category3d_gridline_opacity_undefined_)) + sizeof(category_vertical_spacing_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.ChartAxisStylePropertyChangeSetArchive)
}

void ChartAxisStylePropertyChangeSetArchive::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&category3d_gridline_opacity_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&category_vertical_spacing_undefined_) -
    reinterpret_cast<char*>(&category3d_gridline_opacity_)) + sizeof(category_vertical_spacing_undefined_));
}

ChartAxisStylePropertyChangeSetArchive::~ChartAxisStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.ChartAxisStylePropertyChangeSetArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChartAxisStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete category3d_gridline_opacity_;
  if (this != internal_default_instance()) delete value3d_gridline_opacity_;
  if (this != internal_default_instance()) delete category3d_gridline_stroke_;
  if (this != internal_default_instance()) delete value3d_gridline_stroke_;
  if (this != internal_default_instance()) delete category_horizontal_spacing_;
  if (this != internal_default_instance()) delete category_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete default_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete value_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete category_labels_orientation_;
  if (this != internal_default_instance()) delete default_labels_orientation_;
  if (this != internal_default_instance()) delete value_labels_orientation_;
  if (this != internal_default_instance()) delete category_major_gridline_opacity_;
  if (this != internal_default_instance()) delete value_major_gridline_opacity_;
  if (this != internal_default_instance()) delete category_major_gridline_shadow_;
  if (this != internal_default_instance()) delete value_major_gridline_shadow_;
  if (this != internal_default_instance()) delete category_major_gridline_stroke_;
  if (this != internal_default_instance()) delete value_major_gridline_stroke_;
  if (this != internal_default_instance()) delete category_minor_gridline_opacity_;
  if (this != internal_default_instance()) delete value_minor_gridline_opacity_;
  if (this != internal_default_instance()) delete category_minor_gridline_shadow_;
  if (this != internal_default_instance()) delete value_minor_gridline_shadow_;
  if (this != internal_default_instance()) delete category_minor_gridline_stroke_;
  if (this != internal_default_instance()) delete value_minor_gridline_stroke_;
  if (this != internal_default_instance()) delete category_show_axis_;
  if (this != internal_default_instance()) delete value_show_axis_;
  if (this != internal_default_instance()) delete category_show_last_label_;
  if (this != internal_default_instance()) delete category_show_major_gridlines_;
  if (this != internal_default_instance()) delete value_show_major_gridlines_;
  if (this != internal_default_instance()) delete category_show_major_tickmarks_;
  if (this != internal_default_instance()) delete value_show_major_tickmarks_;
  if (this != internal_default_instance()) delete value_show_minimum_label_;
  if (this != internal_default_instance()) delete category_show_minor_gridlines_;
  if (this != internal_default_instance()) delete value_show_minor_gridlines_;
  if (this != internal_default_instance()) delete category_show_minor_tickmarks_;
  if (this != internal_default_instance()) delete value_show_minor_tickmarks_;
  if (this != internal_default_instance()) delete category_tickmark_location_;
  if (this != internal_default_instance()) delete value_tickmark_location_;
  if (this != internal_default_instance()) delete category_title_paragraph_style_index_;
  if (this != internal_default_instance()) delete default_title_paragraph_style_index_;
  if (this != internal_default_instance()) delete value_title_paragraph_style_index_;
  if (this != internal_default_instance()) delete category_vertical_spacing_;
}

void ChartAxisStylePropertyChangeSetArchive::ArenaDtor(void* object) {
  ChartAxisStylePropertyChangeSetArchive* _this = reinterpret_cast< ChartAxisStylePropertyChangeSetArchive* >(object);
  (void)_this;
}
void ChartAxisStylePropertyChangeSetArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChartAxisStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ChartAxisStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.ChartAxisStylePropertyChangeSetArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(category3d_gridline_opacity_ != nullptr);
      category3d_gridline_opacity_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(value3d_gridline_opacity_ != nullptr);
      value3d_gridline_opacity_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(category3d_gridline_stroke_ != nullptr);
      category3d_gridline_stroke_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(value3d_gridline_stroke_ != nullptr);
      value3d_gridline_stroke_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(category_horizontal_spacing_ != nullptr);
      category_horizontal_spacing_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(category_label_paragraph_style_index_ != nullptr);
      category_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(default_label_paragraph_style_index_ != nullptr);
      default_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(value_label_paragraph_style_index_ != nullptr);
      value_label_paragraph_style_index_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(category_labels_orientation_ != nullptr);
      category_labels_orientation_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(default_labels_orientation_ != nullptr);
      default_labels_orientation_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(value_labels_orientation_ != nullptr);
      value_labels_orientation_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(category_major_gridline_opacity_ != nullptr);
      category_major_gridline_opacity_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(value_major_gridline_opacity_ != nullptr);
      value_major_gridline_opacity_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(category_major_gridline_shadow_ != nullptr);
      category_major_gridline_shadow_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(value_major_gridline_shadow_ != nullptr);
      value_major_gridline_shadow_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(category_major_gridline_stroke_ != nullptr);
      category_major_gridline_stroke_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(value_major_gridline_stroke_ != nullptr);
      value_major_gridline_stroke_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(category_minor_gridline_opacity_ != nullptr);
      category_minor_gridline_opacity_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(value_minor_gridline_opacity_ != nullptr);
      value_minor_gridline_opacity_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(category_minor_gridline_shadow_ != nullptr);
      category_minor_gridline_shadow_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(value_minor_gridline_shadow_ != nullptr);
      value_minor_gridline_shadow_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(category_minor_gridline_stroke_ != nullptr);
      category_minor_gridline_stroke_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(value_minor_gridline_stroke_ != nullptr);
      value_minor_gridline_stroke_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(category_show_axis_ != nullptr);
      category_show_axis_->Clear();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(value_show_axis_ != nullptr);
      value_show_axis_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(category_show_last_label_ != nullptr);
      category_show_last_label_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(category_show_major_gridlines_ != nullptr);
      category_show_major_gridlines_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(value_show_major_gridlines_ != nullptr);
      value_show_major_gridlines_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(category_show_major_tickmarks_ != nullptr);
      category_show_major_tickmarks_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(value_show_major_tickmarks_ != nullptr);
      value_show_major_tickmarks_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      GOOGLE_DCHECK(value_show_minimum_label_ != nullptr);
      value_show_minimum_label_->Clear();
    }
    if (cached_has_bits & 0x80000000u) {
      GOOGLE_DCHECK(category_show_minor_gridlines_ != nullptr);
      category_show_minor_gridlines_->Clear();
    }
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(value_show_minor_gridlines_ != nullptr);
      value_show_minor_gridlines_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(category_show_minor_tickmarks_ != nullptr);
      category_show_minor_tickmarks_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(value_show_minor_tickmarks_ != nullptr);
      value_show_minor_tickmarks_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(category_tickmark_location_ != nullptr);
      category_tickmark_location_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(value_tickmark_location_ != nullptr);
      value_tickmark_location_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(category_title_paragraph_style_index_ != nullptr);
      category_title_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(default_title_paragraph_style_index_ != nullptr);
      default_title_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(value_title_paragraph_style_index_ != nullptr);
      value_title_paragraph_style_index_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    GOOGLE_DCHECK(category_vertical_spacing_ != nullptr);
    category_vertical_spacing_->Clear();
  }
  if (cached_has_bits & 0x0000fe00u) {
    ::memset(&category3d_gridline_opacity_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_label_paragraph_style_index_undefined_) -
        reinterpret_cast<char*>(&category3d_gridline_opacity_undefined_)) + sizeof(default_label_paragraph_style_index_undefined_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&value_label_paragraph_style_index_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&value_major_gridline_shadow_undefined_) -
        reinterpret_cast<char*>(&value_label_paragraph_style_index_undefined_)) + sizeof(value_major_gridline_shadow_undefined_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&category_major_gridline_stroke_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&value_minor_gridline_stroke_undefined_) -
        reinterpret_cast<char*>(&category_major_gridline_stroke_undefined_)) + sizeof(value_minor_gridline_stroke_undefined_));
  }
  cached_has_bits = _has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&category_show_axis_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&value_show_minimum_label_undefined_) -
        reinterpret_cast<char*>(&category_show_axis_undefined_)) + sizeof(value_show_minimum_label_undefined_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&category_show_minor_gridlines_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_title_paragraph_style_index_undefined_) -
        reinterpret_cast<char*>(&category_show_minor_gridlines_undefined_)) + sizeof(default_title_paragraph_style_index_undefined_));
  }
  if (cached_has_bits & 0x00030000u) {
    ::memset(&value_title_paragraph_style_index_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&category_vertical_spacing_undefined_) -
        reinterpret_cast<char*>(&value_title_paragraph_style_index_undefined_)) + sizeof(category_vertical_spacing_undefined_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChartAxisStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSSSOS.SpecDoubleArchive category3d_gridline_opacity = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_category3d_gridline_opacity(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category3d_gridline_opacity_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_category3d_gridline_opacity_undefined(&_has_bits_);
          category3d_gridline_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive value3d_gridline_opacity = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_value3d_gridline_opacity(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value3d_gridline_opacity_undefined = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_value3d_gridline_opacity_undefined(&_has_bits_);
          value3d_gridline_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive category3d_gridline_stroke = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_category3d_gridline_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category3d_gridline_stroke_undefined = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_category3d_gridline_stroke_undefined(&_has_bits_);
          category3d_gridline_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive value3d_gridline_stroke = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_value3d_gridline_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value3d_gridline_stroke_undefined = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_value3d_gridline_stroke_undefined(&_has_bits_);
          value3d_gridline_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive category_horizontal_spacing = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_horizontal_spacing(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category_horizontal_spacing_undefined = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_category_horizontal_spacing_undefined(&_has_bits_);
          category_horizontal_spacing_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive category_label_paragraph_style_index = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category_label_paragraph_style_index_undefined = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_category_label_paragraph_style_index_undefined(&_has_bits_);
          category_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_label_paragraph_style_index_undefined = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_default_label_paragraph_style_index_undefined(&_has_bits_);
          default_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive value_label_paragraph_style_index = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value_label_paragraph_style_index_undefined = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_value_label_paragraph_style_index_undefined(&_has_bits_);
          value_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive category_labels_orientation = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_labels_orientation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category_labels_orientation_undefined = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_category_labels_orientation_undefined(&_has_bits_);
          category_labels_orientation_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_labels_orientation = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_labels_orientation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_labels_orientation_undefined = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_default_labels_orientation_undefined(&_has_bits_);
          default_labels_orientation_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive value_labels_orientation = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_labels_orientation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value_labels_orientation_undefined = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_value_labels_orientation_undefined(&_has_bits_);
          value_labels_orientation_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive category_major_gridline_opacity = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_major_gridline_opacity(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category_major_gridline_opacity_undefined = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_category_major_gridline_opacity_undefined(&_has_bits_);
          category_major_gridline_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive value_major_gridline_opacity = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_major_gridline_opacity(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value_major_gridline_opacity_undefined = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_value_major_gridline_opacity_undefined(&_has_bits_);
          value_major_gridline_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive category_major_gridline_shadow = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_major_gridline_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category_major_gridline_shadow_undefined = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_category_major_gridline_shadow_undefined(&_has_bits_);
          category_major_gridline_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive value_major_gridline_shadow = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_major_gridline_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value_major_gridline_shadow_undefined = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_value_major_gridline_shadow_undefined(&_has_bits_);
          value_major_gridline_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive category_major_gridline_stroke = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_major_gridline_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category_major_gridline_stroke_undefined = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          _Internal::set_has_category_major_gridline_stroke_undefined(&_has_bits_);
          category_major_gridline_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive value_major_gridline_stroke = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_major_gridline_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value_major_gridline_stroke_undefined = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_value_major_gridline_stroke_undefined(&_has_bits_);
          value_major_gridline_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive category_minor_gridline_opacity = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_minor_gridline_opacity(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category_minor_gridline_opacity_undefined = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_category_minor_gridline_opacity_undefined(&_has_bits_);
          category_minor_gridline_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive value_minor_gridline_opacity = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_minor_gridline_opacity(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value_minor_gridline_opacity_undefined = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_value_minor_gridline_opacity_undefined(&_has_bits_);
          value_minor_gridline_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive category_minor_gridline_shadow = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_minor_gridline_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category_minor_gridline_shadow_undefined = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_category_minor_gridline_shadow_undefined(&_has_bits_);
          category_minor_gridline_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive value_minor_gridline_shadow = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_minor_gridline_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value_minor_gridline_shadow_undefined = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_value_minor_gridline_shadow_undefined(&_has_bits_);
          value_minor_gridline_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive category_minor_gridline_stroke = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_minor_gridline_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category_minor_gridline_stroke_undefined = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_category_minor_gridline_stroke_undefined(&_has_bits_);
          category_minor_gridline_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive value_minor_gridline_stroke = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_minor_gridline_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value_minor_gridline_stroke_undefined = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_value_minor_gridline_stroke_undefined(&_has_bits_);
          value_minor_gridline_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive category_show_axis = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_show_axis(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category_show_axis_undefined = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_category_show_axis_undefined(&_has_bits_);
          category_show_axis_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive value_show_axis = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_show_axis(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value_show_axis_undefined = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_value_show_axis_undefined(&_has_bits_);
          value_show_axis_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive category_show_last_label = 51;
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_show_last_label(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category_show_last_label_undefined = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_category_show_last_label_undefined(&_has_bits_);
          category_show_last_label_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive category_show_major_gridlines = 53;
      case 53:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_show_major_gridlines(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category_show_major_gridlines_undefined = 54;
      case 54:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_category_show_major_gridlines_undefined(&_has_bits_);
          category_show_major_gridlines_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive value_show_major_gridlines = 55;
      case 55:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_show_major_gridlines(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value_show_major_gridlines_undefined = 56;
      case 56:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_value_show_major_gridlines_undefined(&_has_bits_);
          value_show_major_gridlines_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive category_show_major_tickmarks = 57;
      case 57:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_show_major_tickmarks(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category_show_major_tickmarks_undefined = 58;
      case 58:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_category_show_major_tickmarks_undefined(&_has_bits_);
          category_show_major_tickmarks_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive value_show_major_tickmarks = 59;
      case 59:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_show_major_tickmarks(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value_show_major_tickmarks_undefined = 60;
      case 60:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_value_show_major_tickmarks_undefined(&_has_bits_);
          value_show_major_tickmarks_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive value_show_minimum_label = 61;
      case 61:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_show_minimum_label(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value_show_minimum_label_undefined = 62;
      case 62:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_value_show_minimum_label_undefined(&_has_bits_);
          value_show_minimum_label_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive category_show_minor_gridlines = 63;
      case 63:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_show_minor_gridlines(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category_show_minor_gridlines_undefined = 64;
      case 64:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          _Internal::set_has_category_show_minor_gridlines_undefined(&_has_bits_);
          category_show_minor_gridlines_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive value_show_minor_gridlines = 65;
      case 65:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_show_minor_gridlines(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value_show_minor_gridlines_undefined = 66;
      case 66:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_value_show_minor_gridlines_undefined(&_has_bits_);
          value_show_minor_gridlines_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive category_show_minor_tickmarks = 67;
      case 67:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_show_minor_tickmarks(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category_show_minor_tickmarks_undefined = 68;
      case 68:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_category_show_minor_tickmarks_undefined(&_has_bits_);
          category_show_minor_tickmarks_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive value_show_minor_tickmarks = 69;
      case 69:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_show_minor_tickmarks(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value_show_minor_tickmarks_undefined = 70;
      case 70:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_value_show_minor_tickmarks_undefined(&_has_bits_);
          value_show_minor_tickmarks_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive category_tickmark_location = 71;
      case 71:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_tickmark_location(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category_tickmark_location_undefined = 72;
      case 72:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_category_tickmark_location_undefined(&_has_bits_);
          category_tickmark_location_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive value_tickmark_location = 73;
      case 73:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_tickmark_location(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value_tickmark_location_undefined = 74;
      case 74:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_value_tickmark_location_undefined(&_has_bits_);
          value_tickmark_location_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive category_title_paragraph_style_index = 75;
      case 75:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_title_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category_title_paragraph_style_index_undefined = 76;
      case 76:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_category_title_paragraph_style_index_undefined(&_has_bits_);
          category_title_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_title_paragraph_style_index = 77;
      case 77:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_title_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_title_paragraph_style_index_undefined = 78;
      case 78:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_default_title_paragraph_style_index_undefined(&_has_bits_);
          default_title_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive value_title_paragraph_style_index = 79;
      case 79:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_title_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool value_title_paragraph_style_index_undefined = 80;
      case 80:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_value_title_paragraph_style_index_undefined(&_has_bits_);
          value_title_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive category_vertical_spacing = 81;
      case 81:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_vertical_spacing(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool category_vertical_spacing_undefined = 82;
      case 82:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_category_vertical_spacing_undefined(&_has_bits_);
          category_vertical_spacing_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChartAxisStylePropertyChangeSetArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.ChartAxisStylePropertyChangeSetArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive category3d_gridline_opacity = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::category3d_gridline_opacity(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool category3d_gridline_opacity_undefined = 2;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_category3d_gridline_opacity_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive value3d_gridline_opacity = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::value3d_gridline_opacity(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool value3d_gridline_opacity_undefined = 4;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_value3d_gridline_opacity_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecStrokeArchive category3d_gridline_stroke = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::category3d_gridline_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool category3d_gridline_stroke_undefined = 6;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_category3d_gridline_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecStrokeArchive value3d_gridline_stroke = 7;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::value3d_gridline_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool value3d_gridline_stroke_undefined = 8;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_value3d_gridline_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive category_horizontal_spacing = 9;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::category_horizontal_spacing(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool category_horizontal_spacing_undefined = 10;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_category_horizontal_spacing_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive category_label_paragraph_style_index = 11;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::category_label_paragraph_style_index(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool category_label_paragraph_style_index_undefined = 12;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->_internal_category_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 13;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::default_label_paragraph_style_index(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_label_paragraph_style_index_undefined = 14;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(14, this->_internal_default_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive value_label_paragraph_style_index = 15;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        15, _Internal::value_label_paragraph_style_index(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool value_label_paragraph_style_index_undefined = 16;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(16, this->_internal_value_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive category_labels_orientation = 17;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        17, _Internal::category_labels_orientation(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool category_labels_orientation_undefined = 18;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(18, this->_internal_category_labels_orientation_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_labels_orientation = 19;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        19, _Internal::default_labels_orientation(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_labels_orientation_undefined = 20;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(20, this->_internal_default_labels_orientation_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive value_labels_orientation = 21;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        21, _Internal::value_labels_orientation(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool value_labels_orientation_undefined = 22;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(22, this->_internal_value_labels_orientation_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive category_major_gridline_opacity = 23;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        23, _Internal::category_major_gridline_opacity(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool category_major_gridline_opacity_undefined = 24;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(24, this->_internal_category_major_gridline_opacity_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive value_major_gridline_opacity = 25;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        25, _Internal::value_major_gridline_opacity(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool value_major_gridline_opacity_undefined = 26;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(26, this->_internal_value_major_gridline_opacity_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecShadowArchive category_major_gridline_shadow = 27;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        27, _Internal::category_major_gridline_shadow(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool category_major_gridline_shadow_undefined = 28;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(28, this->_internal_category_major_gridline_shadow_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecShadowArchive value_major_gridline_shadow = 29;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        29, _Internal::value_major_gridline_shadow(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool value_major_gridline_shadow_undefined = 30;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(30, this->_internal_value_major_gridline_shadow_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecStrokeArchive category_major_gridline_stroke = 31;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        31, _Internal::category_major_gridline_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool category_major_gridline_stroke_undefined = 32;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(32, this->_internal_category_major_gridline_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecStrokeArchive value_major_gridline_stroke = 33;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        33, _Internal::value_major_gridline_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool value_major_gridline_stroke_undefined = 34;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(34, this->_internal_value_major_gridline_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive category_minor_gridline_opacity = 35;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        35, _Internal::category_minor_gridline_opacity(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool category_minor_gridline_opacity_undefined = 36;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(36, this->_internal_category_minor_gridline_opacity_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive value_minor_gridline_opacity = 37;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        37, _Internal::value_minor_gridline_opacity(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool value_minor_gridline_opacity_undefined = 38;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(38, this->_internal_value_minor_gridline_opacity_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecShadowArchive category_minor_gridline_shadow = 39;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        39, _Internal::category_minor_gridline_shadow(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool category_minor_gridline_shadow_undefined = 40;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(40, this->_internal_category_minor_gridline_shadow_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecShadowArchive value_minor_gridline_shadow = 41;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        41, _Internal::value_minor_gridline_shadow(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool value_minor_gridline_shadow_undefined = 42;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(42, this->_internal_value_minor_gridline_shadow_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecStrokeArchive category_minor_gridline_stroke = 43;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        43, _Internal::category_minor_gridline_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool category_minor_gridline_stroke_undefined = 44;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(44, this->_internal_category_minor_gridline_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecStrokeArchive value_minor_gridline_stroke = 45;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        45, _Internal::value_minor_gridline_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool value_minor_gridline_stroke_undefined = 46;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(46, this->_internal_value_minor_gridline_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive category_show_axis = 47;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        47, _Internal::category_show_axis(this), target, stream);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool category_show_axis_undefined = 48;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(48, this->_internal_category_show_axis_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive value_show_axis = 49;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        49, _Internal::value_show_axis(this), target, stream);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool value_show_axis_undefined = 50;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(50, this->_internal_value_show_axis_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive category_show_last_label = 51;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        51, _Internal::category_show_last_label(this), target, stream);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool category_show_last_label_undefined = 52;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(52, this->_internal_category_show_last_label_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive category_show_major_gridlines = 53;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        53, _Internal::category_show_major_gridlines(this), target, stream);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool category_show_major_gridlines_undefined = 54;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(54, this->_internal_category_show_major_gridlines_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive value_show_major_gridlines = 55;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        55, _Internal::value_show_major_gridlines(this), target, stream);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool value_show_major_gridlines_undefined = 56;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(56, this->_internal_value_show_major_gridlines_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive category_show_major_tickmarks = 57;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        57, _Internal::category_show_major_tickmarks(this), target, stream);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool category_show_major_tickmarks_undefined = 58;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(58, this->_internal_category_show_major_tickmarks_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive value_show_major_tickmarks = 59;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        59, _Internal::value_show_major_tickmarks(this), target, stream);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool value_show_major_tickmarks_undefined = 60;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(60, this->_internal_value_show_major_tickmarks_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive value_show_minimum_label = 61;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        61, _Internal::value_show_minimum_label(this), target, stream);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool value_show_minimum_label_undefined = 62;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(62, this->_internal_value_show_minimum_label_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive category_show_minor_gridlines = 63;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        63, _Internal::category_show_minor_gridlines(this), target, stream);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool category_show_minor_gridlines_undefined = 64;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(64, this->_internal_category_show_minor_gridlines_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive value_show_minor_gridlines = 65;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        65, _Internal::value_show_minor_gridlines(this), target, stream);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool value_show_minor_gridlines_undefined = 66;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(66, this->_internal_value_show_minor_gridlines_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive category_show_minor_tickmarks = 67;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        67, _Internal::category_show_minor_tickmarks(this), target, stream);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool category_show_minor_tickmarks_undefined = 68;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(68, this->_internal_category_show_minor_tickmarks_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive value_show_minor_tickmarks = 69;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        69, _Internal::value_show_minor_tickmarks(this), target, stream);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool value_show_minor_tickmarks_undefined = 70;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(70, this->_internal_value_show_minor_tickmarks_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive category_tickmark_location = 71;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        71, _Internal::category_tickmark_location(this), target, stream);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool category_tickmark_location_undefined = 72;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(72, this->_internal_category_tickmark_location_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive value_tickmark_location = 73;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        73, _Internal::value_tickmark_location(this), target, stream);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool value_tickmark_location_undefined = 74;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(74, this->_internal_value_tickmark_location_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive category_title_paragraph_style_index = 75;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        75, _Internal::category_title_paragraph_style_index(this), target, stream);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool category_title_paragraph_style_index_undefined = 76;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(76, this->_internal_category_title_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive default_title_paragraph_style_index = 77;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        77, _Internal::default_title_paragraph_style_index(this), target, stream);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool default_title_paragraph_style_index_undefined = 78;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(78, this->_internal_default_title_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive value_title_paragraph_style_index = 79;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        79, _Internal::value_title_paragraph_style_index(this), target, stream);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool value_title_paragraph_style_index_undefined = 80;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(80, this->_internal_value_title_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive category_vertical_spacing = 81;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        81, _Internal::category_vertical_spacing(this), target, stream);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool category_vertical_spacing_undefined = 82;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(82, this->_internal_category_vertical_spacing_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.ChartAxisStylePropertyChangeSetArchive)
  return target;
}

size_t ChartAxisStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.ChartAxisStylePropertyChangeSetArchive)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSSSOS.SpecDoubleArchive category3d_gridline_opacity = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category3d_gridline_opacity_);
    }

    // optional .TSSSOS.SpecDoubleArchive value3d_gridline_opacity = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value3d_gridline_opacity_);
    }

    // optional .TSDSOS.SpecStrokeArchive category3d_gridline_stroke = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category3d_gridline_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive value3d_gridline_stroke = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value3d_gridline_stroke_);
    }

    // optional .TSSSOS.SpecIntegerArchive category_horizontal_spacing = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category_horizontal_spacing_);
    }

    // optional .TSSSOS.SpecIntegerArchive category_label_paragraph_style_index = 11;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 13;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive value_label_paragraph_style_index = 15;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_label_paragraph_style_index_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSSSOS.SpecDoubleArchive category_labels_orientation = 17;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category_labels_orientation_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_labels_orientation = 19;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_labels_orientation_);
    }

    // optional .TSSSOS.SpecDoubleArchive value_labels_orientation = 21;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_labels_orientation_);
    }

    // optional .TSSSOS.SpecDoubleArchive category_major_gridline_opacity = 23;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category_major_gridline_opacity_);
    }

    // optional .TSSSOS.SpecDoubleArchive value_major_gridline_opacity = 25;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_major_gridline_opacity_);
    }

    // optional .TSDSOS.SpecShadowArchive category_major_gridline_shadow = 27;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category_major_gridline_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive value_major_gridline_shadow = 29;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_major_gridline_shadow_);
    }

    // optional .TSDSOS.SpecStrokeArchive category_major_gridline_stroke = 31;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category_major_gridline_stroke_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSDSOS.SpecStrokeArchive value_major_gridline_stroke = 33;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_major_gridline_stroke_);
    }

    // optional .TSSSOS.SpecDoubleArchive category_minor_gridline_opacity = 35;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category_minor_gridline_opacity_);
    }

    // optional .TSSSOS.SpecDoubleArchive value_minor_gridline_opacity = 37;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_minor_gridline_opacity_);
    }

    // optional .TSDSOS.SpecShadowArchive category_minor_gridline_shadow = 39;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category_minor_gridline_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive value_minor_gridline_shadow = 41;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_minor_gridline_shadow_);
    }

    // optional .TSDSOS.SpecStrokeArchive category_minor_gridline_stroke = 43;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category_minor_gridline_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive value_minor_gridline_stroke = 45;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_minor_gridline_stroke_);
    }

    // optional .TSSSOS.SpecBoolArchive category_show_axis = 47;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category_show_axis_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .TSSSOS.SpecBoolArchive value_show_axis = 49;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_show_axis_);
    }

    // optional .TSSSOS.SpecBoolArchive category_show_last_label = 51;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category_show_last_label_);
    }

    // optional .TSSSOS.SpecBoolArchive category_show_major_gridlines = 53;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category_show_major_gridlines_);
    }

    // optional .TSSSOS.SpecBoolArchive value_show_major_gridlines = 55;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_show_major_gridlines_);
    }

    // optional .TSSSOS.SpecBoolArchive category_show_major_tickmarks = 57;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category_show_major_tickmarks_);
    }

    // optional .TSSSOS.SpecBoolArchive value_show_major_tickmarks = 59;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_show_major_tickmarks_);
    }

    // optional .TSSSOS.SpecBoolArchive value_show_minimum_label = 61;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_show_minimum_label_);
    }

    // optional .TSSSOS.SpecBoolArchive category_show_minor_gridlines = 63;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category_show_minor_gridlines_);
    }

  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSSSOS.SpecBoolArchive value_show_minor_gridlines = 65;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_show_minor_gridlines_);
    }

    // optional .TSSSOS.SpecBoolArchive category_show_minor_tickmarks = 67;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category_show_minor_tickmarks_);
    }

    // optional .TSSSOS.SpecBoolArchive value_show_minor_tickmarks = 69;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_show_minor_tickmarks_);
    }

    // optional .TSSSOS.SpecIntegerArchive category_tickmark_location = 71;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category_tickmark_location_);
    }

    // optional .TSSSOS.SpecIntegerArchive value_tickmark_location = 73;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_tickmark_location_);
    }

    // optional .TSSSOS.SpecIntegerArchive category_title_paragraph_style_index = 75;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category_title_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_title_paragraph_style_index = 77;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_title_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive value_title_paragraph_style_index = 79;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_title_paragraph_style_index_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSSSOS.SpecIntegerArchive category_vertical_spacing = 81;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *category_vertical_spacing_);
    }

    // optional bool category3d_gridline_opacity_undefined = 2;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 1;
    }

    // optional bool value3d_gridline_opacity_undefined = 4;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 1;
    }

    // optional bool category3d_gridline_stroke_undefined = 6;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 1;
    }

    // optional bool value3d_gridline_stroke_undefined = 8;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 + 1;
    }

    // optional bool category_horizontal_spacing_undefined = 10;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 + 1;
    }

    // optional bool category_label_paragraph_style_index_undefined = 12;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 + 1;
    }

    // optional bool default_label_paragraph_style_index_undefined = 14;
    if (cached_has_bits & 0x00008000u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool value_label_paragraph_style_index_undefined = 16;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool category_labels_orientation_undefined = 18;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional bool default_labels_orientation_undefined = 20;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool value_labels_orientation_undefined = 22;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

    // optional bool category_major_gridline_opacity_undefined = 24;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

    // optional bool value_major_gridline_opacity_undefined = 26;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool category_major_gridline_shadow_undefined = 28;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional bool value_major_gridline_shadow_undefined = 30;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool category_major_gridline_stroke_undefined = 32;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional bool value_major_gridline_stroke_undefined = 34;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + 1;
    }

    // optional bool category_minor_gridline_opacity_undefined = 36;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + 1;
    }

    // optional bool value_minor_gridline_opacity_undefined = 38;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + 1;
    }

    // optional bool category_minor_gridline_shadow_undefined = 40;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + 1;
    }

    // optional bool value_minor_gridline_shadow_undefined = 42;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + 1;
    }

    // optional bool category_minor_gridline_stroke_undefined = 44;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + 1;
    }

    // optional bool value_minor_gridline_stroke_undefined = 46;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + 1;
    }

  }
  cached_has_bits = _has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool category_show_axis_undefined = 48;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 1;
    }

    // optional bool value_show_axis_undefined = 50;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 1;
    }

    // optional bool category_show_last_label_undefined = 52;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool category_show_major_gridlines_undefined = 54;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

    // optional bool value_show_major_gridlines_undefined = 56;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional bool category_show_major_tickmarks_undefined = 58;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional bool value_show_major_tickmarks_undefined = 60;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool value_show_minimum_label_undefined = 62;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool category_show_minor_gridlines_undefined = 64;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool value_show_minor_gridlines_undefined = 66;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool category_show_minor_tickmarks_undefined = 68;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool value_show_minor_tickmarks_undefined = 70;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool category_tickmark_location_undefined = 72;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional bool value_tickmark_location_undefined = 74;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

    // optional bool category_title_paragraph_style_index_undefined = 76;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional bool default_title_paragraph_style_index_undefined = 78;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00030000u) {
    // optional bool value_title_paragraph_style_index_undefined = 80;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool category_vertical_spacing_undefined = 82;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChartAxisStylePropertyChangeSetArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSCHSOS.ChartAxisStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const ChartAxisStylePropertyChangeSetArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChartAxisStylePropertyChangeSetArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSCHSOS.ChartAxisStylePropertyChangeSetArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSCHSOS.ChartAxisStylePropertyChangeSetArchive)
    MergeFrom(*source);
  }
}

void ChartAxisStylePropertyChangeSetArchive::MergeFrom(const ChartAxisStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.ChartAxisStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_category3d_gridline_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_category3d_gridline_opacity());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_value3d_gridline_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_value3d_gridline_opacity());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_category3d_gridline_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_category3d_gridline_stroke());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_value3d_gridline_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_value3d_gridline_stroke());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_category_horizontal_spacing()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_category_horizontal_spacing());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_category_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_category_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_default_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_value_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_value_label_paragraph_style_index());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_category_labels_orientation()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_category_labels_orientation());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_default_labels_orientation()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default_labels_orientation());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_value_labels_orientation()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_value_labels_orientation());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_category_major_gridline_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_category_major_gridline_opacity());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_value_major_gridline_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_value_major_gridline_opacity());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_category_major_gridline_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_category_major_gridline_shadow());
    }
    if (cached_has_bits & 0x00004000u) {
      _internal_mutable_value_major_gridline_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_value_major_gridline_shadow());
    }
    if (cached_has_bits & 0x00008000u) {
      _internal_mutable_category_major_gridline_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_category_major_gridline_stroke());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _internal_mutable_value_major_gridline_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_value_major_gridline_stroke());
    }
    if (cached_has_bits & 0x00020000u) {
      _internal_mutable_category_minor_gridline_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_category_minor_gridline_opacity());
    }
    if (cached_has_bits & 0x00040000u) {
      _internal_mutable_value_minor_gridline_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_value_minor_gridline_opacity());
    }
    if (cached_has_bits & 0x00080000u) {
      _internal_mutable_category_minor_gridline_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_category_minor_gridline_shadow());
    }
    if (cached_has_bits & 0x00100000u) {
      _internal_mutable_value_minor_gridline_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_value_minor_gridline_shadow());
    }
    if (cached_has_bits & 0x00200000u) {
      _internal_mutable_category_minor_gridline_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_category_minor_gridline_stroke());
    }
    if (cached_has_bits & 0x00400000u) {
      _internal_mutable_value_minor_gridline_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_value_minor_gridline_stroke());
    }
    if (cached_has_bits & 0x00800000u) {
      _internal_mutable_category_show_axis()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_category_show_axis());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _internal_mutable_value_show_axis()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_value_show_axis());
    }
    if (cached_has_bits & 0x02000000u) {
      _internal_mutable_category_show_last_label()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_category_show_last_label());
    }
    if (cached_has_bits & 0x04000000u) {
      _internal_mutable_category_show_major_gridlines()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_category_show_major_gridlines());
    }
    if (cached_has_bits & 0x08000000u) {
      _internal_mutable_value_show_major_gridlines()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_value_show_major_gridlines());
    }
    if (cached_has_bits & 0x10000000u) {
      _internal_mutable_category_show_major_tickmarks()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_category_show_major_tickmarks());
    }
    if (cached_has_bits & 0x20000000u) {
      _internal_mutable_value_show_major_tickmarks()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_value_show_major_tickmarks());
    }
    if (cached_has_bits & 0x40000000u) {
      _internal_mutable_value_show_minimum_label()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_value_show_minimum_label());
    }
    if (cached_has_bits & 0x80000000u) {
      _internal_mutable_category_show_minor_gridlines()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_category_show_minor_gridlines());
    }
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_value_show_minor_gridlines()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_value_show_minor_gridlines());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_category_show_minor_tickmarks()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_category_show_minor_tickmarks());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_value_show_minor_tickmarks()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_value_show_minor_tickmarks());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_category_tickmark_location()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_category_tickmark_location());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_value_tickmark_location()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_value_tickmark_location());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_category_title_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_category_title_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_default_title_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_title_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_value_title_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_value_title_paragraph_style_index());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_category_vertical_spacing()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_category_vertical_spacing());
    }
    if (cached_has_bits & 0x00000200u) {
      category3d_gridline_opacity_undefined_ = from.category3d_gridline_opacity_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      value3d_gridline_opacity_undefined_ = from.value3d_gridline_opacity_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      category3d_gridline_stroke_undefined_ = from.category3d_gridline_stroke_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      value3d_gridline_stroke_undefined_ = from.value3d_gridline_stroke_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      category_horizontal_spacing_undefined_ = from.category_horizontal_spacing_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      category_label_paragraph_style_index_undefined_ = from.category_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      default_label_paragraph_style_index_undefined_ = from.default_label_paragraph_style_index_undefined_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      value_label_paragraph_style_index_undefined_ = from.value_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      category_labels_orientation_undefined_ = from.category_labels_orientation_undefined_;
    }
    if (cached_has_bits & 0x00040000u) {
      default_labels_orientation_undefined_ = from.default_labels_orientation_undefined_;
    }
    if (cached_has_bits & 0x00080000u) {
      value_labels_orientation_undefined_ = from.value_labels_orientation_undefined_;
    }
    if (cached_has_bits & 0x00100000u) {
      category_major_gridline_opacity_undefined_ = from.category_major_gridline_opacity_undefined_;
    }
    if (cached_has_bits & 0x00200000u) {
      value_major_gridline_opacity_undefined_ = from.value_major_gridline_opacity_undefined_;
    }
    if (cached_has_bits & 0x00400000u) {
      category_major_gridline_shadow_undefined_ = from.category_major_gridline_shadow_undefined_;
    }
    if (cached_has_bits & 0x00800000u) {
      value_major_gridline_shadow_undefined_ = from.value_major_gridline_shadow_undefined_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      category_major_gridline_stroke_undefined_ = from.category_major_gridline_stroke_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      value_major_gridline_stroke_undefined_ = from.value_major_gridline_stroke_undefined_;
    }
    if (cached_has_bits & 0x04000000u) {
      category_minor_gridline_opacity_undefined_ = from.category_minor_gridline_opacity_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      value_minor_gridline_opacity_undefined_ = from.value_minor_gridline_opacity_undefined_;
    }
    if (cached_has_bits & 0x10000000u) {
      category_minor_gridline_shadow_undefined_ = from.category_minor_gridline_shadow_undefined_;
    }
    if (cached_has_bits & 0x20000000u) {
      value_minor_gridline_shadow_undefined_ = from.value_minor_gridline_shadow_undefined_;
    }
    if (cached_has_bits & 0x40000000u) {
      category_minor_gridline_stroke_undefined_ = from.category_minor_gridline_stroke_undefined_;
    }
    if (cached_has_bits & 0x80000000u) {
      value_minor_gridline_stroke_undefined_ = from.value_minor_gridline_stroke_undefined_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      category_show_axis_undefined_ = from.category_show_axis_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      value_show_axis_undefined_ = from.value_show_axis_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      category_show_last_label_undefined_ = from.category_show_last_label_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      category_show_major_gridlines_undefined_ = from.category_show_major_gridlines_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      value_show_major_gridlines_undefined_ = from.value_show_major_gridlines_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      category_show_major_tickmarks_undefined_ = from.category_show_major_tickmarks_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      value_show_major_tickmarks_undefined_ = from.value_show_major_tickmarks_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      value_show_minimum_label_undefined_ = from.value_show_minimum_label_undefined_;
    }
    _has_bits_[2] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      category_show_minor_gridlines_undefined_ = from.category_show_minor_gridlines_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      value_show_minor_gridlines_undefined_ = from.value_show_minor_gridlines_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      category_show_minor_tickmarks_undefined_ = from.category_show_minor_tickmarks_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      value_show_minor_tickmarks_undefined_ = from.value_show_minor_tickmarks_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      category_tickmark_location_undefined_ = from.category_tickmark_location_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      value_tickmark_location_undefined_ = from.value_tickmark_location_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      category_title_paragraph_style_index_undefined_ = from.category_title_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      default_title_paragraph_style_index_undefined_ = from.default_title_paragraph_style_index_undefined_;
    }
    _has_bits_[2] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00030000u) {
    if (cached_has_bits & 0x00010000u) {
      value_title_paragraph_style_index_undefined_ = from.value_title_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      category_vertical_spacing_undefined_ = from.category_vertical_spacing_undefined_;
    }
    _has_bits_[2] |= cached_has_bits;
  }
}

void ChartAxisStylePropertyChangeSetArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSCHSOS.ChartAxisStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChartAxisStylePropertyChangeSetArchive::CopyFrom(const ChartAxisStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.ChartAxisStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChartAxisStylePropertyChangeSetArchive::IsInitialized() const {
  if (_internal_has_category3d_gridline_opacity()) {
    if (!category3d_gridline_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_value3d_gridline_opacity()) {
    if (!value3d_gridline_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_category3d_gridline_stroke()) {
    if (!category3d_gridline_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_value3d_gridline_stroke()) {
    if (!value3d_gridline_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_category_horizontal_spacing()) {
    if (!category_horizontal_spacing_->IsInitialized()) return false;
  }
  if (_internal_has_category_label_paragraph_style_index()) {
    if (!category_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_default_label_paragraph_style_index()) {
    if (!default_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_value_label_paragraph_style_index()) {
    if (!value_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_category_labels_orientation()) {
    if (!category_labels_orientation_->IsInitialized()) return false;
  }
  if (_internal_has_default_labels_orientation()) {
    if (!default_labels_orientation_->IsInitialized()) return false;
  }
  if (_internal_has_value_labels_orientation()) {
    if (!value_labels_orientation_->IsInitialized()) return false;
  }
  if (_internal_has_category_major_gridline_opacity()) {
    if (!category_major_gridline_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_value_major_gridline_opacity()) {
    if (!value_major_gridline_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_category_major_gridline_shadow()) {
    if (!category_major_gridline_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_value_major_gridline_shadow()) {
    if (!value_major_gridline_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_category_major_gridline_stroke()) {
    if (!category_major_gridline_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_value_major_gridline_stroke()) {
    if (!value_major_gridline_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_category_minor_gridline_opacity()) {
    if (!category_minor_gridline_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_value_minor_gridline_opacity()) {
    if (!value_minor_gridline_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_category_minor_gridline_shadow()) {
    if (!category_minor_gridline_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_value_minor_gridline_shadow()) {
    if (!value_minor_gridline_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_category_minor_gridline_stroke()) {
    if (!category_minor_gridline_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_value_minor_gridline_stroke()) {
    if (!value_minor_gridline_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_category_show_axis()) {
    if (!category_show_axis_->IsInitialized()) return false;
  }
  if (_internal_has_value_show_axis()) {
    if (!value_show_axis_->IsInitialized()) return false;
  }
  if (_internal_has_category_show_last_label()) {
    if (!category_show_last_label_->IsInitialized()) return false;
  }
  if (_internal_has_category_show_major_gridlines()) {
    if (!category_show_major_gridlines_->IsInitialized()) return false;
  }
  if (_internal_has_value_show_major_gridlines()) {
    if (!value_show_major_gridlines_->IsInitialized()) return false;
  }
  if (_internal_has_category_show_major_tickmarks()) {
    if (!category_show_major_tickmarks_->IsInitialized()) return false;
  }
  if (_internal_has_value_show_major_tickmarks()) {
    if (!value_show_major_tickmarks_->IsInitialized()) return false;
  }
  if (_internal_has_value_show_minimum_label()) {
    if (!value_show_minimum_label_->IsInitialized()) return false;
  }
  if (_internal_has_category_show_minor_gridlines()) {
    if (!category_show_minor_gridlines_->IsInitialized()) return false;
  }
  if (_internal_has_value_show_minor_gridlines()) {
    if (!value_show_minor_gridlines_->IsInitialized()) return false;
  }
  if (_internal_has_category_show_minor_tickmarks()) {
    if (!category_show_minor_tickmarks_->IsInitialized()) return false;
  }
  if (_internal_has_value_show_minor_tickmarks()) {
    if (!value_show_minor_tickmarks_->IsInitialized()) return false;
  }
  if (_internal_has_category_tickmark_location()) {
    if (!category_tickmark_location_->IsInitialized()) return false;
  }
  if (_internal_has_value_tickmark_location()) {
    if (!value_tickmark_location_->IsInitialized()) return false;
  }
  if (_internal_has_category_title_paragraph_style_index()) {
    if (!category_title_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_default_title_paragraph_style_index()) {
    if (!default_title_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_value_title_paragraph_style_index()) {
    if (!value_title_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_category_vertical_spacing()) {
    if (!category_vertical_spacing_->IsInitialized()) return false;
  }
  return true;
}

void ChartAxisStylePropertyChangeSetArchive::InternalSwap(ChartAxisStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  swap(_has_bits_[2], other->_has_bits_[2]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChartAxisStylePropertyChangeSetArchive, category_vertical_spacing_undefined_)
      + sizeof(ChartAxisStylePropertyChangeSetArchive::category_vertical_spacing_undefined_)
      - PROTOBUF_FIELD_OFFSET(ChartAxisStylePropertyChangeSetArchive, category3d_gridline_opacity_)>(
          reinterpret_cast<char*>(&category3d_gridline_opacity_),
          reinterpret_cast<char*>(&other->category3d_gridline_opacity_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChartAxisStylePropertyChangeSetArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[13]);
}

// ===================================================================

class ChartLegendNonStylePropertyChangeSetArchive::_Internal {
 public:
};

ChartLegendNonStylePropertyChangeSetArchive::ChartLegendNonStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.ChartLegendNonStylePropertyChangeSetArchive)
}
ChartLegendNonStylePropertyChangeSetArchive::ChartLegendNonStylePropertyChangeSetArchive(const ChartLegendNonStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.ChartLegendNonStylePropertyChangeSetArchive)
}

void ChartLegendNonStylePropertyChangeSetArchive::SharedCtor() {
}

ChartLegendNonStylePropertyChangeSetArchive::~ChartLegendNonStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.ChartLegendNonStylePropertyChangeSetArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChartLegendNonStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ChartLegendNonStylePropertyChangeSetArchive::ArenaDtor(void* object) {
  ChartLegendNonStylePropertyChangeSetArchive* _this = reinterpret_cast< ChartLegendNonStylePropertyChangeSetArchive* >(object);
  (void)_this;
}
void ChartLegendNonStylePropertyChangeSetArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChartLegendNonStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ChartLegendNonStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.ChartLegendNonStylePropertyChangeSetArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChartLegendNonStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChartLegendNonStylePropertyChangeSetArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.ChartLegendNonStylePropertyChangeSetArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.ChartLegendNonStylePropertyChangeSetArchive)
  return target;
}

size_t ChartLegendNonStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.ChartLegendNonStylePropertyChangeSetArchive)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChartLegendNonStylePropertyChangeSetArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSCHSOS.ChartLegendNonStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const ChartLegendNonStylePropertyChangeSetArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChartLegendNonStylePropertyChangeSetArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSCHSOS.ChartLegendNonStylePropertyChangeSetArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSCHSOS.ChartLegendNonStylePropertyChangeSetArchive)
    MergeFrom(*source);
  }
}

void ChartLegendNonStylePropertyChangeSetArchive::MergeFrom(const ChartLegendNonStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.ChartLegendNonStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ChartLegendNonStylePropertyChangeSetArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSCHSOS.ChartLegendNonStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChartLegendNonStylePropertyChangeSetArchive::CopyFrom(const ChartLegendNonStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.ChartLegendNonStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChartLegendNonStylePropertyChangeSetArchive::IsInitialized() const {
  return true;
}

void ChartLegendNonStylePropertyChangeSetArchive::InternalSwap(ChartLegendNonStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ChartLegendNonStylePropertyChangeSetArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[14]);
}

// ===================================================================

class ChartLegendStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<ChartLegendStylePropertyChangeSetArchive>()._has_bits_);
  static const ::TSDSOS::SpecFillArchive& default_fill(const ChartLegendStylePropertyChangeSetArchive* msg);
  static void set_has_default_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_default_fill_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_label_paragraph_style_index(const ChartLegendStylePropertyChangeSetArchive* msg);
  static void set_has_default_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_default_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_opacity(const ChartLegendStylePropertyChangeSetArchive* msg);
  static void set_has_default_opacity(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_default_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::TSDSOS::SpecShadowArchive& default_shadow(const ChartLegendStylePropertyChangeSetArchive* msg);
  static void set_has_default_shadow(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_default_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::TSDSOS::SpecStrokeArchive& default_stroke(const ChartLegendStylePropertyChangeSetArchive* msg);
  static void set_has_default_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_default_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
};

const ::TSDSOS::SpecFillArchive&
ChartLegendStylePropertyChangeSetArchive::_Internal::default_fill(const ChartLegendStylePropertyChangeSetArchive* msg) {
  return *msg->default_fill_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartLegendStylePropertyChangeSetArchive::_Internal::default_label_paragraph_style_index(const ChartLegendStylePropertyChangeSetArchive* msg) {
  return *msg->default_label_paragraph_style_index_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartLegendStylePropertyChangeSetArchive::_Internal::default_opacity(const ChartLegendStylePropertyChangeSetArchive* msg) {
  return *msg->default_opacity_;
}
const ::TSDSOS::SpecShadowArchive&
ChartLegendStylePropertyChangeSetArchive::_Internal::default_shadow(const ChartLegendStylePropertyChangeSetArchive* msg) {
  return *msg->default_shadow_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartLegendStylePropertyChangeSetArchive::_Internal::default_stroke(const ChartLegendStylePropertyChangeSetArchive* msg) {
  return *msg->default_stroke_;
}
void ChartLegendStylePropertyChangeSetArchive::clear_default_fill() {
  if (default_fill_ != nullptr) default_fill_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void ChartLegendStylePropertyChangeSetArchive::clear_default_label_paragraph_style_index() {
  if (default_label_paragraph_style_index_ != nullptr) default_label_paragraph_style_index_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void ChartLegendStylePropertyChangeSetArchive::clear_default_opacity() {
  if (default_opacity_ != nullptr) default_opacity_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void ChartLegendStylePropertyChangeSetArchive::clear_default_shadow() {
  if (default_shadow_ != nullptr) default_shadow_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
void ChartLegendStylePropertyChangeSetArchive::clear_default_stroke() {
  if (default_stroke_ != nullptr) default_stroke_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
ChartLegendStylePropertyChangeSetArchive::ChartLegendStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.ChartLegendStylePropertyChangeSetArchive)
}
ChartLegendStylePropertyChangeSetArchive::ChartLegendStylePropertyChangeSetArchive(const ChartLegendStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_default_fill()) {
    default_fill_ = new ::TSDSOS::SpecFillArchive(*from.default_fill_);
  } else {
    default_fill_ = nullptr;
  }
  if (from._internal_has_default_label_paragraph_style_index()) {
    default_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.default_label_paragraph_style_index_);
  } else {
    default_label_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_default_opacity()) {
    default_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from.default_opacity_);
  } else {
    default_opacity_ = nullptr;
  }
  if (from._internal_has_default_shadow()) {
    default_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.default_shadow_);
  } else {
    default_shadow_ = nullptr;
  }
  if (from._internal_has_default_stroke()) {
    default_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.default_stroke_);
  } else {
    default_stroke_ = nullptr;
  }
  ::memcpy(&default_fill_undefined_, &from.default_fill_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&default_stroke_undefined_) -
    reinterpret_cast<char*>(&default_fill_undefined_)) + sizeof(default_stroke_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.ChartLegendStylePropertyChangeSetArchive)
}

void ChartLegendStylePropertyChangeSetArchive::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&default_fill_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&default_stroke_undefined_) -
    reinterpret_cast<char*>(&default_fill_)) + sizeof(default_stroke_undefined_));
}

ChartLegendStylePropertyChangeSetArchive::~ChartLegendStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.ChartLegendStylePropertyChangeSetArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChartLegendStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete default_fill_;
  if (this != internal_default_instance()) delete default_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete default_opacity_;
  if (this != internal_default_instance()) delete default_shadow_;
  if (this != internal_default_instance()) delete default_stroke_;
}

void ChartLegendStylePropertyChangeSetArchive::ArenaDtor(void* object) {
  ChartLegendStylePropertyChangeSetArchive* _this = reinterpret_cast< ChartLegendStylePropertyChangeSetArchive* >(object);
  (void)_this;
}
void ChartLegendStylePropertyChangeSetArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChartLegendStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ChartLegendStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.ChartLegendStylePropertyChangeSetArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(default_fill_ != nullptr);
      default_fill_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(default_label_paragraph_style_index_ != nullptr);
      default_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(default_opacity_ != nullptr);
      default_opacity_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(default_shadow_ != nullptr);
      default_shadow_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(default_stroke_ != nullptr);
      default_stroke_->Clear();
    }
  }
  if (cached_has_bits & 0x000000e0u) {
    ::memset(&default_fill_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_opacity_undefined_) -
        reinterpret_cast<char*>(&default_fill_undefined_)) + sizeof(default_opacity_undefined_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&default_shadow_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_stroke_undefined_) -
        reinterpret_cast<char*>(&default_shadow_undefined_)) + sizeof(default_stroke_undefined_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChartLegendStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSDSOS.SpecFillArchive default_fill = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_fill_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_default_fill_undefined(&has_bits);
          default_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_label_paragraph_style_index_undefined = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_default_label_paragraph_style_index_undefined(&has_bits);
          default_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_opacity = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_opacity(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_opacity_undefined = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_default_opacity_undefined(&has_bits);
          default_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive default_shadow = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_shadow_undefined = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_default_shadow_undefined(&has_bits);
          default_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive default_stroke = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_stroke_undefined = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_default_stroke_undefined(&has_bits);
          default_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChartLegendStylePropertyChangeSetArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.ChartLegendStylePropertyChangeSetArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecFillArchive default_fill = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::default_fill(this), target, stream);
  }

  // optional bool default_fill_undefined = 2;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_default_fill_undefined(), target);
  }

  // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::default_label_paragraph_style_index(this), target, stream);
  }

  // optional bool default_label_paragraph_style_index_undefined = 4;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_default_label_paragraph_style_index_undefined(), target);
  }

  // optional .TSSSOS.SpecDoubleArchive default_opacity = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::default_opacity(this), target, stream);
  }

  // optional bool default_opacity_undefined = 6;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_default_opacity_undefined(), target);
  }

  // optional .TSDSOS.SpecShadowArchive default_shadow = 7;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::default_shadow(this), target, stream);
  }

  // optional bool default_shadow_undefined = 8;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_default_shadow_undefined(), target);
  }

  // optional .TSDSOS.SpecStrokeArchive default_stroke = 9;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::default_stroke(this), target, stream);
  }

  // optional bool default_stroke_undefined = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_default_stroke_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.ChartLegendStylePropertyChangeSetArchive)
  return target;
}

size_t ChartLegendStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.ChartLegendStylePropertyChangeSetArchive)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSDSOS.SpecFillArchive default_fill = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_fill_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_opacity = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_opacity_);
    }

    // optional .TSDSOS.SpecShadowArchive default_shadow = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_shadow_);
    }

    // optional .TSDSOS.SpecStrokeArchive default_stroke = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_stroke_);
    }

    // optional bool default_fill_undefined = 2;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional bool default_label_paragraph_style_index_undefined = 4;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

    // optional bool default_opacity_undefined = 6;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional bool default_shadow_undefined = 8;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + 1;
    }

    // optional bool default_stroke_undefined = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChartLegendStylePropertyChangeSetArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSCHSOS.ChartLegendStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const ChartLegendStylePropertyChangeSetArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChartLegendStylePropertyChangeSetArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSCHSOS.ChartLegendStylePropertyChangeSetArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSCHSOS.ChartLegendStylePropertyChangeSetArchive)
    MergeFrom(*source);
  }
}

void ChartLegendStylePropertyChangeSetArchive::MergeFrom(const ChartLegendStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.ChartLegendStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_default_fill()->::TSDSOS::SpecFillArchive::MergeFrom(from._internal_default_fill());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_default_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_default_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default_opacity());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_default_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_default_shadow());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_default_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_default_stroke());
    }
    if (cached_has_bits & 0x00000020u) {
      default_fill_undefined_ = from.default_fill_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      default_label_paragraph_style_index_undefined_ = from.default_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      default_opacity_undefined_ = from.default_opacity_undefined_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      default_shadow_undefined_ = from.default_shadow_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      default_stroke_undefined_ = from.default_stroke_undefined_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChartLegendStylePropertyChangeSetArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSCHSOS.ChartLegendStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChartLegendStylePropertyChangeSetArchive::CopyFrom(const ChartLegendStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.ChartLegendStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChartLegendStylePropertyChangeSetArchive::IsInitialized() const {
  if (_internal_has_default_fill()) {
    if (!default_fill_->IsInitialized()) return false;
  }
  if (_internal_has_default_label_paragraph_style_index()) {
    if (!default_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_default_opacity()) {
    if (!default_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_default_shadow()) {
    if (!default_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_default_stroke()) {
    if (!default_stroke_->IsInitialized()) return false;
  }
  return true;
}

void ChartLegendStylePropertyChangeSetArchive::InternalSwap(ChartLegendStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChartLegendStylePropertyChangeSetArchive, default_stroke_undefined_)
      + sizeof(ChartLegendStylePropertyChangeSetArchive::default_stroke_undefined_)
      - PROTOBUF_FIELD_OFFSET(ChartLegendStylePropertyChangeSetArchive, default_fill_)>(
          reinterpret_cast<char*>(&default_fill_),
          reinterpret_cast<char*>(&other->default_fill_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChartLegendStylePropertyChangeSetArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[15]);
}

// ===================================================================

class ChartNonStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<ChartNonStylePropertyChangeSetArchive>()._has_bits_);
  static const ::TSSSOS::SpecIntegerArchive& default3d_bar_shape(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default3d_bar_shape(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_default3d_bar_shape_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static const ::TSSSOS::SpecBoolArchive& default3d_bevel_edges(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default3d_bevel_edges(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_default3d_bevel_edges_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default3d_inter_set_depth_gap(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default3d_inter_set_depth_gap(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_default3d_inter_set_depth_gap_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static const ::TSCHSOS::SpecChart3dVectorArchive& default3d_rotation(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default3d_rotation(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_default3d_rotation_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static const ::TSCHSOS::SpecChart3dVectorArchive& area3d_scale(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_area3d_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_area3d_scale_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static const ::TSCHSOS::SpecChart3dVectorArchive& bar3d_scale(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_bar3d_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_bar3d_scale_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static const ::TSCHSOS::SpecChart3dVectorArchive& column3d_scale(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_column3d_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_column3d_scale_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static const ::TSCHSOS::SpecChart3dVectorArchive& default3d_scale(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default3d_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_default3d_scale_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static const ::TSCHSOS::SpecChart3dVectorArchive& line3d_scale(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_line3d_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_line3d_scale_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static const ::TSCHSOS::SpecChart3dVectorArchive& pie3d_scale(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie3d_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_pie3d_scale_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 256u;
  }
  static const ::TSCHSOS::SpecChart3dVectorArchive& default3d_viewport(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default3d_viewport(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_default3d_viewport_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 512u;
  }
  static const ::TSSSOS::SpecIntegerArchive& area_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_area_callout_line_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_area_callout_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1024u;
  }
  static const ::TSSSOS::SpecIntegerArchive& bar_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_bar_callout_line_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_bar_callout_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2048u;
  }
  static const ::TSSSOS::SpecIntegerArchive& bubble_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_callout_line_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_bubble_callout_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4096u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_callout_line_type(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_default_callout_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8192u;
  }
  static const ::TSSSOS::SpecIntegerArchive& line_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_line_callout_line_type(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_line_callout_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 16384u;
  }
  static const ::TSSSOS::SpecIntegerArchive& pie_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie_callout_line_type(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_pie_callout_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 32768u;
  }
  static const ::TSSSOS::SpecIntegerArchive& scatter_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_callout_line_type(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_scatter_callout_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 65536u;
  }
  static const ::TSSSOS::SpecIntegerArchive& stacked_area_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_stacked_area_callout_line_type(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_stacked_area_callout_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 131072u;
  }
  static const ::TSSSOS::SpecIntegerArchive& stacked_bar_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_stacked_bar_callout_line_type(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_stacked_bar_callout_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 262144u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 524288u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1048576u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_data_set_name_location(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_data_set_name_location(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_default_data_set_name_location_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2097152u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_donut_place_title_at_center(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_donut_place_title_at_center(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_default_donut_place_title_at_center_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4194304u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_inner_radius(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_inner_radius(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_default_inner_radius_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8388608u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_multi_data_control_type(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_multi_data_control_type(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_default_multi_data_control_type_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 16777216u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_pie_start_angle(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_pie_start_angle(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_default_pie_start_angle_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 33554432u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_legend(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_legend(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static void set_has_default_show_legend_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 67108864u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_title(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_title(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static void set_has_default_show_title_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 134217728u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_skip_hidden_data(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_skip_hidden_data(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static void set_has_default_skip_hidden_data_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 268435456u;
  }
  static const ::TSSSOS::SpecStringArchive& default_title(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_title(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static void set_has_default_title_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 536870912u;
  }
};

const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default3d_bar_shape(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->default3d_bar_shape_;
}
const ::TSSSOS::SpecBoolArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default3d_bevel_edges(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->default3d_bevel_edges_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default3d_inter_set_depth_gap(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->default3d_inter_set_depth_gap_;
}
const ::TSCHSOS::SpecChart3dVectorArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default3d_rotation(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->default3d_rotation_;
}
const ::TSCHSOS::SpecChart3dVectorArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::area3d_scale(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->area3d_scale_;
}
const ::TSCHSOS::SpecChart3dVectorArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::bar3d_scale(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->bar3d_scale_;
}
const ::TSCHSOS::SpecChart3dVectorArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::column3d_scale(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->column3d_scale_;
}
const ::TSCHSOS::SpecChart3dVectorArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default3d_scale(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->default3d_scale_;
}
const ::TSCHSOS::SpecChart3dVectorArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::line3d_scale(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->line3d_scale_;
}
const ::TSCHSOS::SpecChart3dVectorArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::pie3d_scale(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->pie3d_scale_;
}
const ::TSCHSOS::SpecChart3dVectorArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default3d_viewport(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->default3d_viewport_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::area_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->area_callout_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::bar_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->bar_callout_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::bubble_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->bubble_callout_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_callout_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::line_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->line_callout_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::pie_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->pie_callout_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::scatter_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->scatter_callout_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::stacked_area_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->stacked_area_callout_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::stacked_bar_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->stacked_bar_callout_line_type_;
}
const ::TSSSOS::SpecBoolArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_data_set_name_location(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_data_set_name_location_;
}
const ::TSSSOS::SpecBoolArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_donut_place_title_at_center(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_donut_place_title_at_center_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_inner_radius(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_inner_radius_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_multi_data_control_type(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_multi_data_control_type_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_pie_start_angle(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_pie_start_angle_;
}
const ::TSSSOS::SpecBoolArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_show_legend(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_show_legend_;
}
const ::TSSSOS::SpecBoolArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_show_title(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_show_title_;
}
const ::TSSSOS::SpecBoolArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_skip_hidden_data(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_skip_hidden_data_;
}
const ::TSSSOS::SpecStringArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_title(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_title_;
}
void ChartNonStylePropertyChangeSetArchive::clear_default3d_bar_shape() {
  if (default3d_bar_shape_ != nullptr) default3d_bar_shape_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default3d_bevel_edges() {
  if (default3d_bevel_edges_ != nullptr) default3d_bevel_edges_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default3d_inter_set_depth_gap() {
  if (default3d_inter_set_depth_gap_ != nullptr) default3d_inter_set_depth_gap_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void ChartNonStylePropertyChangeSetArchive::clear_area_callout_line_type() {
  if (area_callout_line_type_ != nullptr) area_callout_line_type_->Clear();
  _has_bits_[0] &= ~0x00000800u;
}
void ChartNonStylePropertyChangeSetArchive::clear_bar_callout_line_type() {
  if (bar_callout_line_type_ != nullptr) bar_callout_line_type_->Clear();
  _has_bits_[0] &= ~0x00001000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_bubble_callout_line_type() {
  if (bubble_callout_line_type_ != nullptr) bubble_callout_line_type_->Clear();
  _has_bits_[0] &= ~0x00002000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_callout_line_type() {
  if (default_callout_line_type_ != nullptr) default_callout_line_type_->Clear();
  _has_bits_[0] &= ~0x00004000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_line_callout_line_type() {
  if (line_callout_line_type_ != nullptr) line_callout_line_type_->Clear();
  _has_bits_[0] &= ~0x00008000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_pie_callout_line_type() {
  if (pie_callout_line_type_ != nullptr) pie_callout_line_type_->Clear();
  _has_bits_[0] &= ~0x00010000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_scatter_callout_line_type() {
  if (scatter_callout_line_type_ != nullptr) scatter_callout_line_type_->Clear();
  _has_bits_[0] &= ~0x00020000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_stacked_area_callout_line_type() {
  if (stacked_area_callout_line_type_ != nullptr) stacked_area_callout_line_type_->Clear();
  _has_bits_[0] &= ~0x00040000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_stacked_bar_callout_line_type() {
  if (stacked_bar_callout_line_type_ != nullptr) stacked_bar_callout_line_type_->Clear();
  _has_bits_[0] &= ~0x00080000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only() {
  if (default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_ != nullptr) default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_->Clear();
  _has_bits_[0] &= ~0x00100000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius() {
  if (default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_ != nullptr) default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_->Clear();
  _has_bits_[0] &= ~0x00200000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_data_set_name_location() {
  if (default_data_set_name_location_ != nullptr) default_data_set_name_location_->Clear();
  _has_bits_[0] &= ~0x00400000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_donut_place_title_at_center() {
  if (default_donut_place_title_at_center_ != nullptr) default_donut_place_title_at_center_->Clear();
  _has_bits_[0] &= ~0x00800000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_inner_radius() {
  if (default_inner_radius_ != nullptr) default_inner_radius_->Clear();
  _has_bits_[0] &= ~0x01000000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_multi_data_control_type() {
  if (default_multi_data_control_type_ != nullptr) default_multi_data_control_type_->Clear();
  _has_bits_[0] &= ~0x02000000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_pie_start_angle() {
  if (default_pie_start_angle_ != nullptr) default_pie_start_angle_->Clear();
  _has_bits_[0] &= ~0x04000000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_show_legend() {
  if (default_show_legend_ != nullptr) default_show_legend_->Clear();
  _has_bits_[0] &= ~0x08000000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_show_title() {
  if (default_show_title_ != nullptr) default_show_title_->Clear();
  _has_bits_[0] &= ~0x10000000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_skip_hidden_data() {
  if (default_skip_hidden_data_ != nullptr) default_skip_hidden_data_->Clear();
  _has_bits_[0] &= ~0x20000000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_title() {
  if (default_title_ != nullptr) default_title_->Clear();
  _has_bits_[0] &= ~0x40000000u;
}
ChartNonStylePropertyChangeSetArchive::ChartNonStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.ChartNonStylePropertyChangeSetArchive)
}
ChartNonStylePropertyChangeSetArchive::ChartNonStylePropertyChangeSetArchive(const ChartNonStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_default3d_bar_shape()) {
    default3d_bar_shape_ = new ::TSSSOS::SpecIntegerArchive(*from.default3d_bar_shape_);
  } else {
    default3d_bar_shape_ = nullptr;
  }
  if (from._internal_has_default3d_bevel_edges()) {
    default3d_bevel_edges_ = new ::TSSSOS::SpecBoolArchive(*from.default3d_bevel_edges_);
  } else {
    default3d_bevel_edges_ = nullptr;
  }
  if (from._internal_has_default3d_inter_set_depth_gap()) {
    default3d_inter_set_depth_gap_ = new ::TSSSOS::SpecDoubleArchive(*from.default3d_inter_set_depth_gap_);
  } else {
    default3d_inter_set_depth_gap_ = nullptr;
  }
  if (from._internal_has_default3d_rotation()) {
    default3d_rotation_ = new ::TSCHSOS::SpecChart3dVectorArchive(*from.default3d_rotation_);
  } else {
    default3d_rotation_ = nullptr;
  }
  if (from._internal_has_area3d_scale()) {
    area3d_scale_ = new ::TSCHSOS::SpecChart3dVectorArchive(*from.area3d_scale_);
  } else {
    area3d_scale_ = nullptr;
  }
  if (from._internal_has_bar3d_scale()) {
    bar3d_scale_ = new ::TSCHSOS::SpecChart3dVectorArchive(*from.bar3d_scale_);
  } else {
    bar3d_scale_ = nullptr;
  }
  if (from._internal_has_column3d_scale()) {
    column3d_scale_ = new ::TSCHSOS::SpecChart3dVectorArchive(*from.column3d_scale_);
  } else {
    column3d_scale_ = nullptr;
  }
  if (from._internal_has_default3d_scale()) {
    default3d_scale_ = new ::TSCHSOS::SpecChart3dVectorArchive(*from.default3d_scale_);
  } else {
    default3d_scale_ = nullptr;
  }
  if (from._internal_has_line3d_scale()) {
    line3d_scale_ = new ::TSCHSOS::SpecChart3dVectorArchive(*from.line3d_scale_);
  } else {
    line3d_scale_ = nullptr;
  }
  if (from._internal_has_pie3d_scale()) {
    pie3d_scale_ = new ::TSCHSOS::SpecChart3dVectorArchive(*from.pie3d_scale_);
  } else {
    pie3d_scale_ = nullptr;
  }
  if (from._internal_has_default3d_viewport()) {
    default3d_viewport_ = new ::TSCHSOS::SpecChart3dVectorArchive(*from.default3d_viewport_);
  } else {
    default3d_viewport_ = nullptr;
  }
  if (from._internal_has_area_callout_line_type()) {
    area_callout_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from.area_callout_line_type_);
  } else {
    area_callout_line_type_ = nullptr;
  }
  if (from._internal_has_bar_callout_line_type()) {
    bar_callout_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from.bar_callout_line_type_);
  } else {
    bar_callout_line_type_ = nullptr;
  }
  if (from._internal_has_bubble_callout_line_type()) {
    bubble_callout_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from.bubble_callout_line_type_);
  } else {
    bubble_callout_line_type_ = nullptr;
  }
  if (from._internal_has_default_callout_line_type()) {
    default_callout_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from.default_callout_line_type_);
  } else {
    default_callout_line_type_ = nullptr;
  }
  if (from._internal_has_line_callout_line_type()) {
    line_callout_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from.line_callout_line_type_);
  } else {
    line_callout_line_type_ = nullptr;
  }
  if (from._internal_has_pie_callout_line_type()) {
    pie_callout_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from.pie_callout_line_type_);
  } else {
    pie_callout_line_type_ = nullptr;
  }
  if (from._internal_has_scatter_callout_line_type()) {
    scatter_callout_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from.scatter_callout_line_type_);
  } else {
    scatter_callout_line_type_ = nullptr;
  }
  if (from._internal_has_stacked_area_callout_line_type()) {
    stacked_area_callout_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from.stacked_area_callout_line_type_);
  } else {
    stacked_area_callout_line_type_ = nullptr;
  }
  if (from._internal_has_stacked_bar_callout_line_type()) {
    stacked_bar_callout_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from.stacked_bar_callout_line_type_);
  } else {
    stacked_bar_callout_line_type_ = nullptr;
  }
  if (from._internal_has_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only()) {
    default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_ = new ::TSSSOS::SpecBoolArchive(*from.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_);
  } else {
    default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_ = nullptr;
  }
  if (from._internal_has_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius()) {
    default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_ = new ::TSSSOS::SpecDoubleArchive(*from.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_);
  } else {
    default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_ = nullptr;
  }
  if (from._internal_has_default_data_set_name_location()) {
    default_data_set_name_location_ = new ::TSSSOS::SpecIntegerArchive(*from.default_data_set_name_location_);
  } else {
    default_data_set_name_location_ = nullptr;
  }
  if (from._internal_has_default_donut_place_title_at_center()) {
    default_donut_place_title_at_center_ = new ::TSSSOS::SpecBoolArchive(*from.default_donut_place_title_at_center_);
  } else {
    default_donut_place_title_at_center_ = nullptr;
  }
  if (from._internal_has_default_inner_radius()) {
    default_inner_radius_ = new ::TSSSOS::SpecDoubleArchive(*from.default_inner_radius_);
  } else {
    default_inner_radius_ = nullptr;
  }
  if (from._internal_has_default_multi_data_control_type()) {
    default_multi_data_control_type_ = new ::TSSSOS::SpecIntegerArchive(*from.default_multi_data_control_type_);
  } else {
    default_multi_data_control_type_ = nullptr;
  }
  if (from._internal_has_default_pie_start_angle()) {
    default_pie_start_angle_ = new ::TSSSOS::SpecDoubleArchive(*from.default_pie_start_angle_);
  } else {
    default_pie_start_angle_ = nullptr;
  }
  if (from._internal_has_default_show_legend()) {
    default_show_legend_ = new ::TSSSOS::SpecBoolArchive(*from.default_show_legend_);
  } else {
    default_show_legend_ = nullptr;
  }
  if (from._internal_has_default_show_title()) {
    default_show_title_ = new ::TSSSOS::SpecBoolArchive(*from.default_show_title_);
  } else {
    default_show_title_ = nullptr;
  }
  if (from._internal_has_default_skip_hidden_data()) {
    default_skip_hidden_data_ = new ::TSSSOS::SpecBoolArchive(*from.default_skip_hidden_data_);
  } else {
    default_skip_hidden_data_ = nullptr;
  }
  if (from._internal_has_default_title()) {
    default_title_ = new ::TSSSOS::SpecStringArchive(*from.default_title_);
  } else {
    default_title_ = nullptr;
  }
  ::memcpy(&default3d_bar_shape_undefined_, &from.default3d_bar_shape_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&default_title_undefined_) -
    reinterpret_cast<char*>(&default3d_bar_shape_undefined_)) + sizeof(default_title_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.ChartNonStylePropertyChangeSetArchive)
}

void ChartNonStylePropertyChangeSetArchive::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&default3d_bar_shape_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&default_title_undefined_) -
    reinterpret_cast<char*>(&default3d_bar_shape_)) + sizeof(default_title_undefined_));
}

ChartNonStylePropertyChangeSetArchive::~ChartNonStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.ChartNonStylePropertyChangeSetArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChartNonStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete default3d_bar_shape_;
  if (this != internal_default_instance()) delete default3d_bevel_edges_;
  if (this != internal_default_instance()) delete default3d_inter_set_depth_gap_;
  if (this != internal_default_instance()) delete default3d_rotation_;
  if (this != internal_default_instance()) delete area3d_scale_;
  if (this != internal_default_instance()) delete bar3d_scale_;
  if (this != internal_default_instance()) delete column3d_scale_;
  if (this != internal_default_instance()) delete default3d_scale_;
  if (this != internal_default_instance()) delete line3d_scale_;
  if (this != internal_default_instance()) delete pie3d_scale_;
  if (this != internal_default_instance()) delete default3d_viewport_;
  if (this != internal_default_instance()) delete area_callout_line_type_;
  if (this != internal_default_instance()) delete bar_callout_line_type_;
  if (this != internal_default_instance()) delete bubble_callout_line_type_;
  if (this != internal_default_instance()) delete default_callout_line_type_;
  if (this != internal_default_instance()) delete line_callout_line_type_;
  if (this != internal_default_instance()) delete pie_callout_line_type_;
  if (this != internal_default_instance()) delete scatter_callout_line_type_;
  if (this != internal_default_instance()) delete stacked_area_callout_line_type_;
  if (this != internal_default_instance()) delete stacked_bar_callout_line_type_;
  if (this != internal_default_instance()) delete default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_;
  if (this != internal_default_instance()) delete default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_;
  if (this != internal_default_instance()) delete default_data_set_name_location_;
  if (this != internal_default_instance()) delete default_donut_place_title_at_center_;
  if (this != internal_default_instance()) delete default_inner_radius_;
  if (this != internal_default_instance()) delete default_multi_data_control_type_;
  if (this != internal_default_instance()) delete default_pie_start_angle_;
  if (this != internal_default_instance()) delete default_show_legend_;
  if (this != internal_default_instance()) delete default_show_title_;
  if (this != internal_default_instance()) delete default_skip_hidden_data_;
  if (this != internal_default_instance()) delete default_title_;
}

void ChartNonStylePropertyChangeSetArchive::ArenaDtor(void* object) {
  ChartNonStylePropertyChangeSetArchive* _this = reinterpret_cast< ChartNonStylePropertyChangeSetArchive* >(object);
  (void)_this;
}
void ChartNonStylePropertyChangeSetArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChartNonStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ChartNonStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.ChartNonStylePropertyChangeSetArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(default3d_bar_shape_ != nullptr);
      default3d_bar_shape_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(default3d_bevel_edges_ != nullptr);
      default3d_bevel_edges_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(default3d_inter_set_depth_gap_ != nullptr);
      default3d_inter_set_depth_gap_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(default3d_rotation_ != nullptr);
      default3d_rotation_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(area3d_scale_ != nullptr);
      area3d_scale_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(bar3d_scale_ != nullptr);
      bar3d_scale_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(column3d_scale_ != nullptr);
      column3d_scale_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(default3d_scale_ != nullptr);
      default3d_scale_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(line3d_scale_ != nullptr);
      line3d_scale_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(pie3d_scale_ != nullptr);
      pie3d_scale_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(default3d_viewport_ != nullptr);
      default3d_viewport_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(area_callout_line_type_ != nullptr);
      area_callout_line_type_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(bar_callout_line_type_ != nullptr);
      bar_callout_line_type_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(bubble_callout_line_type_ != nullptr);
      bubble_callout_line_type_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(default_callout_line_type_ != nullptr);
      default_callout_line_type_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(line_callout_line_type_ != nullptr);
      line_callout_line_type_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(pie_callout_line_type_ != nullptr);
      pie_callout_line_type_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(scatter_callout_line_type_ != nullptr);
      scatter_callout_line_type_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(stacked_area_callout_line_type_ != nullptr);
      stacked_area_callout_line_type_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(stacked_bar_callout_line_type_ != nullptr);
      stacked_bar_callout_line_type_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_ != nullptr);
      default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_ != nullptr);
      default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(default_data_set_name_location_ != nullptr);
      default_data_set_name_location_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(default_donut_place_title_at_center_ != nullptr);
      default_donut_place_title_at_center_->Clear();
    }
  }
  if (cached_has_bits & 0x7f000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(default_inner_radius_ != nullptr);
      default_inner_radius_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(default_multi_data_control_type_ != nullptr);
      default_multi_data_control_type_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(default_pie_start_angle_ != nullptr);
      default_pie_start_angle_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(default_show_legend_ != nullptr);
      default_show_legend_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(default_show_title_ != nullptr);
      default_show_title_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(default_skip_hidden_data_ != nullptr);
      default_skip_hidden_data_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      GOOGLE_DCHECK(default_title_ != nullptr);
      default_title_->Clear();
    }
  }
  default3d_bar_shape_undefined_ = false;
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&default3d_bevel_edges_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&line3d_scale_undefined_) -
        reinterpret_cast<char*>(&default3d_bevel_edges_undefined_)) + sizeof(line3d_scale_undefined_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&pie3d_scale_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pie_callout_line_type_undefined_) -
        reinterpret_cast<char*>(&pie3d_scale_undefined_)) + sizeof(pie_callout_line_type_undefined_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&scatter_callout_line_type_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_inner_radius_undefined_) -
        reinterpret_cast<char*>(&scatter_callout_line_type_undefined_)) + sizeof(default_inner_radius_undefined_));
  }
  if (cached_has_bits & 0x3f000000u) {
    ::memset(&default_multi_data_control_type_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_title_undefined_) -
        reinterpret_cast<char*>(&default_multi_data_control_type_undefined_)) + sizeof(default_title_undefined_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChartNonStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSSSOS.SpecIntegerArchive default3d_bar_shape = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default3d_bar_shape(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default3d_bar_shape_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_default3d_bar_shape_undefined(&_has_bits_);
          default3d_bar_shape_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default3d_bevel_edges = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default3d_bevel_edges(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default3d_bevel_edges_undefined = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_default3d_bevel_edges_undefined(&_has_bits_);
          default3d_bevel_edges_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default3d_inter_set_depth_gap = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_default3d_inter_set_depth_gap(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default3d_inter_set_depth_gap_undefined = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_default3d_inter_set_depth_gap_undefined(&_has_bits_);
          default3d_inter_set_depth_gap_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dVectorArchive default3d_rotation = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_default3d_rotation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default3d_rotation_undefined = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_default3d_rotation_undefined(&_has_bits_);
          default3d_rotation_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dVectorArchive area3d_scale = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_area3d_scale(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool area3d_scale_undefined = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_area3d_scale_undefined(&_has_bits_);
          area3d_scale_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dVectorArchive bar3d_scale = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar3d_scale(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bar3d_scale_undefined = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_bar3d_scale_undefined(&_has_bits_);
          bar3d_scale_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dVectorArchive column3d_scale = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_column3d_scale(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool column3d_scale_undefined = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_column3d_scale_undefined(&_has_bits_);
          column3d_scale_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dVectorArchive default3d_scale = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_default3d_scale(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default3d_scale_undefined = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_default3d_scale_undefined(&_has_bits_);
          default3d_scale_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dVectorArchive line3d_scale = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_line3d_scale(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool line3d_scale_undefined = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_line3d_scale_undefined(&_has_bits_);
          line3d_scale_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dVectorArchive pie3d_scale = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie3d_scale(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pie3d_scale_undefined = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_pie3d_scale_undefined(&_has_bits_);
          pie3d_scale_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dVectorArchive default3d_viewport = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_default3d_viewport(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default3d_viewport_undefined = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_default3d_viewport_undefined(&_has_bits_);
          default3d_viewport_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive area_callout_line_type = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_callout_line_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool area_callout_line_type_undefined = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_area_callout_line_type_undefined(&_has_bits_);
          area_callout_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive bar_callout_line_type = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar_callout_line_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bar_callout_line_type_undefined = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_bar_callout_line_type_undefined(&_has_bits_);
          bar_callout_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive bubble_callout_line_type = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_callout_line_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bubble_callout_line_type_undefined = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_bubble_callout_line_type_undefined(&_has_bits_);
          bubble_callout_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_callout_line_type = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_callout_line_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_callout_line_type_undefined = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_default_callout_line_type_undefined(&_has_bits_);
          default_callout_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive line_callout_line_type = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_callout_line_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool line_callout_line_type_undefined = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          _Internal::set_has_line_callout_line_type_undefined(&_has_bits_);
          line_callout_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive pie_callout_line_type = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_callout_line_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pie_callout_line_type_undefined = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_pie_callout_line_type_undefined(&_has_bits_);
          pie_callout_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive scatter_callout_line_type = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_callout_line_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool scatter_callout_line_type_undefined = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_scatter_callout_line_type_undefined(&_has_bits_);
          scatter_callout_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive stacked_area_callout_line_type = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_stacked_area_callout_line_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool stacked_area_callout_line_type_undefined = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_stacked_area_callout_line_type_undefined(&_has_bits_);
          stacked_area_callout_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive stacked_bar_callout_line_type = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_stacked_bar_callout_line_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool stacked_bar_callout_line_type_undefined = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_stacked_bar_callout_line_type_undefined(&_has_bits_);
          stacked_bar_callout_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined(&_has_bits_);
          default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined(&_has_bits_);
          default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_data_set_name_location = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_data_set_name_location(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_data_set_name_location_undefined = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_default_data_set_name_location_undefined(&_has_bits_);
          default_data_set_name_location_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_donut_place_title_at_center = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_donut_place_title_at_center(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_donut_place_title_at_center_undefined = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_default_donut_place_title_at_center_undefined(&_has_bits_);
          default_donut_place_title_at_center_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_inner_radius = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_inner_radius(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_inner_radius_undefined = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_default_inner_radius_undefined(&_has_bits_);
          default_inner_radius_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_multi_data_control_type = 51;
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_multi_data_control_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_multi_data_control_type_undefined = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_default_multi_data_control_type_undefined(&_has_bits_);
          default_multi_data_control_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_pie_start_angle = 53;
      case 53:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_pie_start_angle(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_pie_start_angle_undefined = 54;
      case 54:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_default_pie_start_angle_undefined(&_has_bits_);
          default_pie_start_angle_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_legend = 55;
      case 55:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_legend(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_show_legend_undefined = 56;
      case 56:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_default_show_legend_undefined(&_has_bits_);
          default_show_legend_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_title = 57;
      case 57:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_title(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_show_title_undefined = 58;
      case 58:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_default_show_title_undefined(&_has_bits_);
          default_show_title_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_skip_hidden_data = 59;
      case 59:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_skip_hidden_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_skip_hidden_data_undefined = 60;
      case 60:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_default_skip_hidden_data_undefined(&_has_bits_);
          default_skip_hidden_data_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecStringArchive default_title = 61;
      case 61:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_title(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_title_undefined = 62;
      case 62:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_default_title_undefined(&_has_bits_);
          default_title_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChartNonStylePropertyChangeSetArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.ChartNonStylePropertyChangeSetArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default3d_bar_shape = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::default3d_bar_shape(this), target, stream);
  }

  // optional bool default3d_bar_shape_undefined = 2;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_default3d_bar_shape_undefined(), target);
  }

  // optional .TSSSOS.SpecBoolArchive default3d_bevel_edges = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::default3d_bevel_edges(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default3d_bevel_edges_undefined = 4;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_default3d_bevel_edges_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default3d_inter_set_depth_gap = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::default3d_inter_set_depth_gap(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default3d_inter_set_depth_gap_undefined = 6;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_default3d_inter_set_depth_gap_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecChart3dVectorArchive default3d_rotation = 7;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::default3d_rotation(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default3d_rotation_undefined = 8;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_default3d_rotation_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecChart3dVectorArchive area3d_scale = 9;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::area3d_scale(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool area3d_scale_undefined = 10;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_area3d_scale_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecChart3dVectorArchive bar3d_scale = 11;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::bar3d_scale(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool bar3d_scale_undefined = 12;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->_internal_bar3d_scale_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecChart3dVectorArchive column3d_scale = 13;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::column3d_scale(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool column3d_scale_undefined = 14;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(14, this->_internal_column3d_scale_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecChart3dVectorArchive default3d_scale = 15;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        15, _Internal::default3d_scale(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default3d_scale_undefined = 16;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(16, this->_internal_default3d_scale_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecChart3dVectorArchive line3d_scale = 17;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        17, _Internal::line3d_scale(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool line3d_scale_undefined = 18;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(18, this->_internal_line3d_scale_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecChart3dVectorArchive pie3d_scale = 19;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        19, _Internal::pie3d_scale(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool pie3d_scale_undefined = 20;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(20, this->_internal_pie3d_scale_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecChart3dVectorArchive default3d_viewport = 21;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        21, _Internal::default3d_viewport(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default3d_viewport_undefined = 22;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(22, this->_internal_default3d_viewport_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive area_callout_line_type = 23;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        23, _Internal::area_callout_line_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool area_callout_line_type_undefined = 24;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(24, this->_internal_area_callout_line_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive bar_callout_line_type = 25;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        25, _Internal::bar_callout_line_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool bar_callout_line_type_undefined = 26;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(26, this->_internal_bar_callout_line_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive bubble_callout_line_type = 27;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        27, _Internal::bubble_callout_line_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool bubble_callout_line_type_undefined = 28;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(28, this->_internal_bubble_callout_line_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_callout_line_type = 29;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        29, _Internal::default_callout_line_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_callout_line_type_undefined = 30;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(30, this->_internal_default_callout_line_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive line_callout_line_type = 31;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        31, _Internal::line_callout_line_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool line_callout_line_type_undefined = 32;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(32, this->_internal_line_callout_line_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive pie_callout_line_type = 33;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        33, _Internal::pie_callout_line_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool pie_callout_line_type_undefined = 34;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(34, this->_internal_pie_callout_line_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive scatter_callout_line_type = 35;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        35, _Internal::scatter_callout_line_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool scatter_callout_line_type_undefined = 36;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(36, this->_internal_scatter_callout_line_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive stacked_area_callout_line_type = 37;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        37, _Internal::stacked_area_callout_line_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool stacked_area_callout_line_type_undefined = 38;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(38, this->_internal_stacked_area_callout_line_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive stacked_bar_callout_line_type = 39;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        39, _Internal::stacked_bar_callout_line_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool stacked_bar_callout_line_type_undefined = 40;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(40, this->_internal_stacked_bar_callout_line_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only = 41;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        41, _Internal::default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined = 42;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(42, this->_internal_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius = 43;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        43, _Internal::default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined = 44;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(44, this->_internal_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_data_set_name_location = 45;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        45, _Internal::default_data_set_name_location(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_data_set_name_location_undefined = 46;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(46, this->_internal_default_data_set_name_location_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive default_donut_place_title_at_center = 47;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        47, _Internal::default_donut_place_title_at_center(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_donut_place_title_at_center_undefined = 48;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(48, this->_internal_default_donut_place_title_at_center_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_inner_radius = 49;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        49, _Internal::default_inner_radius(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_inner_radius_undefined = 50;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(50, this->_internal_default_inner_radius_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_multi_data_control_type = 51;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        51, _Internal::default_multi_data_control_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_multi_data_control_type_undefined = 52;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(52, this->_internal_default_multi_data_control_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_pie_start_angle = 53;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        53, _Internal::default_pie_start_angle(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_pie_start_angle_undefined = 54;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(54, this->_internal_default_pie_start_angle_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive default_show_legend = 55;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        55, _Internal::default_show_legend(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_show_legend_undefined = 56;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(56, this->_internal_default_show_legend_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive default_show_title = 57;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        57, _Internal::default_show_title(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_show_title_undefined = 58;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(58, this->_internal_default_show_title_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive default_skip_hidden_data = 59;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        59, _Internal::default_skip_hidden_data(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_skip_hidden_data_undefined = 60;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(60, this->_internal_default_skip_hidden_data_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecStringArchive default_title = 61;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        61, _Internal::default_title(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_title_undefined = 62;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(62, this->_internal_default_title_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.ChartNonStylePropertyChangeSetArchive)
  return target;
}

size_t ChartNonStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.ChartNonStylePropertyChangeSetArchive)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSSSOS.SpecIntegerArchive default3d_bar_shape = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default3d_bar_shape_);
    }

    // optional .TSSSOS.SpecBoolArchive default3d_bevel_edges = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default3d_bevel_edges_);
    }

    // optional .TSSSOS.SpecDoubleArchive default3d_inter_set_depth_gap = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default3d_inter_set_depth_gap_);
    }

    // optional .TSCHSOS.SpecChart3dVectorArchive default3d_rotation = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default3d_rotation_);
    }

    // optional .TSCHSOS.SpecChart3dVectorArchive area3d_scale = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area3d_scale_);
    }

    // optional .TSCHSOS.SpecChart3dVectorArchive bar3d_scale = 11;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bar3d_scale_);
    }

    // optional .TSCHSOS.SpecChart3dVectorArchive column3d_scale = 13;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *column3d_scale_);
    }

    // optional .TSCHSOS.SpecChart3dVectorArchive default3d_scale = 15;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default3d_scale_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSCHSOS.SpecChart3dVectorArchive line3d_scale = 17;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *line3d_scale_);
    }

    // optional .TSCHSOS.SpecChart3dVectorArchive pie3d_scale = 19;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pie3d_scale_);
    }

    // optional .TSCHSOS.SpecChart3dVectorArchive default3d_viewport = 21;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default3d_viewport_);
    }

    // optional .TSSSOS.SpecIntegerArchive area_callout_line_type = 23;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area_callout_line_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive bar_callout_line_type = 25;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bar_callout_line_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive bubble_callout_line_type = 27;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bubble_callout_line_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_callout_line_type = 29;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_callout_line_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive line_callout_line_type = 31;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *line_callout_line_type_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSSSOS.SpecIntegerArchive pie_callout_line_type = 33;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pie_callout_line_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive scatter_callout_line_type = 35;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *scatter_callout_line_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive stacked_area_callout_line_type = 37;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *stacked_area_callout_line_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive stacked_bar_callout_line_type = 39;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *stacked_bar_callout_line_type_);
    }

    // optional .TSSSOS.SpecBoolArchive default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only = 41;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius = 43;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_data_set_name_location = 45;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_data_set_name_location_);
    }

    // optional .TSSSOS.SpecBoolArchive default_donut_place_title_at_center = 47;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_donut_place_title_at_center_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .TSSSOS.SpecDoubleArchive default_inner_radius = 49;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_inner_radius_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_multi_data_control_type = 51;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_multi_data_control_type_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_pie_start_angle = 53;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_pie_start_angle_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_legend = 55;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_show_legend_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_title = 57;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_show_title_);
    }

    // optional .TSSSOS.SpecBoolArchive default_skip_hidden_data = 59;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_skip_hidden_data_);
    }

    // optional .TSSSOS.SpecStringArchive default_title = 61;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_title_);
    }

    // optional bool default3d_bar_shape_undefined = 2;
    if (cached_has_bits & 0x80000000u) {
      total_size += 1 + 1;
    }

  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool default3d_bevel_edges_undefined = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional bool default3d_inter_set_depth_gap_undefined = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool default3d_rotation_undefined = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool area3d_scale_undefined = 10;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool bar3d_scale_undefined = 12;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool column3d_scale_undefined = 14;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional bool default3d_scale_undefined = 16;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool line3d_scale_undefined = 18;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool pie3d_scale_undefined = 20;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool default3d_viewport_undefined = 22;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool area_callout_line_type_undefined = 24;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool bar_callout_line_type_undefined = 26;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_callout_line_type_undefined = 28;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional bool default_callout_line_type_undefined = 30;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

    // optional bool line_callout_line_type_undefined = 32;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional bool pie_callout_line_type_undefined = 34;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool scatter_callout_line_type_undefined = 36;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool stacked_area_callout_line_type_undefined = 38;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional bool stacked_bar_callout_line_type_undefined = 40;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined = 42;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

    // optional bool default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined = 44;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

    // optional bool default_data_set_name_location_undefined = 46;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool default_donut_place_title_at_center_undefined = 48;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional bool default_inner_radius_undefined = 50;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x3f000000u) {
    // optional bool default_multi_data_control_type_undefined = 52;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_pie_start_angle_undefined = 54;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_show_legend_undefined = 56;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_show_title_undefined = 58;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_skip_hidden_data_undefined = 60;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_title_undefined = 62;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChartNonStylePropertyChangeSetArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSCHSOS.ChartNonStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const ChartNonStylePropertyChangeSetArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChartNonStylePropertyChangeSetArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSCHSOS.ChartNonStylePropertyChangeSetArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSCHSOS.ChartNonStylePropertyChangeSetArchive)
    MergeFrom(*source);
  }
}

void ChartNonStylePropertyChangeSetArchive::MergeFrom(const ChartNonStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.ChartNonStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_default3d_bar_shape()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default3d_bar_shape());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_default3d_bevel_edges()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_default3d_bevel_edges());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_default3d_inter_set_depth_gap()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default3d_inter_set_depth_gap());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_default3d_rotation()->::TSCHSOS::SpecChart3dVectorArchive::MergeFrom(from._internal_default3d_rotation());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_area3d_scale()->::TSCHSOS::SpecChart3dVectorArchive::MergeFrom(from._internal_area3d_scale());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_bar3d_scale()->::TSCHSOS::SpecChart3dVectorArchive::MergeFrom(from._internal_bar3d_scale());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_column3d_scale()->::TSCHSOS::SpecChart3dVectorArchive::MergeFrom(from._internal_column3d_scale());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_default3d_scale()->::TSCHSOS::SpecChart3dVectorArchive::MergeFrom(from._internal_default3d_scale());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_line3d_scale()->::TSCHSOS::SpecChart3dVectorArchive::MergeFrom(from._internal_line3d_scale());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_pie3d_scale()->::TSCHSOS::SpecChart3dVectorArchive::MergeFrom(from._internal_pie3d_scale());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_default3d_viewport()->::TSCHSOS::SpecChart3dVectorArchive::MergeFrom(from._internal_default3d_viewport());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_area_callout_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_area_callout_line_type());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_bar_callout_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_bar_callout_line_type());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_bubble_callout_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_bubble_callout_line_type());
    }
    if (cached_has_bits & 0x00004000u) {
      _internal_mutable_default_callout_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_callout_line_type());
    }
    if (cached_has_bits & 0x00008000u) {
      _internal_mutable_line_callout_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_line_callout_line_type());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _internal_mutable_pie_callout_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_pie_callout_line_type());
    }
    if (cached_has_bits & 0x00020000u) {
      _internal_mutable_scatter_callout_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_scatter_callout_line_type());
    }
    if (cached_has_bits & 0x00040000u) {
      _internal_mutable_stacked_area_callout_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_stacked_area_callout_line_type());
    }
    if (cached_has_bits & 0x00080000u) {
      _internal_mutable_stacked_bar_callout_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_stacked_bar_callout_line_type());
    }
    if (cached_has_bits & 0x00100000u) {
      _internal_mutable_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only());
    }
    if (cached_has_bits & 0x00200000u) {
      _internal_mutable_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius());
    }
    if (cached_has_bits & 0x00400000u) {
      _internal_mutable_default_data_set_name_location()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_data_set_name_location());
    }
    if (cached_has_bits & 0x00800000u) {
      _internal_mutable_default_donut_place_title_at_center()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_default_donut_place_title_at_center());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _internal_mutable_default_inner_radius()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default_inner_radius());
    }
    if (cached_has_bits & 0x02000000u) {
      _internal_mutable_default_multi_data_control_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_multi_data_control_type());
    }
    if (cached_has_bits & 0x04000000u) {
      _internal_mutable_default_pie_start_angle()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default_pie_start_angle());
    }
    if (cached_has_bits & 0x08000000u) {
      _internal_mutable_default_show_legend()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_default_show_legend());
    }
    if (cached_has_bits & 0x10000000u) {
      _internal_mutable_default_show_title()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_default_show_title());
    }
    if (cached_has_bits & 0x20000000u) {
      _internal_mutable_default_skip_hidden_data()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_default_skip_hidden_data());
    }
    if (cached_has_bits & 0x40000000u) {
      _internal_mutable_default_title()->::TSSSOS::SpecStringArchive::MergeFrom(from._internal_default_title());
    }
    if (cached_has_bits & 0x80000000u) {
      default3d_bar_shape_undefined_ = from.default3d_bar_shape_undefined_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      default3d_bevel_edges_undefined_ = from.default3d_bevel_edges_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      default3d_inter_set_depth_gap_undefined_ = from.default3d_inter_set_depth_gap_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      default3d_rotation_undefined_ = from.default3d_rotation_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      area3d_scale_undefined_ = from.area3d_scale_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      bar3d_scale_undefined_ = from.bar3d_scale_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      column3d_scale_undefined_ = from.column3d_scale_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      default3d_scale_undefined_ = from.default3d_scale_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      line3d_scale_undefined_ = from.line3d_scale_undefined_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      pie3d_scale_undefined_ = from.pie3d_scale_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      default3d_viewport_undefined_ = from.default3d_viewport_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      area_callout_line_type_undefined_ = from.area_callout_line_type_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      bar_callout_line_type_undefined_ = from.bar_callout_line_type_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      bubble_callout_line_type_undefined_ = from.bubble_callout_line_type_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      default_callout_line_type_undefined_ = from.default_callout_line_type_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      line_callout_line_type_undefined_ = from.line_callout_line_type_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      pie_callout_line_type_undefined_ = from.pie_callout_line_type_undefined_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      scatter_callout_line_type_undefined_ = from.scatter_callout_line_type_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      stacked_area_callout_line_type_undefined_ = from.stacked_area_callout_line_type_undefined_;
    }
    if (cached_has_bits & 0x00040000u) {
      stacked_bar_callout_line_type_undefined_ = from.stacked_bar_callout_line_type_undefined_;
    }
    if (cached_has_bits & 0x00080000u) {
      default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined_ = from.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined_;
    }
    if (cached_has_bits & 0x00100000u) {
      default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined_ = from.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined_;
    }
    if (cached_has_bits & 0x00200000u) {
      default_data_set_name_location_undefined_ = from.default_data_set_name_location_undefined_;
    }
    if (cached_has_bits & 0x00400000u) {
      default_donut_place_title_at_center_undefined_ = from.default_donut_place_title_at_center_undefined_;
    }
    if (cached_has_bits & 0x00800000u) {
      default_inner_radius_undefined_ = from.default_inner_radius_undefined_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x3f000000u) {
    if (cached_has_bits & 0x01000000u) {
      default_multi_data_control_type_undefined_ = from.default_multi_data_control_type_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      default_pie_start_angle_undefined_ = from.default_pie_start_angle_undefined_;
    }
    if (cached_has_bits & 0x04000000u) {
      default_show_legend_undefined_ = from.default_show_legend_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      default_show_title_undefined_ = from.default_show_title_undefined_;
    }
    if (cached_has_bits & 0x10000000u) {
      default_skip_hidden_data_undefined_ = from.default_skip_hidden_data_undefined_;
    }
    if (cached_has_bits & 0x20000000u) {
      default_title_undefined_ = from.default_title_undefined_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
}

void ChartNonStylePropertyChangeSetArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSCHSOS.ChartNonStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChartNonStylePropertyChangeSetArchive::CopyFrom(const ChartNonStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.ChartNonStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChartNonStylePropertyChangeSetArchive::IsInitialized() const {
  if (_internal_has_default3d_bar_shape()) {
    if (!default3d_bar_shape_->IsInitialized()) return false;
  }
  if (_internal_has_default3d_bevel_edges()) {
    if (!default3d_bevel_edges_->IsInitialized()) return false;
  }
  if (_internal_has_default3d_inter_set_depth_gap()) {
    if (!default3d_inter_set_depth_gap_->IsInitialized()) return false;
  }
  if (_internal_has_default3d_rotation()) {
    if (!default3d_rotation_->IsInitialized()) return false;
  }
  if (_internal_has_area3d_scale()) {
    if (!area3d_scale_->IsInitialized()) return false;
  }
  if (_internal_has_bar3d_scale()) {
    if (!bar3d_scale_->IsInitialized()) return false;
  }
  if (_internal_has_column3d_scale()) {
    if (!column3d_scale_->IsInitialized()) return false;
  }
  if (_internal_has_default3d_scale()) {
    if (!default3d_scale_->IsInitialized()) return false;
  }
  if (_internal_has_line3d_scale()) {
    if (!line3d_scale_->IsInitialized()) return false;
  }
  if (_internal_has_pie3d_scale()) {
    if (!pie3d_scale_->IsInitialized()) return false;
  }
  if (_internal_has_default3d_viewport()) {
    if (!default3d_viewport_->IsInitialized()) return false;
  }
  if (_internal_has_area_callout_line_type()) {
    if (!area_callout_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_bar_callout_line_type()) {
    if (!bar_callout_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_callout_line_type()) {
    if (!bubble_callout_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_default_callout_line_type()) {
    if (!default_callout_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_line_callout_line_type()) {
    if (!line_callout_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_pie_callout_line_type()) {
    if (!pie_callout_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_callout_line_type()) {
    if (!scatter_callout_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_stacked_area_callout_line_type()) {
    if (!stacked_area_callout_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_stacked_bar_callout_line_type()) {
    if (!stacked_bar_callout_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only()) {
    if (!default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_->IsInitialized()) return false;
  }
  if (_internal_has_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius()) {
    if (!default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_->IsInitialized()) return false;
  }
  if (_internal_has_default_data_set_name_location()) {
    if (!default_data_set_name_location_->IsInitialized()) return false;
  }
  if (_internal_has_default_donut_place_title_at_center()) {
    if (!default_donut_place_title_at_center_->IsInitialized()) return false;
  }
  if (_internal_has_default_inner_radius()) {
    if (!default_inner_radius_->IsInitialized()) return false;
  }
  if (_internal_has_default_multi_data_control_type()) {
    if (!default_multi_data_control_type_->IsInitialized()) return false;
  }
  if (_internal_has_default_pie_start_angle()) {
    if (!default_pie_start_angle_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_legend()) {
    if (!default_show_legend_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_title()) {
    if (!default_show_title_->IsInitialized()) return false;
  }
  if (_internal_has_default_skip_hidden_data()) {
    if (!default_skip_hidden_data_->IsInitialized()) return false;
  }
  if (_internal_has_default_title()) {
    if (!default_title_->IsInitialized()) return false;
  }
  return true;
}

void ChartNonStylePropertyChangeSetArchive::InternalSwap(ChartNonStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChartNonStylePropertyChangeSetArchive, default_title_undefined_)
      + sizeof(ChartNonStylePropertyChangeSetArchive::default_title_undefined_)
      - PROTOBUF_FIELD_OFFSET(ChartNonStylePropertyChangeSetArchive, default3d_bar_shape_)>(
          reinterpret_cast<char*>(&default3d_bar_shape_),
          reinterpret_cast<char*>(&other->default3d_bar_shape_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChartNonStylePropertyChangeSetArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[16]);
}

// ===================================================================

class ChartReferenceLineNonStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<ChartReferenceLineNonStylePropertyChangeSetArchive>()._has_bits_);
  static const ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive& default_custom_value(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_custom_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_default_custom_value_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::TSSSOS::SpecStringArchive& default_label(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_label(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_default_label_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_label(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_label(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_default_show_label_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_line(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_line(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_default_show_line_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_value_label(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_value_label(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_default_show_value_label_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_type(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_type(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_default_type_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
};

const ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive&
ChartReferenceLineNonStylePropertyChangeSetArchive::_Internal::default_custom_value(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_custom_value_;
}
const ::TSSSOS::SpecStringArchive&
ChartReferenceLineNonStylePropertyChangeSetArchive::_Internal::default_label(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_label_;
}
const ::TSSSOS::SpecBoolArchive&
ChartReferenceLineNonStylePropertyChangeSetArchive::_Internal::default_show_label(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_show_label_;
}
const ::TSSSOS::SpecBoolArchive&
ChartReferenceLineNonStylePropertyChangeSetArchive::_Internal::default_show_line(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_show_line_;
}
const ::TSSSOS::SpecBoolArchive&
ChartReferenceLineNonStylePropertyChangeSetArchive::_Internal::default_show_value_label(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_show_value_label_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartReferenceLineNonStylePropertyChangeSetArchive::_Internal::default_type(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_type_;
}
void ChartReferenceLineNonStylePropertyChangeSetArchive::clear_default_label() {
  if (default_label_ != nullptr) default_label_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void ChartReferenceLineNonStylePropertyChangeSetArchive::clear_default_show_label() {
  if (default_show_label_ != nullptr) default_show_label_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void ChartReferenceLineNonStylePropertyChangeSetArchive::clear_default_show_line() {
  if (default_show_line_ != nullptr) default_show_line_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
void ChartReferenceLineNonStylePropertyChangeSetArchive::clear_default_show_value_label() {
  if (default_show_value_label_ != nullptr) default_show_value_label_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
void ChartReferenceLineNonStylePropertyChangeSetArchive::clear_default_type() {
  if (default_type_ != nullptr) default_type_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
ChartReferenceLineNonStylePropertyChangeSetArchive::ChartReferenceLineNonStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive)
}
ChartReferenceLineNonStylePropertyChangeSetArchive::ChartReferenceLineNonStylePropertyChangeSetArchive(const ChartReferenceLineNonStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_default_custom_value()) {
    default_custom_value_ = new ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive(*from.default_custom_value_);
  } else {
    default_custom_value_ = nullptr;
  }
  if (from._internal_has_default_label()) {
    default_label_ = new ::TSSSOS::SpecStringArchive(*from.default_label_);
  } else {
    default_label_ = nullptr;
  }
  if (from._internal_has_default_show_label()) {
    default_show_label_ = new ::TSSSOS::SpecBoolArchive(*from.default_show_label_);
  } else {
    default_show_label_ = nullptr;
  }
  if (from._internal_has_default_show_line()) {
    default_show_line_ = new ::TSSSOS::SpecBoolArchive(*from.default_show_line_);
  } else {
    default_show_line_ = nullptr;
  }
  if (from._internal_has_default_show_value_label()) {
    default_show_value_label_ = new ::TSSSOS::SpecBoolArchive(*from.default_show_value_label_);
  } else {
    default_show_value_label_ = nullptr;
  }
  if (from._internal_has_default_type()) {
    default_type_ = new ::TSSSOS::SpecIntegerArchive(*from.default_type_);
  } else {
    default_type_ = nullptr;
  }
  ::memcpy(&default_custom_value_undefined_, &from.default_custom_value_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&default_type_undefined_) -
    reinterpret_cast<char*>(&default_custom_value_undefined_)) + sizeof(default_type_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive)
}

void ChartReferenceLineNonStylePropertyChangeSetArchive::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&default_custom_value_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&default_type_undefined_) -
    reinterpret_cast<char*>(&default_custom_value_)) + sizeof(default_type_undefined_));
}

ChartReferenceLineNonStylePropertyChangeSetArchive::~ChartReferenceLineNonStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChartReferenceLineNonStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete default_custom_value_;
  if (this != internal_default_instance()) delete default_label_;
  if (this != internal_default_instance()) delete default_show_label_;
  if (this != internal_default_instance()) delete default_show_line_;
  if (this != internal_default_instance()) delete default_show_value_label_;
  if (this != internal_default_instance()) delete default_type_;
}

void ChartReferenceLineNonStylePropertyChangeSetArchive::ArenaDtor(void* object) {
  ChartReferenceLineNonStylePropertyChangeSetArchive* _this = reinterpret_cast< ChartReferenceLineNonStylePropertyChangeSetArchive* >(object);
  (void)_this;
}
void ChartReferenceLineNonStylePropertyChangeSetArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChartReferenceLineNonStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ChartReferenceLineNonStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(default_custom_value_ != nullptr);
      default_custom_value_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(default_label_ != nullptr);
      default_label_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(default_show_label_ != nullptr);
      default_show_label_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(default_show_line_ != nullptr);
      default_show_line_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(default_show_value_label_ != nullptr);
      default_show_value_label_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(default_type_ != nullptr);
      default_type_->Clear();
    }
  }
  if (cached_has_bits & 0x000000c0u) {
    ::memset(&default_custom_value_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_label_undefined_) -
        reinterpret_cast<char*>(&default_custom_value_undefined_)) + sizeof(default_label_undefined_));
  }
  if (cached_has_bits & 0x00000f00u) {
    ::memset(&default_show_label_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_type_undefined_) -
        reinterpret_cast<char*>(&default_show_label_undefined_)) + sizeof(default_type_undefined_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChartReferenceLineNonStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCHSOS.SpecChartsOptionalDoubleArchiveArchive default_custom_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_custom_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_custom_value_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_default_custom_value_undefined(&has_bits);
          default_custom_value_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecStringArchive default_label = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_label(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_label_undefined = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_default_label_undefined(&has_bits);
          default_label_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_label = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_label(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_show_label_undefined = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_default_show_label_undefined(&has_bits);
          default_show_label_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_line = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_line(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_show_line_undefined = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_default_show_line_undefined(&has_bits);
          default_show_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_value_label = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_value_label(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_show_value_label_undefined = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_default_show_value_label_undefined(&has_bits);
          default_show_value_label_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_type = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_type_undefined = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_default_type_undefined(&has_bits);
          default_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChartReferenceLineNonStylePropertyChangeSetArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecChartsOptionalDoubleArchiveArchive default_custom_value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::default_custom_value(this), target, stream);
  }

  // optional bool default_custom_value_undefined = 2;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_default_custom_value_undefined(), target);
  }

  // optional .TSSSOS.SpecStringArchive default_label = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::default_label(this), target, stream);
  }

  // optional bool default_label_undefined = 4;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_default_label_undefined(), target);
  }

  // optional .TSSSOS.SpecBoolArchive default_show_label = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::default_show_label(this), target, stream);
  }

  // optional bool default_show_label_undefined = 6;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_default_show_label_undefined(), target);
  }

  // optional .TSSSOS.SpecBoolArchive default_show_line = 7;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::default_show_line(this), target, stream);
  }

  // optional bool default_show_line_undefined = 8;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_default_show_line_undefined(), target);
  }

  // optional .TSSSOS.SpecBoolArchive default_show_value_label = 9;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::default_show_value_label(this), target, stream);
  }

  // optional bool default_show_value_label_undefined = 10;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_default_show_value_label_undefined(), target);
  }

  // optional .TSSSOS.SpecIntegerArchive default_type = 11;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::default_type(this), target, stream);
  }

  // optional bool default_type_undefined = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->_internal_default_type_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive)
  return target;
}

size_t ChartReferenceLineNonStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSCHSOS.SpecChartsOptionalDoubleArchiveArchive default_custom_value = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_custom_value_);
    }

    // optional .TSSSOS.SpecStringArchive default_label = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_label_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_label = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_show_label_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_line = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_show_line_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_value_label = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_show_value_label_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_type = 11;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_type_);
    }

    // optional bool default_custom_value_undefined = 2;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

    // optional bool default_label_undefined = 4;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x00000f00u) {
    // optional bool default_show_label_undefined = 6;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + 1;
    }

    // optional bool default_show_line_undefined = 8;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 1;
    }

    // optional bool default_show_value_label_undefined = 10;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 1;
    }

    // optional bool default_type_undefined = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChartReferenceLineNonStylePropertyChangeSetArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const ChartReferenceLineNonStylePropertyChangeSetArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChartReferenceLineNonStylePropertyChangeSetArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive)
    MergeFrom(*source);
  }
}

void ChartReferenceLineNonStylePropertyChangeSetArchive::MergeFrom(const ChartReferenceLineNonStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_default_custom_value()->::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive::MergeFrom(from._internal_default_custom_value());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_default_label()->::TSSSOS::SpecStringArchive::MergeFrom(from._internal_default_label());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_default_show_label()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_default_show_label());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_default_show_line()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_default_show_line());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_default_show_value_label()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_default_show_value_label());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_default_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_type());
    }
    if (cached_has_bits & 0x00000040u) {
      default_custom_value_undefined_ = from.default_custom_value_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      default_label_undefined_ = from.default_label_undefined_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      default_show_label_undefined_ = from.default_show_label_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      default_show_line_undefined_ = from.default_show_line_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      default_show_value_label_undefined_ = from.default_show_value_label_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      default_type_undefined_ = from.default_type_undefined_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChartReferenceLineNonStylePropertyChangeSetArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChartReferenceLineNonStylePropertyChangeSetArchive::CopyFrom(const ChartReferenceLineNonStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChartReferenceLineNonStylePropertyChangeSetArchive::IsInitialized() const {
  if (_internal_has_default_custom_value()) {
    if (!default_custom_value_->IsInitialized()) return false;
  }
  if (_internal_has_default_label()) {
    if (!default_label_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_label()) {
    if (!default_show_label_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_line()) {
    if (!default_show_line_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_value_label()) {
    if (!default_show_value_label_->IsInitialized()) return false;
  }
  if (_internal_has_default_type()) {
    if (!default_type_->IsInitialized()) return false;
  }
  return true;
}

void ChartReferenceLineNonStylePropertyChangeSetArchive::InternalSwap(ChartReferenceLineNonStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChartReferenceLineNonStylePropertyChangeSetArchive, default_type_undefined_)
      + sizeof(ChartReferenceLineNonStylePropertyChangeSetArchive::default_type_undefined_)
      - PROTOBUF_FIELD_OFFSET(ChartReferenceLineNonStylePropertyChangeSetArchive, default_custom_value_)>(
          reinterpret_cast<char*>(&default_custom_value_),
          reinterpret_cast<char*>(&other->default_custom_value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChartReferenceLineNonStylePropertyChangeSetArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[17]);
}

// ===================================================================

class ChartReferenceLineStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<ChartReferenceLineStylePropertyChangeSetArchive>()._has_bits_);
  static const ::TSSSOS::SpecIntegerArchive& default_label_paragraph_style_index(const ChartReferenceLineStylePropertyChangeSetArchive* msg);
  static void set_has_default_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_default_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TSDSOS::SpecShadowArchive& default_shadow(const ChartReferenceLineStylePropertyChangeSetArchive* msg);
  static void set_has_default_shadow(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_default_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::TSDSOS::SpecStrokeArchive& default_stroke(const ChartReferenceLineStylePropertyChangeSetArchive* msg);
  static void set_has_default_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_default_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_value_label_paragraph_style_index(const ChartReferenceLineStylePropertyChangeSetArchive* msg);
  static void set_has_default_value_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_default_value_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

const ::TSSSOS::SpecIntegerArchive&
ChartReferenceLineStylePropertyChangeSetArchive::_Internal::default_label_paragraph_style_index(const ChartReferenceLineStylePropertyChangeSetArchive* msg) {
  return *msg->default_label_paragraph_style_index_;
}
const ::TSDSOS::SpecShadowArchive&
ChartReferenceLineStylePropertyChangeSetArchive::_Internal::default_shadow(const ChartReferenceLineStylePropertyChangeSetArchive* msg) {
  return *msg->default_shadow_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartReferenceLineStylePropertyChangeSetArchive::_Internal::default_stroke(const ChartReferenceLineStylePropertyChangeSetArchive* msg) {
  return *msg->default_stroke_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartReferenceLineStylePropertyChangeSetArchive::_Internal::default_value_label_paragraph_style_index(const ChartReferenceLineStylePropertyChangeSetArchive* msg) {
  return *msg->default_value_label_paragraph_style_index_;
}
void ChartReferenceLineStylePropertyChangeSetArchive::clear_default_label_paragraph_style_index() {
  if (default_label_paragraph_style_index_ != nullptr) default_label_paragraph_style_index_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void ChartReferenceLineStylePropertyChangeSetArchive::clear_default_shadow() {
  if (default_shadow_ != nullptr) default_shadow_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void ChartReferenceLineStylePropertyChangeSetArchive::clear_default_stroke() {
  if (default_stroke_ != nullptr) default_stroke_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void ChartReferenceLineStylePropertyChangeSetArchive::clear_default_value_label_paragraph_style_index() {
  if (default_value_label_paragraph_style_index_ != nullptr) default_value_label_paragraph_style_index_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
ChartReferenceLineStylePropertyChangeSetArchive::ChartReferenceLineStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive)
}
ChartReferenceLineStylePropertyChangeSetArchive::ChartReferenceLineStylePropertyChangeSetArchive(const ChartReferenceLineStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_default_label_paragraph_style_index()) {
    default_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.default_label_paragraph_style_index_);
  } else {
    default_label_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_default_shadow()) {
    default_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.default_shadow_);
  } else {
    default_shadow_ = nullptr;
  }
  if (from._internal_has_default_stroke()) {
    default_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.default_stroke_);
  } else {
    default_stroke_ = nullptr;
  }
  if (from._internal_has_default_value_label_paragraph_style_index()) {
    default_value_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.default_value_label_paragraph_style_index_);
  } else {
    default_value_label_paragraph_style_index_ = nullptr;
  }
  ::memcpy(&default_label_paragraph_style_index_undefined_, &from.default_label_paragraph_style_index_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&default_value_label_paragraph_style_index_undefined_) -
    reinterpret_cast<char*>(&default_label_paragraph_style_index_undefined_)) + sizeof(default_value_label_paragraph_style_index_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive)
}

void ChartReferenceLineStylePropertyChangeSetArchive::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&default_label_paragraph_style_index_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&default_value_label_paragraph_style_index_undefined_) -
    reinterpret_cast<char*>(&default_label_paragraph_style_index_)) + sizeof(default_value_label_paragraph_style_index_undefined_));
}

ChartReferenceLineStylePropertyChangeSetArchive::~ChartReferenceLineStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChartReferenceLineStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete default_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete default_shadow_;
  if (this != internal_default_instance()) delete default_stroke_;
  if (this != internal_default_instance()) delete default_value_label_paragraph_style_index_;
}

void ChartReferenceLineStylePropertyChangeSetArchive::ArenaDtor(void* object) {
  ChartReferenceLineStylePropertyChangeSetArchive* _this = reinterpret_cast< ChartReferenceLineStylePropertyChangeSetArchive* >(object);
  (void)_this;
}
void ChartReferenceLineStylePropertyChangeSetArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChartReferenceLineStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ChartReferenceLineStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(default_label_paragraph_style_index_ != nullptr);
      default_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(default_shadow_ != nullptr);
      default_shadow_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(default_stroke_ != nullptr);
      default_stroke_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(default_value_label_paragraph_style_index_ != nullptr);
      default_value_label_paragraph_style_index_->Clear();
    }
  }
  ::memset(&default_label_paragraph_style_index_undefined_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&default_value_label_paragraph_style_index_undefined_) -
      reinterpret_cast<char*>(&default_label_paragraph_style_index_undefined_)) + sizeof(default_value_label_paragraph_style_index_undefined_));
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChartReferenceLineStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_label_paragraph_style_index_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_default_label_paragraph_style_index_undefined(&has_bits);
          default_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive default_shadow = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_shadow_undefined = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_default_shadow_undefined(&has_bits);
          default_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive default_stroke = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_stroke_undefined = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_default_stroke_undefined(&has_bits);
          default_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_value_label_paragraph_style_index = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_value_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_value_label_paragraph_style_index_undefined = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_default_value_label_paragraph_style_index_undefined(&has_bits);
          default_value_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChartReferenceLineStylePropertyChangeSetArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::default_label_paragraph_style_index(this), target, stream);
  }

  // optional bool default_label_paragraph_style_index_undefined = 2;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_default_label_paragraph_style_index_undefined(), target);
  }

  // optional .TSDSOS.SpecShadowArchive default_shadow = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::default_shadow(this), target, stream);
  }

  // optional bool default_shadow_undefined = 4;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_default_shadow_undefined(), target);
  }

  // optional .TSDSOS.SpecStrokeArchive default_stroke = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::default_stroke(this), target, stream);
  }

  // optional bool default_stroke_undefined = 6;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_default_stroke_undefined(), target);
  }

  // optional .TSSSOS.SpecIntegerArchive default_value_label_paragraph_style_index = 7;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::default_value_label_paragraph_style_index(this), target, stream);
  }

  // optional bool default_value_label_paragraph_style_index_undefined = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_default_value_label_paragraph_style_index_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive)
  return target;
}

size_t ChartReferenceLineStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_label_paragraph_style_index_);
    }

    // optional .TSDSOS.SpecShadowArchive default_shadow = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_shadow_);
    }

    // optional .TSDSOS.SpecStrokeArchive default_stroke = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_stroke_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_value_label_paragraph_style_index = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_value_label_paragraph_style_index_);
    }

    // optional bool default_label_paragraph_style_index_undefined = 2;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool default_shadow_undefined = 4;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional bool default_stroke_undefined = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

    // optional bool default_value_label_paragraph_style_index_undefined = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChartReferenceLineStylePropertyChangeSetArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const ChartReferenceLineStylePropertyChangeSetArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChartReferenceLineStylePropertyChangeSetArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive)
    MergeFrom(*source);
  }
}

void ChartReferenceLineStylePropertyChangeSetArchive::MergeFrom(const ChartReferenceLineStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_default_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_default_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_default_shadow());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_default_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_default_stroke());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_default_value_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_value_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000010u) {
      default_label_paragraph_style_index_undefined_ = from.default_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      default_shadow_undefined_ = from.default_shadow_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      default_stroke_undefined_ = from.default_stroke_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      default_value_label_paragraph_style_index_undefined_ = from.default_value_label_paragraph_style_index_undefined_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChartReferenceLineStylePropertyChangeSetArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChartReferenceLineStylePropertyChangeSetArchive::CopyFrom(const ChartReferenceLineStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChartReferenceLineStylePropertyChangeSetArchive::IsInitialized() const {
  if (_internal_has_default_label_paragraph_style_index()) {
    if (!default_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_default_shadow()) {
    if (!default_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_default_stroke()) {
    if (!default_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_default_value_label_paragraph_style_index()) {
    if (!default_value_label_paragraph_style_index_->IsInitialized()) return false;
  }
  return true;
}

void ChartReferenceLineStylePropertyChangeSetArchive::InternalSwap(ChartReferenceLineStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChartReferenceLineStylePropertyChangeSetArchive, default_value_label_paragraph_style_index_undefined_)
      + sizeof(ChartReferenceLineStylePropertyChangeSetArchive::default_value_label_paragraph_style_index_undefined_)
      - PROTOBUF_FIELD_OFFSET(ChartReferenceLineStylePropertyChangeSetArchive, default_label_paragraph_style_index_)>(
          reinterpret_cast<char*>(&default_label_paragraph_style_index_),
          reinterpret_cast<char*>(&other->default_label_paragraph_style_index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChartReferenceLineStylePropertyChangeSetArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[18]);
}

// ===================================================================

class ChartSeriesNonStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<ChartSeriesNonStylePropertyChangeSetArchive>()._has_bits_);
  static const ::TSCHSOS::SpecFormatObjectArchive& default10_date_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default10_date_format(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_default10_date_format_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 1073741824u;
  }
  static const ::TSCHSOS::SpecNumberFormatArchive& default10_number_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default10_number_format(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_default10_number_format_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 2147483648u;
  }
  static const ::TSCHSOS::SpecNumberFormatArchive& pie10_number_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie10_number_format(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_pie10_number_format_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 1u;
  }
  static const ::TSSSOS::SpecDoubleArchive& pie23_label_explosion(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie23_label_explosion(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_pie23_label_explosion_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 2u;
  }
  static const ::TSSSOS::SpecDoubleArchive& bubble_adjustment_scale(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_adjustment_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_bubble_adjustment_scale_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 4u;
  }
  static const ::TSCHSOS::SpecFormatObjectArchive& default_date_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_date_format(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_default_date_format_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 8u;
  }
  static const ::TSCHSOS::SpecFormatObjectArchive& default_duration_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_duration_format(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_default_duration_format_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 16u;
  }
  static const ::TSSSOS::SpecIntegerArchive& area_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_area_enable_callout_line(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_area_enable_callout_line_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 32u;
  }
  static const ::TSSSOS::SpecIntegerArchive& bar_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bar_enable_callout_line(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_bar_enable_callout_line_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 64u;
  }
  static const ::TSSSOS::SpecIntegerArchive& bubble_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_enable_callout_line(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_bubble_enable_callout_line_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 128u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_enable_callout_line(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_default_enable_callout_line_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 256u;
  }
  static const ::TSSSOS::SpecIntegerArchive& line_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_line_enable_callout_line(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_line_enable_callout_line_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 512u;
  }
  static const ::TSSSOS::SpecIntegerArchive& pie_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie_enable_callout_line(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_pie_enable_callout_line_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 1024u;
  }
  static const ::TSSSOS::SpecIntegerArchive& scatter_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_enable_callout_line(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_scatter_enable_callout_line_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 2048u;
  }
  static const ::TSSSOS::SpecIntegerArchive& stacked_area_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_stacked_area_enable_callout_line(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_stacked_area_enable_callout_line_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 4096u;
  }
  static const ::TSSSOS::SpecIntegerArchive& stacked_bar_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_stacked_bar_enable_callout_line(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_stacked_bar_enable_callout_line_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 8192u;
  }
  static const ::TSCHSOS::SpecChartErrorBarCustomDataArchive& default_error_bar_custom_negative_data(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_custom_negative_data(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_default_error_bar_custom_negative_data_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 16384u;
  }
  static const ::TSCHSOS::SpecChartErrorBarCustomDataArchive& default_error_bar_custom_negative_data_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_custom_negative_data_scatter_x(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_default_error_bar_custom_negative_data_scatter_x_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 32768u;
  }
  static const ::TSCHSOS::SpecChartErrorBarCustomDataArchive& default_error_bar_custom_positive_data(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_custom_positive_data(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_default_error_bar_custom_positive_data_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 65536u;
  }
  static const ::TSCHSOS::SpecChartErrorBarCustomDataArchive& default_error_bar_custom_positive_data_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_custom_positive_data_scatter_x(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_default_error_bar_custom_positive_data_scatter_x_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 131072u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_error_bar_fixed_value(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_fixed_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_default_error_bar_fixed_value_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 262144u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_error_bar_fixed_value_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_fixed_value_scatter_x(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_default_error_bar_fixed_value_scatter_x_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 524288u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_error_bar_percent_value(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_percent_value(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_default_error_bar_percent_value_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 1048576u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_error_bar_percent_value_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_percent_value_scatter_x(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_default_error_bar_percent_value_scatter_x_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 2097152u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_error_bar_setting(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_setting(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_default_error_bar_setting_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 4194304u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_error_bar_setting_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_setting_scatter_x(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_default_error_bar_setting_scatter_x_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 8388608u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_error_bar_std_dev_value(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_std_dev_value(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_default_error_bar_std_dev_value_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 16777216u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_error_bar_std_dev_value_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_std_dev_value_scatter_x(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static void set_has_default_error_bar_std_dev_value_scatter_x_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 33554432u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_error_bar_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_type(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static void set_has_default_error_bar_type_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 67108864u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_error_bar_type_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_type_scatter_x(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static void set_has_default_error_bar_type_scatter_x_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 134217728u;
  }
  static const ::TSSSOS::SpecDoubleArchive& pie_label_explosion(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie_label_explosion(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static void set_has_pie_label_explosion_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 268435456u;
  }
  static const ::TSSSOS::SpecIntegerArchive& bubble_line_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_line_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static void set_has_bubble_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 536870912u;
  }
  static const ::TSSSOS::SpecIntegerArchive& line_line_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_line_line_type(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static void set_has_line_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 1073741824u;
  }
  static const ::TSSSOS::SpecIntegerArchive& mixed_line_line_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_line_line_type(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static void set_has_mixed_line_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 2147483648u;
  }
  static const ::TSSSOS::SpecIntegerArchive& scatter_line_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_line_type(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static void set_has_scatter_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 1u;
  }
  static const ::TSCHSOS::SpecNumberFormatArchive& default_number_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_number_format(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static void set_has_default_number_format_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 2u;
  }
  static const ::TSCHSOS::SpecNumberFormatArchive& pie_number_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie_number_format(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static void set_has_pie_number_format_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 4u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_number_format_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_number_format_type(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static void set_has_default_number_format_type_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 8u;
  }
  static const ::TSSSOS::SpecIntegerArchive& pie_number_format_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie_number_format_type(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static void set_has_pie_number_format_type_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 16u;
  }
  static const ::TSCHSOS::SpecNumberFormatArchive& stacked_percent_number_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_stacked_percent_number_format(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static void set_has_stacked_percent_number_format_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 32u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_series_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_series_type(HasBits* has_bits) {
    (*has_bits)[1] |= 256u;
  }
  static void set_has_default_series_type_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 64u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_error_bar(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_error_bar(HasBits* has_bits) {
    (*has_bits)[1] |= 512u;
  }
  static void set_has_default_show_error_bar_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 128u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_error_bar_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_error_bar_scatter_x(HasBits* has_bits) {
    (*has_bits)[1] |= 1024u;
  }
  static void set_has_default_show_error_bar_scatter_x_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 256u;
  }
  static const ::TSSSOS::SpecBoolArchive& bubble_show_labels_in_front(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_show_labels_in_front(HasBits* has_bits) {
    (*has_bits)[1] |= 2048u;
  }
  static void set_has_bubble_show_labels_in_front_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 512u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_labels_in_front(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_labels_in_front(HasBits* has_bits) {
    (*has_bits)[1] |= 4096u;
  }
  static void set_has_default_show_labels_in_front_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 1024u;
  }
  static const ::TSSSOS::SpecBoolArchive& scatter_show_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_show_line(HasBits* has_bits) {
    (*has_bits)[1] |= 8192u;
  }
  static void set_has_scatter_show_line_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 2048u;
  }
  static const ::TSSSOS::SpecBoolArchive& bubble_show_negative_data(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_show_negative_data(HasBits* has_bits) {
    (*has_bits)[1] |= 16384u;
  }
  static void set_has_bubble_show_negative_data_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 4096u;
  }
  static const ::TSSSOS::SpecBoolArchive& bubble_show_series_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_show_series_labels(HasBits* has_bits) {
    (*has_bits)[1] |= 32768u;
  }
  static void set_has_bubble_show_series_labels_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 8192u;
  }
  static const ::TSSSOS::SpecBoolArchive& pie_show_series_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie_show_series_labels(HasBits* has_bits) {
    (*has_bits)[1] |= 65536u;
  }
  static void set_has_pie_show_series_labels_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 16384u;
  }
  static const ::TSSSOS::SpecBoolArchive& scatter_show_series_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_show_series_labels(HasBits* has_bits) {
    (*has_bits)[1] |= 131072u;
  }
  static void set_has_scatter_show_series_labels_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 32768u;
  }
  static const ::TSSSOS::SpecBoolArchive& area_show_symbol(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_area_show_symbol(HasBits* has_bits) {
    (*has_bits)[1] |= 262144u;
  }
  static void set_has_area_show_symbol_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 65536u;
  }
  static const ::TSSSOS::SpecBoolArchive& line_show_symbol(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_line_show_symbol(HasBits* has_bits) {
    (*has_bits)[1] |= 524288u;
  }
  static void set_has_line_show_symbol_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 131072u;
  }
  static const ::TSSSOS::SpecBoolArchive& mixed_area_show_symbol(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_area_show_symbol(HasBits* has_bits) {
    (*has_bits)[1] |= 1048576u;
  }
  static void set_has_mixed_area_show_symbol_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 262144u;
  }
  static const ::TSSSOS::SpecBoolArchive& mixed_line_show_symbol(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_line_show_symbol(HasBits* has_bits) {
    (*has_bits)[1] |= 2097152u;
  }
  static void set_has_mixed_line_show_symbol_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 524288u;
  }
  static const ::TSSSOS::SpecBoolArchive& scatter_show_symbol(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_show_symbol(HasBits* has_bits) {
    (*has_bits)[1] |= 4194304u;
  }
  static void set_has_scatter_show_symbol_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 1048576u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_trend_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_trend_line(HasBits* has_bits) {
    (*has_bits)[1] |= 8388608u;
  }
  static void set_has_default_show_trend_line_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 2097152u;
  }
  static const ::TSSSOS::SpecBoolArchive& area_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_area_show_value_labels(HasBits* has_bits) {
    (*has_bits)[1] |= 16777216u;
  }
  static void set_has_area_show_value_labels_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 4194304u;
  }
  static const ::TSSSOS::SpecBoolArchive& bar_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bar_show_value_labels(HasBits* has_bits) {
    (*has_bits)[1] |= 33554432u;
  }
  static void set_has_bar_show_value_labels_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 8388608u;
  }
  static const ::TSSSOS::SpecBoolArchive& bubble_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_show_value_labels(HasBits* has_bits) {
    (*has_bits)[1] |= 67108864u;
  }
  static void set_has_bubble_show_value_labels_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 16777216u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_value_labels(HasBits* has_bits) {
    (*has_bits)[1] |= 134217728u;
  }
  static void set_has_default_show_value_labels_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 33554432u;
  }
  static const ::TSSSOS::SpecBoolArchive& line_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_line_show_value_labels(HasBits* has_bits) {
    (*has_bits)[1] |= 268435456u;
  }
  static void set_has_line_show_value_labels_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 67108864u;
  }
  static const ::TSSSOS::SpecBoolArchive& mixed_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_show_value_labels(HasBits* has_bits) {
    (*has_bits)[1] |= 536870912u;
  }
  static void set_has_mixed_show_value_labels_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 134217728u;
  }
  static const ::TSSSOS::SpecBoolArchive& pie_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie_show_value_labels(HasBits* has_bits) {
    (*has_bits)[1] |= 1073741824u;
  }
  static void set_has_pie_show_value_labels_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 268435456u;
  }
  static const ::TSSSOS::SpecBoolArchive& scatter_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_show_value_labels(HasBits* has_bits) {
    (*has_bits)[1] |= 2147483648u;
  }
  static void set_has_scatter_show_value_labels_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 536870912u;
  }
  static const ::TSSSOS::SpecIntegerArchive& bubble_size_dimension(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_size_dimension(HasBits* has_bits) {
    (*has_bits)[2] |= 1u;
  }
  static void set_has_bubble_size_dimension_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 1073741824u;
  }
  static const ::TSSSOS::SpecBoolArchive& area_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_area_stack_labels(HasBits* has_bits) {
    (*has_bits)[2] |= 2u;
  }
  static void set_has_area_stack_labels_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 2147483648u;
  }
  static const ::TSSSOS::SpecBoolArchive& bar_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bar_stack_labels(HasBits* has_bits) {
    (*has_bits)[2] |= 4u;
  }
  static void set_has_bar_stack_labels_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 1u;
  }
  static const ::TSSSOS::SpecBoolArchive& bubble_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_stack_labels(HasBits* has_bits) {
    (*has_bits)[2] |= 8u;
  }
  static void set_has_bubble_stack_labels_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 2u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_stack_labels(HasBits* has_bits) {
    (*has_bits)[2] |= 16u;
  }
  static void set_has_default_stack_labels_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 4u;
  }
  static const ::TSSSOS::SpecBoolArchive& line_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_line_stack_labels(HasBits* has_bits) {
    (*has_bits)[2] |= 32u;
  }
  static void set_has_line_stack_labels_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 8u;
  }
  static const ::TSSSOS::SpecBoolArchive& pie_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie_stack_labels(HasBits* has_bits) {
    (*has_bits)[2] |= 64u;
  }
  static void set_has_pie_stack_labels_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 16u;
  }
  static const ::TSSSOS::SpecBoolArchive& scatter_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_stack_labels(HasBits* has_bits) {
    (*has_bits)[2] |= 128u;
  }
  static void set_has_scatter_stack_labels_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 32u;
  }
  static const ::TSSSOS::SpecBoolArchive& stacked_area_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_stacked_area_stack_labels(HasBits* has_bits) {
    (*has_bits)[2] |= 256u;
  }
  static void set_has_stacked_area_stack_labels_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 64u;
  }
  static const ::TSSSOS::SpecBoolArchive& stacked_bar_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_stacked_bar_stack_labels(HasBits* has_bits) {
    (*has_bits)[2] |= 512u;
  }
  static void set_has_stacked_bar_stack_labels_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 128u;
  }
  static const ::TSSSOS::SpecIntegerArchive& area_symbol_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_area_symbol_type(HasBits* has_bits) {
    (*has_bits)[2] |= 1024u;
  }
  static void set_has_area_symbol_type_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 256u;
  }
  static const ::TSSSOS::SpecIntegerArchive& line_symbol_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_line_symbol_type(HasBits* has_bits) {
    (*has_bits)[2] |= 2048u;
  }
  static void set_has_line_symbol_type_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 512u;
  }
  static const ::TSSSOS::SpecIntegerArchive& mixed_area_symbol_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_area_symbol_type(HasBits* has_bits) {
    (*has_bits)[2] |= 4096u;
  }
  static void set_has_mixed_area_symbol_type_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 1024u;
  }
  static const ::TSSSOS::SpecIntegerArchive& mixed_line_symbol_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_line_symbol_type(HasBits* has_bits) {
    (*has_bits)[2] |= 8192u;
  }
  static void set_has_mixed_line_symbol_type_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 2048u;
  }
  static const ::TSSSOS::SpecIntegerArchive& scatter_symbol_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_symbol_type(HasBits* has_bits) {
    (*has_bits)[2] |= 16384u;
  }
  static void set_has_scatter_symbol_type_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 4096u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_trend_line_equation_offset_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_equation_offset_x(HasBits* has_bits) {
    (*has_bits)[2] |= 32768u;
  }
  static void set_has_default_trend_line_equation_offset_x_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 8192u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_trend_line_equation_offset_y(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_equation_offset_y(HasBits* has_bits) {
    (*has_bits)[2] |= 65536u;
  }
  static void set_has_default_trend_line_equation_offset_y_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 16384u;
  }
  static const ::TSSSOS::SpecStringArchive& default_trend_line_label_string(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_label_string(HasBits* has_bits) {
    (*has_bits)[2] |= 131072u;
  }
  static void set_has_default_trend_line_label_string_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 32768u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_trend_line_order(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_order(HasBits* has_bits) {
    (*has_bits)[2] |= 262144u;
  }
  static void set_has_default_trend_line_order_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 65536u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_trend_line_period(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_period(HasBits* has_bits) {
    (*has_bits)[2] |= 524288u;
  }
  static void set_has_default_trend_line_period_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 131072u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_trend_line_r_squared_offset_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_r_squared_offset_x(HasBits* has_bits) {
    (*has_bits)[2] |= 1048576u;
  }
  static void set_has_default_trend_line_r_squared_offset_x_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 262144u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_trend_line_r_squared_offset_y(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_r_squared_offset_y(HasBits* has_bits) {
    (*has_bits)[2] |= 2097152u;
  }
  static void set_has_default_trend_line_r_squared_offset_y_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 524288u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_trend_line_show_equation(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_show_equation(HasBits* has_bits) {
    (*has_bits)[2] |= 4194304u;
  }
  static void set_has_default_trend_line_show_equation_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 1048576u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_trend_line_show_label(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_show_label(HasBits* has_bits) {
    (*has_bits)[2] |= 8388608u;
  }
  static void set_has_default_trend_line_show_label_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 2097152u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_trend_line_show_r2_value(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_show_r2_value(HasBits* has_bits) {
    (*has_bits)[2] |= 16777216u;
  }
  static void set_has_default_trend_line_show_r2_value_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 4194304u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_trend_line_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_type(HasBits* has_bits) {
    (*has_bits)[2] |= 33554432u;
  }
  static void set_has_default_trend_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 8388608u;
  }
  static const ::TSSSOS::SpecIntegerArchive& bubble_value_labels_axis(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_value_labels_axis(HasBits* has_bits) {
    (*has_bits)[2] |= 67108864u;
  }
  static void set_has_bubble_value_labels_axis_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 16777216u;
  }
  static const ::TSSSOS::SpecIntegerArchive& scatter_value_labels_axis(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_value_labels_axis(HasBits* has_bits) {
    (*has_bits)[2] |= 134217728u;
  }
  static void set_has_scatter_value_labels_axis_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 33554432u;
  }
  static const ::TSSSOS::SpecDoubleArchive& pie_wedge_explosion(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie_wedge_explosion(HasBits* has_bits) {
    (*has_bits)[2] |= 268435456u;
  }
  static void set_has_pie_wedge_explosion_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 67108864u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_y_axis_ordinal(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_y_axis_ordinal(HasBits* has_bits) {
    (*has_bits)[2] |= 536870912u;
  }
  static void set_has_default_y_axis_ordinal_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 134217728u;
  }
};

const ::TSCHSOS::SpecFormatObjectArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default10_date_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default10_date_format_;
}
const ::TSCHSOS::SpecNumberFormatArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default10_number_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default10_number_format_;
}
const ::TSCHSOS::SpecNumberFormatArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::pie10_number_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->pie10_number_format_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::pie23_label_explosion(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->pie23_label_explosion_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bubble_adjustment_scale(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->bubble_adjustment_scale_;
}
const ::TSCHSOS::SpecFormatObjectArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_date_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_date_format_;
}
const ::TSCHSOS::SpecFormatObjectArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_duration_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_duration_format_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::area_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->area_enable_callout_line_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bar_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->bar_enable_callout_line_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bubble_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->bubble_enable_callout_line_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_enable_callout_line_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::line_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->line_enable_callout_line_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::pie_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->pie_enable_callout_line_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::scatter_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->scatter_enable_callout_line_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::stacked_area_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->stacked_area_enable_callout_line_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::stacked_bar_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->stacked_bar_enable_callout_line_;
}
const ::TSCHSOS::SpecChartErrorBarCustomDataArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_custom_negative_data(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_error_bar_custom_negative_data_;
}
const ::TSCHSOS::SpecChartErrorBarCustomDataArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_custom_negative_data_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_error_bar_custom_negative_data_scatter_x_;
}
const ::TSCHSOS::SpecChartErrorBarCustomDataArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_custom_positive_data(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_error_bar_custom_positive_data_;
}
const ::TSCHSOS::SpecChartErrorBarCustomDataArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_custom_positive_data_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_error_bar_custom_positive_data_scatter_x_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_fixed_value(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_error_bar_fixed_value_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_fixed_value_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_error_bar_fixed_value_scatter_x_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_percent_value(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_error_bar_percent_value_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_percent_value_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_error_bar_percent_value_scatter_x_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_setting(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_error_bar_setting_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_setting_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_error_bar_setting_scatter_x_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_std_dev_value(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_error_bar_std_dev_value_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_std_dev_value_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_error_bar_std_dev_value_scatter_x_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_error_bar_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_type_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_error_bar_type_scatter_x_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::pie_label_explosion(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->pie_label_explosion_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bubble_line_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->bubble_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::line_line_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->line_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::mixed_line_line_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_line_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::scatter_line_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->scatter_line_type_;
}
const ::TSCHSOS::SpecNumberFormatArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_number_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_number_format_;
}
const ::TSCHSOS::SpecNumberFormatArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::pie_number_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->pie_number_format_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_number_format_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_number_format_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::pie_number_format_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->pie_number_format_type_;
}
const ::TSCHSOS::SpecNumberFormatArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::stacked_percent_number_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->stacked_percent_number_format_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_series_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_series_type_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_show_error_bar(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_show_error_bar_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_show_error_bar_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_show_error_bar_scatter_x_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bubble_show_labels_in_front(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->bubble_show_labels_in_front_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_show_labels_in_front(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_show_labels_in_front_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::scatter_show_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->scatter_show_line_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bubble_show_negative_data(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->bubble_show_negative_data_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bubble_show_series_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->bubble_show_series_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::pie_show_series_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->pie_show_series_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::scatter_show_series_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->scatter_show_series_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::area_show_symbol(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->area_show_symbol_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::line_show_symbol(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->line_show_symbol_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::mixed_area_show_symbol(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_area_show_symbol_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::mixed_line_show_symbol(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_line_show_symbol_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::scatter_show_symbol(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->scatter_show_symbol_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_show_trend_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_show_trend_line_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::area_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->area_show_value_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bar_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->bar_show_value_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bubble_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->bubble_show_value_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_show_value_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::line_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->line_show_value_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::mixed_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_show_value_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::pie_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->pie_show_value_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::scatter_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->scatter_show_value_labels_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bubble_size_dimension(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->bubble_size_dimension_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::area_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->area_stack_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bar_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->bar_stack_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bubble_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->bubble_stack_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_stack_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::line_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->line_stack_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::pie_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->pie_stack_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::scatter_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->scatter_stack_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::stacked_area_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->stacked_area_stack_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::stacked_bar_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->stacked_bar_stack_labels_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::area_symbol_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->area_symbol_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::line_symbol_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->line_symbol_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::mixed_area_symbol_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_area_symbol_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::mixed_line_symbol_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_line_symbol_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::scatter_symbol_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->scatter_symbol_type_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_trend_line_equation_offset_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_trend_line_equation_offset_x_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_trend_line_equation_offset_y(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_trend_line_equation_offset_y_;
}
const ::TSSSOS::SpecStringArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_trend_line_label_string(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_trend_line_label_string_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_trend_line_order(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_trend_line_order_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_trend_line_period(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_trend_line_period_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_trend_line_r_squared_offset_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_trend_line_r_squared_offset_x_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_trend_line_r_squared_offset_y(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_trend_line_r_squared_offset_y_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_trend_line_show_equation(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_trend_line_show_equation_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_trend_line_show_label(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_trend_line_show_label_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_trend_line_show_r2_value(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_trend_line_show_r2_value_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_trend_line_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_trend_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bubble_value_labels_axis(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->bubble_value_labels_axis_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::scatter_value_labels_axis(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->scatter_value_labels_axis_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::pie_wedge_explosion(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->pie_wedge_explosion_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_y_axis_ordinal(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->default_y_axis_ordinal_;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_pie23_label_explosion() {
  if (pie23_label_explosion_ != nullptr) pie23_label_explosion_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bubble_adjustment_scale() {
  if (bubble_adjustment_scale_ != nullptr) bubble_adjustment_scale_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_area_enable_callout_line() {
  if (area_enable_callout_line_ != nullptr) area_enable_callout_line_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bar_enable_callout_line() {
  if (bar_enable_callout_line_ != nullptr) bar_enable_callout_line_->Clear();
  _has_bits_[0] &= ~0x00000100u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bubble_enable_callout_line() {
  if (bubble_enable_callout_line_ != nullptr) bubble_enable_callout_line_->Clear();
  _has_bits_[0] &= ~0x00000200u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_enable_callout_line() {
  if (default_enable_callout_line_ != nullptr) default_enable_callout_line_->Clear();
  _has_bits_[0] &= ~0x00000400u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_line_enable_callout_line() {
  if (line_enable_callout_line_ != nullptr) line_enable_callout_line_->Clear();
  _has_bits_[0] &= ~0x00000800u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_pie_enable_callout_line() {
  if (pie_enable_callout_line_ != nullptr) pie_enable_callout_line_->Clear();
  _has_bits_[0] &= ~0x00001000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_scatter_enable_callout_line() {
  if (scatter_enable_callout_line_ != nullptr) scatter_enable_callout_line_->Clear();
  _has_bits_[0] &= ~0x00002000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_stacked_area_enable_callout_line() {
  if (stacked_area_enable_callout_line_ != nullptr) stacked_area_enable_callout_line_->Clear();
  _has_bits_[0] &= ~0x00004000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_stacked_bar_enable_callout_line() {
  if (stacked_bar_enable_callout_line_ != nullptr) stacked_bar_enable_callout_line_->Clear();
  _has_bits_[0] &= ~0x00008000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_error_bar_fixed_value() {
  if (default_error_bar_fixed_value_ != nullptr) default_error_bar_fixed_value_->Clear();
  _has_bits_[0] &= ~0x00100000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_error_bar_fixed_value_scatter_x() {
  if (default_error_bar_fixed_value_scatter_x_ != nullptr) default_error_bar_fixed_value_scatter_x_->Clear();
  _has_bits_[0] &= ~0x00200000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_error_bar_percent_value() {
  if (default_error_bar_percent_value_ != nullptr) default_error_bar_percent_value_->Clear();
  _has_bits_[0] &= ~0x00400000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_error_bar_percent_value_scatter_x() {
  if (default_error_bar_percent_value_scatter_x_ != nullptr) default_error_bar_percent_value_scatter_x_->Clear();
  _has_bits_[0] &= ~0x00800000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_error_bar_setting() {
  if (default_error_bar_setting_ != nullptr) default_error_bar_setting_->Clear();
  _has_bits_[0] &= ~0x01000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_error_bar_setting_scatter_x() {
  if (default_error_bar_setting_scatter_x_ != nullptr) default_error_bar_setting_scatter_x_->Clear();
  _has_bits_[0] &= ~0x02000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_error_bar_std_dev_value() {
  if (default_error_bar_std_dev_value_ != nullptr) default_error_bar_std_dev_value_->Clear();
  _has_bits_[0] &= ~0x04000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_error_bar_std_dev_value_scatter_x() {
  if (default_error_bar_std_dev_value_scatter_x_ != nullptr) default_error_bar_std_dev_value_scatter_x_->Clear();
  _has_bits_[0] &= ~0x08000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_error_bar_type() {
  if (default_error_bar_type_ != nullptr) default_error_bar_type_->Clear();
  _has_bits_[0] &= ~0x10000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_error_bar_type_scatter_x() {
  if (default_error_bar_type_scatter_x_ != nullptr) default_error_bar_type_scatter_x_->Clear();
  _has_bits_[0] &= ~0x20000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_pie_label_explosion() {
  if (pie_label_explosion_ != nullptr) pie_label_explosion_->Clear();
  _has_bits_[0] &= ~0x40000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bubble_line_type() {
  if (bubble_line_type_ != nullptr) bubble_line_type_->Clear();
  _has_bits_[0] &= ~0x80000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_line_line_type() {
  if (line_line_type_ != nullptr) line_line_type_->Clear();
  _has_bits_[1] &= ~0x00000001u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_mixed_line_line_type() {
  if (mixed_line_line_type_ != nullptr) mixed_line_line_type_->Clear();
  _has_bits_[1] &= ~0x00000002u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_scatter_line_type() {
  if (scatter_line_type_ != nullptr) scatter_line_type_->Clear();
  _has_bits_[1] &= ~0x00000004u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_number_format_type() {
  if (default_number_format_type_ != nullptr) default_number_format_type_->Clear();
  _has_bits_[1] &= ~0x00000020u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_pie_number_format_type() {
  if (pie_number_format_type_ != nullptr) pie_number_format_type_->Clear();
  _has_bits_[1] &= ~0x00000040u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_series_type() {
  if (default_series_type_ != nullptr) default_series_type_->Clear();
  _has_bits_[1] &= ~0x00000100u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_show_error_bar() {
  if (default_show_error_bar_ != nullptr) default_show_error_bar_->Clear();
  _has_bits_[1] &= ~0x00000200u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_show_error_bar_scatter_x() {
  if (default_show_error_bar_scatter_x_ != nullptr) default_show_error_bar_scatter_x_->Clear();
  _has_bits_[1] &= ~0x00000400u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bubble_show_labels_in_front() {
  if (bubble_show_labels_in_front_ != nullptr) bubble_show_labels_in_front_->Clear();
  _has_bits_[1] &= ~0x00000800u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_show_labels_in_front() {
  if (default_show_labels_in_front_ != nullptr) default_show_labels_in_front_->Clear();
  _has_bits_[1] &= ~0x00001000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_scatter_show_line() {
  if (scatter_show_line_ != nullptr) scatter_show_line_->Clear();
  _has_bits_[1] &= ~0x00002000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bubble_show_negative_data() {
  if (bubble_show_negative_data_ != nullptr) bubble_show_negative_data_->Clear();
  _has_bits_[1] &= ~0x00004000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bubble_show_series_labels() {
  if (bubble_show_series_labels_ != nullptr) bubble_show_series_labels_->Clear();
  _has_bits_[1] &= ~0x00008000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_pie_show_series_labels() {
  if (pie_show_series_labels_ != nullptr) pie_show_series_labels_->Clear();
  _has_bits_[1] &= ~0x00010000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_scatter_show_series_labels() {
  if (scatter_show_series_labels_ != nullptr) scatter_show_series_labels_->Clear();
  _has_bits_[1] &= ~0x00020000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_area_show_symbol() {
  if (area_show_symbol_ != nullptr) area_show_symbol_->Clear();
  _has_bits_[1] &= ~0x00040000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_line_show_symbol() {
  if (line_show_symbol_ != nullptr) line_show_symbol_->Clear();
  _has_bits_[1] &= ~0x00080000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_mixed_area_show_symbol() {
  if (mixed_area_show_symbol_ != nullptr) mixed_area_show_symbol_->Clear();
  _has_bits_[1] &= ~0x00100000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_mixed_line_show_symbol() {
  if (mixed_line_show_symbol_ != nullptr) mixed_line_show_symbol_->Clear();
  _has_bits_[1] &= ~0x00200000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_scatter_show_symbol() {
  if (scatter_show_symbol_ != nullptr) scatter_show_symbol_->Clear();
  _has_bits_[1] &= ~0x00400000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_show_trend_line() {
  if (default_show_trend_line_ != nullptr) default_show_trend_line_->Clear();
  _has_bits_[1] &= ~0x00800000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_area_show_value_labels() {
  if (area_show_value_labels_ != nullptr) area_show_value_labels_->Clear();
  _has_bits_[1] &= ~0x01000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bar_show_value_labels() {
  if (bar_show_value_labels_ != nullptr) bar_show_value_labels_->Clear();
  _has_bits_[1] &= ~0x02000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bubble_show_value_labels() {
  if (bubble_show_value_labels_ != nullptr) bubble_show_value_labels_->Clear();
  _has_bits_[1] &= ~0x04000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_show_value_labels() {
  if (default_show_value_labels_ != nullptr) default_show_value_labels_->Clear();
  _has_bits_[1] &= ~0x08000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_line_show_value_labels() {
  if (line_show_value_labels_ != nullptr) line_show_value_labels_->Clear();
  _has_bits_[1] &= ~0x10000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_mixed_show_value_labels() {
  if (mixed_show_value_labels_ != nullptr) mixed_show_value_labels_->Clear();
  _has_bits_[1] &= ~0x20000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_pie_show_value_labels() {
  if (pie_show_value_labels_ != nullptr) pie_show_value_labels_->Clear();
  _has_bits_[1] &= ~0x40000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_scatter_show_value_labels() {
  if (scatter_show_value_labels_ != nullptr) scatter_show_value_labels_->Clear();
  _has_bits_[1] &= ~0x80000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bubble_size_dimension() {
  if (bubble_size_dimension_ != nullptr) bubble_size_dimension_->Clear();
  _has_bits_[2] &= ~0x00000001u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_area_stack_labels() {
  if (area_stack_labels_ != nullptr) area_stack_labels_->Clear();
  _has_bits_[2] &= ~0x00000002u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bar_stack_labels() {
  if (bar_stack_labels_ != nullptr) bar_stack_labels_->Clear();
  _has_bits_[2] &= ~0x00000004u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bubble_stack_labels() {
  if (bubble_stack_labels_ != nullptr) bubble_stack_labels_->Clear();
  _has_bits_[2] &= ~0x00000008u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_stack_labels() {
  if (default_stack_labels_ != nullptr) default_stack_labels_->Clear();
  _has_bits_[2] &= ~0x00000010u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_line_stack_labels() {
  if (line_stack_labels_ != nullptr) line_stack_labels_->Clear();
  _has_bits_[2] &= ~0x00000020u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_pie_stack_labels() {
  if (pie_stack_labels_ != nullptr) pie_stack_labels_->Clear();
  _has_bits_[2] &= ~0x00000040u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_scatter_stack_labels() {
  if (scatter_stack_labels_ != nullptr) scatter_stack_labels_->Clear();
  _has_bits_[2] &= ~0x00000080u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_stacked_area_stack_labels() {
  if (stacked_area_stack_labels_ != nullptr) stacked_area_stack_labels_->Clear();
  _has_bits_[2] &= ~0x00000100u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_stacked_bar_stack_labels() {
  if (stacked_bar_stack_labels_ != nullptr) stacked_bar_stack_labels_->Clear();
  _has_bits_[2] &= ~0x00000200u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_area_symbol_type() {
  if (area_symbol_type_ != nullptr) area_symbol_type_->Clear();
  _has_bits_[2] &= ~0x00000400u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_line_symbol_type() {
  if (line_symbol_type_ != nullptr) line_symbol_type_->Clear();
  _has_bits_[2] &= ~0x00000800u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_mixed_area_symbol_type() {
  if (mixed_area_symbol_type_ != nullptr) mixed_area_symbol_type_->Clear();
  _has_bits_[2] &= ~0x00001000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_mixed_line_symbol_type() {
  if (mixed_line_symbol_type_ != nullptr) mixed_line_symbol_type_->Clear();
  _has_bits_[2] &= ~0x00002000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_scatter_symbol_type() {
  if (scatter_symbol_type_ != nullptr) scatter_symbol_type_->Clear();
  _has_bits_[2] &= ~0x00004000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_trend_line_equation_offset_x() {
  if (default_trend_line_equation_offset_x_ != nullptr) default_trend_line_equation_offset_x_->Clear();
  _has_bits_[2] &= ~0x00008000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_trend_line_equation_offset_y() {
  if (default_trend_line_equation_offset_y_ != nullptr) default_trend_line_equation_offset_y_->Clear();
  _has_bits_[2] &= ~0x00010000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_trend_line_label_string() {
  if (default_trend_line_label_string_ != nullptr) default_trend_line_label_string_->Clear();
  _has_bits_[2] &= ~0x00020000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_trend_line_order() {
  if (default_trend_line_order_ != nullptr) default_trend_line_order_->Clear();
  _has_bits_[2] &= ~0x00040000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_trend_line_period() {
  if (default_trend_line_period_ != nullptr) default_trend_line_period_->Clear();
  _has_bits_[2] &= ~0x00080000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_trend_line_r_squared_offset_x() {
  if (default_trend_line_r_squared_offset_x_ != nullptr) default_trend_line_r_squared_offset_x_->Clear();
  _has_bits_[2] &= ~0x00100000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_trend_line_r_squared_offset_y() {
  if (default_trend_line_r_squared_offset_y_ != nullptr) default_trend_line_r_squared_offset_y_->Clear();
  _has_bits_[2] &= ~0x00200000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_trend_line_show_equation() {
  if (default_trend_line_show_equation_ != nullptr) default_trend_line_show_equation_->Clear();
  _has_bits_[2] &= ~0x00400000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_trend_line_show_label() {
  if (default_trend_line_show_label_ != nullptr) default_trend_line_show_label_->Clear();
  _has_bits_[2] &= ~0x00800000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_trend_line_show_r2_value() {
  if (default_trend_line_show_r2_value_ != nullptr) default_trend_line_show_r2_value_->Clear();
  _has_bits_[2] &= ~0x01000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_trend_line_type() {
  if (default_trend_line_type_ != nullptr) default_trend_line_type_->Clear();
  _has_bits_[2] &= ~0x02000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bubble_value_labels_axis() {
  if (bubble_value_labels_axis_ != nullptr) bubble_value_labels_axis_->Clear();
  _has_bits_[2] &= ~0x04000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_scatter_value_labels_axis() {
  if (scatter_value_labels_axis_ != nullptr) scatter_value_labels_axis_->Clear();
  _has_bits_[2] &= ~0x08000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_pie_wedge_explosion() {
  if (pie_wedge_explosion_ != nullptr) pie_wedge_explosion_->Clear();
  _has_bits_[2] &= ~0x10000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_y_axis_ordinal() {
  if (default_y_axis_ordinal_ != nullptr) default_y_axis_ordinal_->Clear();
  _has_bits_[2] &= ~0x20000000u;
}
ChartSeriesNonStylePropertyChangeSetArchive::ChartSeriesNonStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive)
}
ChartSeriesNonStylePropertyChangeSetArchive::ChartSeriesNonStylePropertyChangeSetArchive(const ChartSeriesNonStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_default10_date_format()) {
    default10_date_format_ = new ::TSCHSOS::SpecFormatObjectArchive(*from.default10_date_format_);
  } else {
    default10_date_format_ = nullptr;
  }
  if (from._internal_has_default10_number_format()) {
    default10_number_format_ = new ::TSCHSOS::SpecNumberFormatArchive(*from.default10_number_format_);
  } else {
    default10_number_format_ = nullptr;
  }
  if (from._internal_has_pie10_number_format()) {
    pie10_number_format_ = new ::TSCHSOS::SpecNumberFormatArchive(*from.pie10_number_format_);
  } else {
    pie10_number_format_ = nullptr;
  }
  if (from._internal_has_pie23_label_explosion()) {
    pie23_label_explosion_ = new ::TSSSOS::SpecDoubleArchive(*from.pie23_label_explosion_);
  } else {
    pie23_label_explosion_ = nullptr;
  }
  if (from._internal_has_bubble_adjustment_scale()) {
    bubble_adjustment_scale_ = new ::TSSSOS::SpecDoubleArchive(*from.bubble_adjustment_scale_);
  } else {
    bubble_adjustment_scale_ = nullptr;
  }
  if (from._internal_has_default_date_format()) {
    default_date_format_ = new ::TSCHSOS::SpecFormatObjectArchive(*from.default_date_format_);
  } else {
    default_date_format_ = nullptr;
  }
  if (from._internal_has_default_duration_format()) {
    default_duration_format_ = new ::TSCHSOS::SpecFormatObjectArchive(*from.default_duration_format_);
  } else {
    default_duration_format_ = nullptr;
  }
  if (from._internal_has_area_enable_callout_line()) {
    area_enable_callout_line_ = new ::TSSSOS::SpecIntegerArchive(*from.area_enable_callout_line_);
  } else {
    area_enable_callout_line_ = nullptr;
  }
  if (from._internal_has_bar_enable_callout_line()) {
    bar_enable_callout_line_ = new ::TSSSOS::SpecIntegerArchive(*from.bar_enable_callout_line_);
  } else {
    bar_enable_callout_line_ = nullptr;
  }
  if (from._internal_has_bubble_enable_callout_line()) {
    bubble_enable_callout_line_ = new ::TSSSOS::SpecIntegerArchive(*from.bubble_enable_callout_line_);
  } else {
    bubble_enable_callout_line_ = nullptr;
  }
  if (from._internal_has_default_enable_callout_line()) {
    default_enable_callout_line_ = new ::TSSSOS::SpecIntegerArchive(*from.default_enable_callout_line_);
  } else {
    default_enable_callout_line_ = nullptr;
  }
  if (from._internal_has_line_enable_callout_line()) {
    line_enable_callout_line_ = new ::TSSSOS::SpecIntegerArchive(*from.line_enable_callout_line_);
  } else {
    line_enable_callout_line_ = nullptr;
  }
  if (from._internal_has_pie_enable_callout_line()) {
    pie_enable_callout_line_ = new ::TSSSOS::SpecIntegerArchive(*from.pie_enable_callout_line_);
  } else {
    pie_enable_callout_line_ = nullptr;
  }
  if (from._internal_has_scatter_enable_callout_line()) {
    scatter_enable_callout_line_ = new ::TSSSOS::SpecIntegerArchive(*from.scatter_enable_callout_line_);
  } else {
    scatter_enable_callout_line_ = nullptr;
  }
  if (from._internal_has_stacked_area_enable_callout_line()) {
    stacked_area_enable_callout_line_ = new ::TSSSOS::SpecIntegerArchive(*from.stacked_area_enable_callout_line_);
  } else {
    stacked_area_enable_callout_line_ = nullptr;
  }
  if (from._internal_has_stacked_bar_enable_callout_line()) {
    stacked_bar_enable_callout_line_ = new ::TSSSOS::SpecIntegerArchive(*from.stacked_bar_enable_callout_line_);
  } else {
    stacked_bar_enable_callout_line_ = nullptr;
  }
  if (from._internal_has_default_error_bar_custom_negative_data()) {
    default_error_bar_custom_negative_data_ = new ::TSCHSOS::SpecChartErrorBarCustomDataArchive(*from.default_error_bar_custom_negative_data_);
  } else {
    default_error_bar_custom_negative_data_ = nullptr;
  }
  if (from._internal_has_default_error_bar_custom_negative_data_scatter_x()) {
    default_error_bar_custom_negative_data_scatter_x_ = new ::TSCHSOS::SpecChartErrorBarCustomDataArchive(*from.default_error_bar_custom_negative_data_scatter_x_);
  } else {
    default_error_bar_custom_negative_data_scatter_x_ = nullptr;
  }
  if (from._internal_has_default_error_bar_custom_positive_data()) {
    default_error_bar_custom_positive_data_ = new ::TSCHSOS::SpecChartErrorBarCustomDataArchive(*from.default_error_bar_custom_positive_data_);
  } else {
    default_error_bar_custom_positive_data_ = nullptr;
  }
  if (from._internal_has_default_error_bar_custom_positive_data_scatter_x()) {
    default_error_bar_custom_positive_data_scatter_x_ = new ::TSCHSOS::SpecChartErrorBarCustomDataArchive(*from.default_error_bar_custom_positive_data_scatter_x_);
  } else {
    default_error_bar_custom_positive_data_scatter_x_ = nullptr;
  }
  if (from._internal_has_default_error_bar_fixed_value()) {
    default_error_bar_fixed_value_ = new ::TSSSOS::SpecDoubleArchive(*from.default_error_bar_fixed_value_);
  } else {
    default_error_bar_fixed_value_ = nullptr;
  }
  if (from._internal_has_default_error_bar_fixed_value_scatter_x()) {
    default_error_bar_fixed_value_scatter_x_ = new ::TSSSOS::SpecDoubleArchive(*from.default_error_bar_fixed_value_scatter_x_);
  } else {
    default_error_bar_fixed_value_scatter_x_ = nullptr;
  }
  if (from._internal_has_default_error_bar_percent_value()) {
    default_error_bar_percent_value_ = new ::TSSSOS::SpecDoubleArchive(*from.default_error_bar_percent_value_);
  } else {
    default_error_bar_percent_value_ = nullptr;
  }
  if (from._internal_has_default_error_bar_percent_value_scatter_x()) {
    default_error_bar_percent_value_scatter_x_ = new ::TSSSOS::SpecDoubleArchive(*from.default_error_bar_percent_value_scatter_x_);
  } else {
    default_error_bar_percent_value_scatter_x_ = nullptr;
  }
  if (from._internal_has_default_error_bar_setting()) {
    default_error_bar_setting_ = new ::TSSSOS::SpecIntegerArchive(*from.default_error_bar_setting_);
  } else {
    default_error_bar_setting_ = nullptr;
  }
  if (from._internal_has_default_error_bar_setting_scatter_x()) {
    default_error_bar_setting_scatter_x_ = new ::TSSSOS::SpecIntegerArchive(*from.default_error_bar_setting_scatter_x_);
  } else {
    default_error_bar_setting_scatter_x_ = nullptr;
  }
  if (from._internal_has_default_error_bar_std_dev_value()) {
    default_error_bar_std_dev_value_ = new ::TSSSOS::SpecDoubleArchive(*from.default_error_bar_std_dev_value_);
  } else {
    default_error_bar_std_dev_value_ = nullptr;
  }
  if (from._internal_has_default_error_bar_std_dev_value_scatter_x()) {
    default_error_bar_std_dev_value_scatter_x_ = new ::TSSSOS::SpecDoubleArchive(*from.default_error_bar_std_dev_value_scatter_x_);
  } else {
    default_error_bar_std_dev_value_scatter_x_ = nullptr;
  }
  if (from._internal_has_default_error_bar_type()) {
    default_error_bar_type_ = new ::TSSSOS::SpecIntegerArchive(*from.default_error_bar_type_);
  } else {
    default_error_bar_type_ = nullptr;
  }
  if (from._internal_has_default_error_bar_type_scatter_x()) {
    default_error_bar_type_scatter_x_ = new ::TSSSOS::SpecIntegerArchive(*from.default_error_bar_type_scatter_x_);
  } else {
    default_error_bar_type_scatter_x_ = nullptr;
  }
  if (from._internal_has_pie_label_explosion()) {
    pie_label_explosion_ = new ::TSSSOS::SpecDoubleArchive(*from.pie_label_explosion_);
  } else {
    pie_label_explosion_ = nullptr;
  }
  if (from._internal_has_bubble_line_type()) {
    bubble_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from.bubble_line_type_);
  } else {
    bubble_line_type_ = nullptr;
  }
  if (from._internal_has_line_line_type()) {
    line_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from.line_line_type_);
  } else {
    line_line_type_ = nullptr;
  }
  if (from._internal_has_mixed_line_line_type()) {
    mixed_line_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from.mixed_line_line_type_);
  } else {
    mixed_line_line_type_ = nullptr;
  }
  if (from._internal_has_scatter_line_type()) {
    scatter_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from.scatter_line_type_);
  } else {
    scatter_line_type_ = nullptr;
  }
  if (from._internal_has_default_number_format()) {
    default_number_format_ = new ::TSCHSOS::SpecNumberFormatArchive(*from.default_number_format_);
  } else {
    default_number_format_ = nullptr;
  }
  if (from._internal_has_pie_number_format()) {
    pie_number_format_ = new ::TSCHSOS::SpecNumberFormatArchive(*from.pie_number_format_);
  } else {
    pie_number_format_ = nullptr;
  }
  if (from._internal_has_default_number_format_type()) {
    default_number_format_type_ = new ::TSSSOS::SpecIntegerArchive(*from.default_number_format_type_);
  } else {
    default_number_format_type_ = nullptr;
  }
  if (from._internal_has_pie_number_format_type()) {
    pie_number_format_type_ = new ::TSSSOS::SpecIntegerArchive(*from.pie_number_format_type_);
  } else {
    pie_number_format_type_ = nullptr;
  }
  if (from._internal_has_stacked_percent_number_format()) {
    stacked_percent_number_format_ = new ::TSCHSOS::SpecNumberFormatArchive(*from.stacked_percent_number_format_);
  } else {
    stacked_percent_number_format_ = nullptr;
  }
  if (from._internal_has_default_series_type()) {
    default_series_type_ = new ::TSSSOS::SpecIntegerArchive(*from.default_series_type_);
  } else {
    default_series_type_ = nullptr;
  }
  if (from._internal_has_default_show_error_bar()) {
    default_show_error_bar_ = new ::TSSSOS::SpecBoolArchive(*from.default_show_error_bar_);
  } else {
    default_show_error_bar_ = nullptr;
  }
  if (from._internal_has_default_show_error_bar_scatter_x()) {
    default_show_error_bar_scatter_x_ = new ::TSSSOS::SpecBoolArchive(*from.default_show_error_bar_scatter_x_);
  } else {
    default_show_error_bar_scatter_x_ = nullptr;
  }
  if (from._internal_has_bubble_show_labels_in_front()) {
    bubble_show_labels_in_front_ = new ::TSSSOS::SpecBoolArchive(*from.bubble_show_labels_in_front_);
  } else {
    bubble_show_labels_in_front_ = nullptr;
  }
  if (from._internal_has_default_show_labels_in_front()) {
    default_show_labels_in_front_ = new ::TSSSOS::SpecBoolArchive(*from.default_show_labels_in_front_);
  } else {
    default_show_labels_in_front_ = nullptr;
  }
  if (from._internal_has_scatter_show_line()) {
    scatter_show_line_ = new ::TSSSOS::SpecBoolArchive(*from.scatter_show_line_);
  } else {
    scatter_show_line_ = nullptr;
  }
  if (from._internal_has_bubble_show_negative_data()) {
    bubble_show_negative_data_ = new ::TSSSOS::SpecBoolArchive(*from.bubble_show_negative_data_);
  } else {
    bubble_show_negative_data_ = nullptr;
  }
  if (from._internal_has_bubble_show_series_labels()) {
    bubble_show_series_labels_ = new ::TSSSOS::SpecBoolArchive(*from.bubble_show_series_labels_);
  } else {
    bubble_show_series_labels_ = nullptr;
  }
  if (from._internal_has_pie_show_series_labels()) {
    pie_show_series_labels_ = new ::TSSSOS::SpecBoolArchive(*from.pie_show_series_labels_);
  } else {
    pie_show_series_labels_ = nullptr;
  }
  if (from._internal_has_scatter_show_series_labels()) {
    scatter_show_series_labels_ = new ::TSSSOS::SpecBoolArchive(*from.scatter_show_series_labels_);
  } else {
    scatter_show_series_labels_ = nullptr;
  }
  if (from._internal_has_area_show_symbol()) {
    area_show_symbol_ = new ::TSSSOS::SpecBoolArchive(*from.area_show_symbol_);
  } else {
    area_show_symbol_ = nullptr;
  }
  if (from._internal_has_line_show_symbol()) {
    line_show_symbol_ = new ::TSSSOS::SpecBoolArchive(*from.line_show_symbol_);
  } else {
    line_show_symbol_ = nullptr;
  }
  if (from._internal_has_mixed_area_show_symbol()) {
    mixed_area_show_symbol_ = new ::TSSSOS::SpecBoolArchive(*from.mixed_area_show_symbol_);
  } else {
    mixed_area_show_symbol_ = nullptr;
  }
  if (from._internal_has_mixed_line_show_symbol()) {
    mixed_line_show_symbol_ = new ::TSSSOS::SpecBoolArchive(*from.mixed_line_show_symbol_);
  } else {
    mixed_line_show_symbol_ = nullptr;
  }
  if (from._internal_has_scatter_show_symbol()) {
    scatter_show_symbol_ = new ::TSSSOS::SpecBoolArchive(*from.scatter_show_symbol_);
  } else {
    scatter_show_symbol_ = nullptr;
  }
  if (from._internal_has_default_show_trend_line()) {
    default_show_trend_line_ = new ::TSSSOS::SpecBoolArchive(*from.default_show_trend_line_);
  } else {
    default_show_trend_line_ = nullptr;
  }
  if (from._internal_has_area_show_value_labels()) {
    area_show_value_labels_ = new ::TSSSOS::SpecBoolArchive(*from.area_show_value_labels_);
  } else {
    area_show_value_labels_ = nullptr;
  }
  if (from._internal_has_bar_show_value_labels()) {
    bar_show_value_labels_ = new ::TSSSOS::SpecBoolArchive(*from.bar_show_value_labels_);
  } else {
    bar_show_value_labels_ = nullptr;
  }
  if (from._internal_has_bubble_show_value_labels()) {
    bubble_show_value_labels_ = new ::TSSSOS::SpecBoolArchive(*from.bubble_show_value_labels_);
  } else {
    bubble_show_value_labels_ = nullptr;
  }
  if (from._internal_has_default_show_value_labels()) {
    default_show_value_labels_ = new ::TSSSOS::SpecBoolArchive(*from.default_show_value_labels_);
  } else {
    default_show_value_labels_ = nullptr;
  }
  if (from._internal_has_line_show_value_labels()) {
    line_show_value_labels_ = new ::TSSSOS::SpecBoolArchive(*from.line_show_value_labels_);
  } else {
    line_show_value_labels_ = nullptr;
  }
  if (from._internal_has_mixed_show_value_labels()) {
    mixed_show_value_labels_ = new ::TSSSOS::SpecBoolArchive(*from.mixed_show_value_labels_);
  } else {
    mixed_show_value_labels_ = nullptr;
  }
  if (from._internal_has_pie_show_value_labels()) {
    pie_show_value_labels_ = new ::TSSSOS::SpecBoolArchive(*from.pie_show_value_labels_);
  } else {
    pie_show_value_labels_ = nullptr;
  }
  if (from._internal_has_scatter_show_value_labels()) {
    scatter_show_value_labels_ = new ::TSSSOS::SpecBoolArchive(*from.scatter_show_value_labels_);
  } else {
    scatter_show_value_labels_ = nullptr;
  }
  if (from._internal_has_bubble_size_dimension()) {
    bubble_size_dimension_ = new ::TSSSOS::SpecIntegerArchive(*from.bubble_size_dimension_);
  } else {
    bubble_size_dimension_ = nullptr;
  }
  if (from._internal_has_area_stack_labels()) {
    area_stack_labels_ = new ::TSSSOS::SpecBoolArchive(*from.area_stack_labels_);
  } else {
    area_stack_labels_ = nullptr;
  }
  if (from._internal_has_bar_stack_labels()) {
    bar_stack_labels_ = new ::TSSSOS::SpecBoolArchive(*from.bar_stack_labels_);
  } else {
    bar_stack_labels_ = nullptr;
  }
  if (from._internal_has_bubble_stack_labels()) {
    bubble_stack_labels_ = new ::TSSSOS::SpecBoolArchive(*from.bubble_stack_labels_);
  } else {
    bubble_stack_labels_ = nullptr;
  }
  if (from._internal_has_default_stack_labels()) {
    default_stack_labels_ = new ::TSSSOS::SpecBoolArchive(*from.default_stack_labels_);
  } else {
    default_stack_labels_ = nullptr;
  }
  if (from._internal_has_line_stack_labels()) {
    line_stack_labels_ = new ::TSSSOS::SpecBoolArchive(*from.line_stack_labels_);
  } else {
    line_stack_labels_ = nullptr;
  }
  if (from._internal_has_pie_stack_labels()) {
    pie_stack_labels_ = new ::TSSSOS::SpecBoolArchive(*from.pie_stack_labels_);
  } else {
    pie_stack_labels_ = nullptr;
  }
  if (from._internal_has_scatter_stack_labels()) {
    scatter_stack_labels_ = new ::TSSSOS::SpecBoolArchive(*from.scatter_stack_labels_);
  } else {
    scatter_stack_labels_ = nullptr;
  }
  if (from._internal_has_stacked_area_stack_labels()) {
    stacked_area_stack_labels_ = new ::TSSSOS::SpecBoolArchive(*from.stacked_area_stack_labels_);
  } else {
    stacked_area_stack_labels_ = nullptr;
  }
  if (from._internal_has_stacked_bar_stack_labels()) {
    stacked_bar_stack_labels_ = new ::TSSSOS::SpecBoolArchive(*from.stacked_bar_stack_labels_);
  } else {
    stacked_bar_stack_labels_ = nullptr;
  }
  if (from._internal_has_area_symbol_type()) {
    area_symbol_type_ = new ::TSSSOS::SpecIntegerArchive(*from.area_symbol_type_);
  } else {
    area_symbol_type_ = nullptr;
  }
  if (from._internal_has_line_symbol_type()) {
    line_symbol_type_ = new ::TSSSOS::SpecIntegerArchive(*from.line_symbol_type_);
  } else {
    line_symbol_type_ = nullptr;
  }
  if (from._internal_has_mixed_area_symbol_type()) {
    mixed_area_symbol_type_ = new ::TSSSOS::SpecIntegerArchive(*from.mixed_area_symbol_type_);
  } else {
    mixed_area_symbol_type_ = nullptr;
  }
  if (from._internal_has_mixed_line_symbol_type()) {
    mixed_line_symbol_type_ = new ::TSSSOS::SpecIntegerArchive(*from.mixed_line_symbol_type_);
  } else {
    mixed_line_symbol_type_ = nullptr;
  }
  if (from._internal_has_scatter_symbol_type()) {
    scatter_symbol_type_ = new ::TSSSOS::SpecIntegerArchive(*from.scatter_symbol_type_);
  } else {
    scatter_symbol_type_ = nullptr;
  }
  if (from._internal_has_default_trend_line_equation_offset_x()) {
    default_trend_line_equation_offset_x_ = new ::TSSSOS::SpecDoubleArchive(*from.default_trend_line_equation_offset_x_);
  } else {
    default_trend_line_equation_offset_x_ = nullptr;
  }
  if (from._internal_has_default_trend_line_equation_offset_y()) {
    default_trend_line_equation_offset_y_ = new ::TSSSOS::SpecDoubleArchive(*from.default_trend_line_equation_offset_y_);
  } else {
    default_trend_line_equation_offset_y_ = nullptr;
  }
  if (from._internal_has_default_trend_line_label_string()) {
    default_trend_line_label_string_ = new ::TSSSOS::SpecStringArchive(*from.default_trend_line_label_string_);
  } else {
    default_trend_line_label_string_ = nullptr;
  }
  if (from._internal_has_default_trend_line_order()) {
    default_trend_line_order_ = new ::TSSSOS::SpecIntegerArchive(*from.default_trend_line_order_);
  } else {
    default_trend_line_order_ = nullptr;
  }
  if (from._internal_has_default_trend_line_period()) {
    default_trend_line_period_ = new ::TSSSOS::SpecIntegerArchive(*from.default_trend_line_period_);
  } else {
    default_trend_line_period_ = nullptr;
  }
  if (from._internal_has_default_trend_line_r_squared_offset_x()) {
    default_trend_line_r_squared_offset_x_ = new ::TSSSOS::SpecDoubleArchive(*from.default_trend_line_r_squared_offset_x_);
  } else {
    default_trend_line_r_squared_offset_x_ = nullptr;
  }
  if (from._internal_has_default_trend_line_r_squared_offset_y()) {
    default_trend_line_r_squared_offset_y_ = new ::TSSSOS::SpecDoubleArchive(*from.default_trend_line_r_squared_offset_y_);
  } else {
    default_trend_line_r_squared_offset_y_ = nullptr;
  }
  if (from._internal_has_default_trend_line_show_equation()) {
    default_trend_line_show_equation_ = new ::TSSSOS::SpecBoolArchive(*from.default_trend_line_show_equation_);
  } else {
    default_trend_line_show_equation_ = nullptr;
  }
  if (from._internal_has_default_trend_line_show_label()) {
    default_trend_line_show_label_ = new ::TSSSOS::SpecBoolArchive(*from.default_trend_line_show_label_);
  } else {
    default_trend_line_show_label_ = nullptr;
  }
  if (from._internal_has_default_trend_line_show_r2_value()) {
    default_trend_line_show_r2_value_ = new ::TSSSOS::SpecBoolArchive(*from.default_trend_line_show_r2_value_);
  } else {
    default_trend_line_show_r2_value_ = nullptr;
  }
  if (from._internal_has_default_trend_line_type()) {
    default_trend_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from.default_trend_line_type_);
  } else {
    default_trend_line_type_ = nullptr;
  }
  if (from._internal_has_bubble_value_labels_axis()) {
    bubble_value_labels_axis_ = new ::TSSSOS::SpecIntegerArchive(*from.bubble_value_labels_axis_);
  } else {
    bubble_value_labels_axis_ = nullptr;
  }
  if (from._internal_has_scatter_value_labels_axis()) {
    scatter_value_labels_axis_ = new ::TSSSOS::SpecIntegerArchive(*from.scatter_value_labels_axis_);
  } else {
    scatter_value_labels_axis_ = nullptr;
  }
  if (from._internal_has_pie_wedge_explosion()) {
    pie_wedge_explosion_ = new ::TSSSOS::SpecDoubleArchive(*from.pie_wedge_explosion_);
  } else {
    pie_wedge_explosion_ = nullptr;
  }
  if (from._internal_has_default_y_axis_ordinal()) {
    default_y_axis_ordinal_ = new ::TSSSOS::SpecIntegerArchive(*from.default_y_axis_ordinal_);
  } else {
    default_y_axis_ordinal_ = nullptr;
  }
  ::memcpy(&default10_date_format_undefined_, &from.default10_date_format_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&default_y_axis_ordinal_undefined_) -
    reinterpret_cast<char*>(&default10_date_format_undefined_)) + sizeof(default_y_axis_ordinal_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive)
}

void ChartSeriesNonStylePropertyChangeSetArchive::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&default10_date_format_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&default_y_axis_ordinal_undefined_) -
    reinterpret_cast<char*>(&default10_date_format_)) + sizeof(default_y_axis_ordinal_undefined_));
}

ChartSeriesNonStylePropertyChangeSetArchive::~ChartSeriesNonStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChartSeriesNonStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete default10_date_format_;
  if (this != internal_default_instance()) delete default10_number_format_;
  if (this != internal_default_instance()) delete pie10_number_format_;
  if (this != internal_default_instance()) delete pie23_label_explosion_;
  if (this != internal_default_instance()) delete bubble_adjustment_scale_;
  if (this != internal_default_instance()) delete default_date_format_;
  if (this != internal_default_instance()) delete default_duration_format_;
  if (this != internal_default_instance()) delete area_enable_callout_line_;
  if (this != internal_default_instance()) delete bar_enable_callout_line_;
  if (this != internal_default_instance()) delete bubble_enable_callout_line_;
  if (this != internal_default_instance()) delete default_enable_callout_line_;
  if (this != internal_default_instance()) delete line_enable_callout_line_;
  if (this != internal_default_instance()) delete pie_enable_callout_line_;
  if (this != internal_default_instance()) delete scatter_enable_callout_line_;
  if (this != internal_default_instance()) delete stacked_area_enable_callout_line_;
  if (this != internal_default_instance()) delete stacked_bar_enable_callout_line_;
  if (this != internal_default_instance()) delete default_error_bar_custom_negative_data_;
  if (this != internal_default_instance()) delete default_error_bar_custom_negative_data_scatter_x_;
  if (this != internal_default_instance()) delete default_error_bar_custom_positive_data_;
  if (this != internal_default_instance()) delete default_error_bar_custom_positive_data_scatter_x_;
  if (this != internal_default_instance()) delete default_error_bar_fixed_value_;
  if (this != internal_default_instance()) delete default_error_bar_fixed_value_scatter_x_;
  if (this != internal_default_instance()) delete default_error_bar_percent_value_;
  if (this != internal_default_instance()) delete default_error_bar_percent_value_scatter_x_;
  if (this != internal_default_instance()) delete default_error_bar_setting_;
  if (this != internal_default_instance()) delete default_error_bar_setting_scatter_x_;
  if (this != internal_default_instance()) delete default_error_bar_std_dev_value_;
  if (this != internal_default_instance()) delete default_error_bar_std_dev_value_scatter_x_;
  if (this != internal_default_instance()) delete default_error_bar_type_;
  if (this != internal_default_instance()) delete default_error_bar_type_scatter_x_;
  if (this != internal_default_instance()) delete pie_label_explosion_;
  if (this != internal_default_instance()) delete bubble_line_type_;
  if (this != internal_default_instance()) delete line_line_type_;
  if (this != internal_default_instance()) delete mixed_line_line_type_;
  if (this != internal_default_instance()) delete scatter_line_type_;
  if (this != internal_default_instance()) delete default_number_format_;
  if (this != internal_default_instance()) delete pie_number_format_;
  if (this != internal_default_instance()) delete default_number_format_type_;
  if (this != internal_default_instance()) delete pie_number_format_type_;
  if (this != internal_default_instance()) delete stacked_percent_number_format_;
  if (this != internal_default_instance()) delete default_series_type_;
  if (this != internal_default_instance()) delete default_show_error_bar_;
  if (this != internal_default_instance()) delete default_show_error_bar_scatter_x_;
  if (this != internal_default_instance()) delete bubble_show_labels_in_front_;
  if (this != internal_default_instance()) delete default_show_labels_in_front_;
  if (this != internal_default_instance()) delete scatter_show_line_;
  if (this != internal_default_instance()) delete bubble_show_negative_data_;
  if (this != internal_default_instance()) delete bubble_show_series_labels_;
  if (this != internal_default_instance()) delete pie_show_series_labels_;
  if (this != internal_default_instance()) delete scatter_show_series_labels_;
  if (this != internal_default_instance()) delete area_show_symbol_;
  if (this != internal_default_instance()) delete line_show_symbol_;
  if (this != internal_default_instance()) delete mixed_area_show_symbol_;
  if (this != internal_default_instance()) delete mixed_line_show_symbol_;
  if (this != internal_default_instance()) delete scatter_show_symbol_;
  if (this != internal_default_instance()) delete default_show_trend_line_;
  if (this != internal_default_instance()) delete area_show_value_labels_;
  if (this != internal_default_instance()) delete bar_show_value_labels_;
  if (this != internal_default_instance()) delete bubble_show_value_labels_;
  if (this != internal_default_instance()) delete default_show_value_labels_;
  if (this != internal_default_instance()) delete line_show_value_labels_;
  if (this != internal_default_instance()) delete mixed_show_value_labels_;
  if (this != internal_default_instance()) delete pie_show_value_labels_;
  if (this != internal_default_instance()) delete scatter_show_value_labels_;
  if (this != internal_default_instance()) delete bubble_size_dimension_;
  if (this != internal_default_instance()) delete area_stack_labels_;
  if (this != internal_default_instance()) delete bar_stack_labels_;
  if (this != internal_default_instance()) delete bubble_stack_labels_;
  if (this != internal_default_instance()) delete default_stack_labels_;
  if (this != internal_default_instance()) delete line_stack_labels_;
  if (this != internal_default_instance()) delete pie_stack_labels_;
  if (this != internal_default_instance()) delete scatter_stack_labels_;
  if (this != internal_default_instance()) delete stacked_area_stack_labels_;
  if (this != internal_default_instance()) delete stacked_bar_stack_labels_;
  if (this != internal_default_instance()) delete area_symbol_type_;
  if (this != internal_default_instance()) delete line_symbol_type_;
  if (this != internal_default_instance()) delete mixed_area_symbol_type_;
  if (this != internal_default_instance()) delete mixed_line_symbol_type_;
  if (this != internal_default_instance()) delete scatter_symbol_type_;
  if (this != internal_default_instance()) delete default_trend_line_equation_offset_x_;
  if (this != internal_default_instance()) delete default_trend_line_equation_offset_y_;
  if (this != internal_default_instance()) delete default_trend_line_label_string_;
  if (this != internal_default_instance()) delete default_trend_line_order_;
  if (this != internal_default_instance()) delete default_trend_line_period_;
  if (this != internal_default_instance()) delete default_trend_line_r_squared_offset_x_;
  if (this != internal_default_instance()) delete default_trend_line_r_squared_offset_y_;
  if (this != internal_default_instance()) delete default_trend_line_show_equation_;
  if (this != internal_default_instance()) delete default_trend_line_show_label_;
  if (this != internal_default_instance()) delete default_trend_line_show_r2_value_;
  if (this != internal_default_instance()) delete default_trend_line_type_;
  if (this != internal_default_instance()) delete bubble_value_labels_axis_;
  if (this != internal_default_instance()) delete scatter_value_labels_axis_;
  if (this != internal_default_instance()) delete pie_wedge_explosion_;
  if (this != internal_default_instance()) delete default_y_axis_ordinal_;
}

void ChartSeriesNonStylePropertyChangeSetArchive::ArenaDtor(void* object) {
  ChartSeriesNonStylePropertyChangeSetArchive* _this = reinterpret_cast< ChartSeriesNonStylePropertyChangeSetArchive* >(object);
  (void)_this;
}
void ChartSeriesNonStylePropertyChangeSetArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChartSeriesNonStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ChartSeriesNonStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(default10_date_format_ != nullptr);
      default10_date_format_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(default10_number_format_ != nullptr);
      default10_number_format_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(pie10_number_format_ != nullptr);
      pie10_number_format_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(pie23_label_explosion_ != nullptr);
      pie23_label_explosion_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(bubble_adjustment_scale_ != nullptr);
      bubble_adjustment_scale_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(default_date_format_ != nullptr);
      default_date_format_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(default_duration_format_ != nullptr);
      default_duration_format_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(area_enable_callout_line_ != nullptr);
      area_enable_callout_line_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(bar_enable_callout_line_ != nullptr);
      bar_enable_callout_line_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(bubble_enable_callout_line_ != nullptr);
      bubble_enable_callout_line_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(default_enable_callout_line_ != nullptr);
      default_enable_callout_line_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(line_enable_callout_line_ != nullptr);
      line_enable_callout_line_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(pie_enable_callout_line_ != nullptr);
      pie_enable_callout_line_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(scatter_enable_callout_line_ != nullptr);
      scatter_enable_callout_line_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(stacked_area_enable_callout_line_ != nullptr);
      stacked_area_enable_callout_line_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(stacked_bar_enable_callout_line_ != nullptr);
      stacked_bar_enable_callout_line_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(default_error_bar_custom_negative_data_ != nullptr);
      default_error_bar_custom_negative_data_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(default_error_bar_custom_negative_data_scatter_x_ != nullptr);
      default_error_bar_custom_negative_data_scatter_x_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(default_error_bar_custom_positive_data_ != nullptr);
      default_error_bar_custom_positive_data_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(default_error_bar_custom_positive_data_scatter_x_ != nullptr);
      default_error_bar_custom_positive_data_scatter_x_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(default_error_bar_fixed_value_ != nullptr);
      default_error_bar_fixed_value_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(default_error_bar_fixed_value_scatter_x_ != nullptr);
      default_error_bar_fixed_value_scatter_x_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(default_error_bar_percent_value_ != nullptr);
      default_error_bar_percent_value_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(default_error_bar_percent_value_scatter_x_ != nullptr);
      default_error_bar_percent_value_scatter_x_->Clear();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(default_error_bar_setting_ != nullptr);
      default_error_bar_setting_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(default_error_bar_setting_scatter_x_ != nullptr);
      default_error_bar_setting_scatter_x_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(default_error_bar_std_dev_value_ != nullptr);
      default_error_bar_std_dev_value_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(default_error_bar_std_dev_value_scatter_x_ != nullptr);
      default_error_bar_std_dev_value_scatter_x_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(default_error_bar_type_ != nullptr);
      default_error_bar_type_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(default_error_bar_type_scatter_x_ != nullptr);
      default_error_bar_type_scatter_x_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      GOOGLE_DCHECK(pie_label_explosion_ != nullptr);
      pie_label_explosion_->Clear();
    }
    if (cached_has_bits & 0x80000000u) {
      GOOGLE_DCHECK(bubble_line_type_ != nullptr);
      bubble_line_type_->Clear();
    }
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(line_line_type_ != nullptr);
      line_line_type_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(mixed_line_line_type_ != nullptr);
      mixed_line_line_type_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(scatter_line_type_ != nullptr);
      scatter_line_type_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(default_number_format_ != nullptr);
      default_number_format_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(pie_number_format_ != nullptr);
      pie_number_format_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(default_number_format_type_ != nullptr);
      default_number_format_type_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(pie_number_format_type_ != nullptr);
      pie_number_format_type_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(stacked_percent_number_format_ != nullptr);
      stacked_percent_number_format_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(default_series_type_ != nullptr);
      default_series_type_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(default_show_error_bar_ != nullptr);
      default_show_error_bar_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(default_show_error_bar_scatter_x_ != nullptr);
      default_show_error_bar_scatter_x_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(bubble_show_labels_in_front_ != nullptr);
      bubble_show_labels_in_front_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(default_show_labels_in_front_ != nullptr);
      default_show_labels_in_front_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(scatter_show_line_ != nullptr);
      scatter_show_line_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(bubble_show_negative_data_ != nullptr);
      bubble_show_negative_data_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(bubble_show_series_labels_ != nullptr);
      bubble_show_series_labels_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(pie_show_series_labels_ != nullptr);
      pie_show_series_labels_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(scatter_show_series_labels_ != nullptr);
      scatter_show_series_labels_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(area_show_symbol_ != nullptr);
      area_show_symbol_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(line_show_symbol_ != nullptr);
      line_show_symbol_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(mixed_area_show_symbol_ != nullptr);
      mixed_area_show_symbol_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(mixed_line_show_symbol_ != nullptr);
      mixed_line_show_symbol_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(scatter_show_symbol_ != nullptr);
      scatter_show_symbol_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(default_show_trend_line_ != nullptr);
      default_show_trend_line_->Clear();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(area_show_value_labels_ != nullptr);
      area_show_value_labels_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(bar_show_value_labels_ != nullptr);
      bar_show_value_labels_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(bubble_show_value_labels_ != nullptr);
      bubble_show_value_labels_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(default_show_value_labels_ != nullptr);
      default_show_value_labels_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(line_show_value_labels_ != nullptr);
      line_show_value_labels_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(mixed_show_value_labels_ != nullptr);
      mixed_show_value_labels_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      GOOGLE_DCHECK(pie_show_value_labels_ != nullptr);
      pie_show_value_labels_->Clear();
    }
    if (cached_has_bits & 0x80000000u) {
      GOOGLE_DCHECK(scatter_show_value_labels_ != nullptr);
      scatter_show_value_labels_->Clear();
    }
  }
  cached_has_bits = _has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(bubble_size_dimension_ != nullptr);
      bubble_size_dimension_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(area_stack_labels_ != nullptr);
      area_stack_labels_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(bar_stack_labels_ != nullptr);
      bar_stack_labels_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(bubble_stack_labels_ != nullptr);
      bubble_stack_labels_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(default_stack_labels_ != nullptr);
      default_stack_labels_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(line_stack_labels_ != nullptr);
      line_stack_labels_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(pie_stack_labels_ != nullptr);
      pie_stack_labels_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(scatter_stack_labels_ != nullptr);
      scatter_stack_labels_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(stacked_area_stack_labels_ != nullptr);
      stacked_area_stack_labels_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(stacked_bar_stack_labels_ != nullptr);
      stacked_bar_stack_labels_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(area_symbol_type_ != nullptr);
      area_symbol_type_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(line_symbol_type_ != nullptr);
      line_symbol_type_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(mixed_area_symbol_type_ != nullptr);
      mixed_area_symbol_type_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(mixed_line_symbol_type_ != nullptr);
      mixed_line_symbol_type_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(scatter_symbol_type_ != nullptr);
      scatter_symbol_type_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(default_trend_line_equation_offset_x_ != nullptr);
      default_trend_line_equation_offset_x_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(default_trend_line_equation_offset_y_ != nullptr);
      default_trend_line_equation_offset_y_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(default_trend_line_label_string_ != nullptr);
      default_trend_line_label_string_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(default_trend_line_order_ != nullptr);
      default_trend_line_order_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(default_trend_line_period_ != nullptr);
      default_trend_line_period_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(default_trend_line_r_squared_offset_x_ != nullptr);
      default_trend_line_r_squared_offset_x_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(default_trend_line_r_squared_offset_y_ != nullptr);
      default_trend_line_r_squared_offset_y_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(default_trend_line_show_equation_ != nullptr);
      default_trend_line_show_equation_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(default_trend_line_show_label_ != nullptr);
      default_trend_line_show_label_->Clear();
    }
  }
  if (cached_has_bits & 0x3f000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(default_trend_line_show_r2_value_ != nullptr);
      default_trend_line_show_r2_value_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(default_trend_line_type_ != nullptr);
      default_trend_line_type_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(bubble_value_labels_axis_ != nullptr);
      bubble_value_labels_axis_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(scatter_value_labels_axis_ != nullptr);
      scatter_value_labels_axis_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(pie_wedge_explosion_ != nullptr);
      pie_wedge_explosion_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(default_y_axis_ordinal_ != nullptr);
      default_y_axis_ordinal_->Clear();
    }
  }
  if (cached_has_bits & 0xc0000000u) {
    ::memset(&default10_date_format_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default10_number_format_undefined_) -
        reinterpret_cast<char*>(&default10_date_format_undefined_)) + sizeof(default10_number_format_undefined_));
  }
  cached_has_bits = _has_bits_[3];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&pie10_number_format_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bubble_enable_callout_line_undefined_) -
        reinterpret_cast<char*>(&pie10_number_format_undefined_)) + sizeof(bubble_enable_callout_line_undefined_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&default_enable_callout_line_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_error_bar_custom_negative_data_scatter_x_undefined_) -
        reinterpret_cast<char*>(&default_enable_callout_line_undefined_)) + sizeof(default_error_bar_custom_negative_data_scatter_x_undefined_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&default_error_bar_custom_positive_data_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_error_bar_setting_scatter_x_undefined_) -
        reinterpret_cast<char*>(&default_error_bar_custom_positive_data_undefined_)) + sizeof(default_error_bar_setting_scatter_x_undefined_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&default_error_bar_std_dev_value_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mixed_line_line_type_undefined_) -
        reinterpret_cast<char*>(&default_error_bar_std_dev_value_undefined_)) + sizeof(mixed_line_line_type_undefined_));
  }
  cached_has_bits = _has_bits_[4];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&scatter_line_type_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_show_error_bar_undefined_) -
        reinterpret_cast<char*>(&scatter_line_type_undefined_)) + sizeof(default_show_error_bar_undefined_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&default_show_error_bar_scatter_x_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&scatter_show_series_labels_undefined_) -
        reinterpret_cast<char*>(&default_show_error_bar_scatter_x_undefined_)) + sizeof(scatter_show_series_labels_undefined_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&area_show_symbol_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bar_show_value_labels_undefined_) -
        reinterpret_cast<char*>(&area_show_symbol_undefined_)) + sizeof(bar_show_value_labels_undefined_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&bubble_show_value_labels_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&area_stack_labels_undefined_) -
        reinterpret_cast<char*>(&bubble_show_value_labels_undefined_)) + sizeof(area_stack_labels_undefined_));
  }
  cached_has_bits = _has_bits_[5];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&bar_stack_labels_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stacked_bar_stack_labels_undefined_) -
        reinterpret_cast<char*>(&bar_stack_labels_undefined_)) + sizeof(stacked_bar_stack_labels_undefined_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&area_symbol_type_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_trend_line_label_string_undefined_) -
        reinterpret_cast<char*>(&area_symbol_type_undefined_)) + sizeof(default_trend_line_label_string_undefined_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&default_trend_line_order_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_trend_line_type_undefined_) -
        reinterpret_cast<char*>(&default_trend_line_order_undefined_)) + sizeof(default_trend_line_type_undefined_));
  }
  if (cached_has_bits & 0x0f000000u) {
    ::memset(&bubble_value_labels_axis_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_y_axis_ordinal_undefined_) -
        reinterpret_cast<char*>(&bubble_value_labels_axis_undefined_)) + sizeof(default_y_axis_ordinal_undefined_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChartSeriesNonStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCHSOS.SpecFormatObjectArchive default10_date_format = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default10_date_format(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default10_date_format_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_default10_date_format_undefined(&_has_bits_);
          default10_date_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecNumberFormatArchive default10_number_format = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default10_number_format(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default10_number_format_undefined = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_default10_number_format_undefined(&_has_bits_);
          default10_number_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecNumberFormatArchive pie10_number_format = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie10_number_format(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pie10_number_format_undefined = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_pie10_number_format_undefined(&_has_bits_);
          pie10_number_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive pie23_label_explosion = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie23_label_explosion(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pie23_label_explosion_undefined = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_pie23_label_explosion_undefined(&_has_bits_);
          pie23_label_explosion_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive bubble_adjustment_scale = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_adjustment_scale(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bubble_adjustment_scale_undefined = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_bubble_adjustment_scale_undefined(&_has_bits_);
          bubble_adjustment_scale_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecFormatObjectArchive default_date_format = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_date_format(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_date_format_undefined = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_default_date_format_undefined(&_has_bits_);
          default_date_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecFormatObjectArchive default_duration_format = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_duration_format(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_duration_format_undefined = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_default_duration_format_undefined(&_has_bits_);
          default_duration_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive area_enable_callout_line = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_enable_callout_line(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool area_enable_callout_line_undefined = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_area_enable_callout_line_undefined(&_has_bits_);
          area_enable_callout_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive bar_enable_callout_line = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar_enable_callout_line(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bar_enable_callout_line_undefined = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_bar_enable_callout_line_undefined(&_has_bits_);
          bar_enable_callout_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive bubble_enable_callout_line = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_enable_callout_line(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bubble_enable_callout_line_undefined = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_bubble_enable_callout_line_undefined(&_has_bits_);
          bubble_enable_callout_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_enable_callout_line = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_enable_callout_line(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_enable_callout_line_undefined = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_default_enable_callout_line_undefined(&_has_bits_);
          default_enable_callout_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive line_enable_callout_line = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_enable_callout_line(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool line_enable_callout_line_undefined = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_line_enable_callout_line_undefined(&_has_bits_);
          line_enable_callout_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive pie_enable_callout_line = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_enable_callout_line(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pie_enable_callout_line_undefined = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_pie_enable_callout_line_undefined(&_has_bits_);
          pie_enable_callout_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive scatter_enable_callout_line = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_enable_callout_line(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool scatter_enable_callout_line_undefined = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_scatter_enable_callout_line_undefined(&_has_bits_);
          scatter_enable_callout_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive stacked_area_enable_callout_line = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_stacked_area_enable_callout_line(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool stacked_area_enable_callout_line_undefined = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_stacked_area_enable_callout_line_undefined(&_has_bits_);
          stacked_area_enable_callout_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive stacked_bar_enable_callout_line = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_stacked_bar_enable_callout_line(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool stacked_bar_enable_callout_line_undefined = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          _Internal::set_has_stacked_bar_enable_callout_line_undefined(&_has_bits_);
          stacked_bar_enable_callout_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_negative_data = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_custom_negative_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_error_bar_custom_negative_data_undefined = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_default_error_bar_custom_negative_data_undefined(&_has_bits_);
          default_error_bar_custom_negative_data_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_negative_data_scatter_x = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_custom_negative_data_scatter_x(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_error_bar_custom_negative_data_scatter_x_undefined = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_default_error_bar_custom_negative_data_scatter_x_undefined(&_has_bits_);
          default_error_bar_custom_negative_data_scatter_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_positive_data = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_custom_positive_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_error_bar_custom_positive_data_undefined = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_default_error_bar_custom_positive_data_undefined(&_has_bits_);
          default_error_bar_custom_positive_data_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_positive_data_scatter_x = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_custom_positive_data_scatter_x(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_error_bar_custom_positive_data_scatter_x_undefined = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_default_error_bar_custom_positive_data_scatter_x_undefined(&_has_bits_);
          default_error_bar_custom_positive_data_scatter_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_error_bar_fixed_value = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_fixed_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_error_bar_fixed_value_undefined = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_default_error_bar_fixed_value_undefined(&_has_bits_);
          default_error_bar_fixed_value_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_error_bar_fixed_value_scatter_x = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_fixed_value_scatter_x(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_error_bar_fixed_value_scatter_x_undefined = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_default_error_bar_fixed_value_scatter_x_undefined(&_has_bits_);
          default_error_bar_fixed_value_scatter_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_error_bar_percent_value = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_percent_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_error_bar_percent_value_undefined = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_default_error_bar_percent_value_undefined(&_has_bits_);
          default_error_bar_percent_value_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_error_bar_percent_value_scatter_x = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_percent_value_scatter_x(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_error_bar_percent_value_scatter_x_undefined = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_default_error_bar_percent_value_scatter_x_undefined(&_has_bits_);
          default_error_bar_percent_value_scatter_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_error_bar_setting = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_setting(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_error_bar_setting_undefined = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_default_error_bar_setting_undefined(&_has_bits_);
          default_error_bar_setting_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_error_bar_setting_scatter_x = 51;
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_setting_scatter_x(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_error_bar_setting_scatter_x_undefined = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_default_error_bar_setting_scatter_x_undefined(&_has_bits_);
          default_error_bar_setting_scatter_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_error_bar_std_dev_value = 53;
      case 53:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_std_dev_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_error_bar_std_dev_value_undefined = 54;
      case 54:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_default_error_bar_std_dev_value_undefined(&_has_bits_);
          default_error_bar_std_dev_value_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_error_bar_std_dev_value_scatter_x = 55;
      case 55:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_std_dev_value_scatter_x(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_error_bar_std_dev_value_scatter_x_undefined = 56;
      case 56:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_default_error_bar_std_dev_value_scatter_x_undefined(&_has_bits_);
          default_error_bar_std_dev_value_scatter_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_error_bar_type = 57;
      case 57:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_error_bar_type_undefined = 58;
      case 58:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_default_error_bar_type_undefined(&_has_bits_);
          default_error_bar_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_error_bar_type_scatter_x = 59;
      case 59:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_type_scatter_x(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_error_bar_type_scatter_x_undefined = 60;
      case 60:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_default_error_bar_type_scatter_x_undefined(&_has_bits_);
          default_error_bar_type_scatter_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive pie_label_explosion = 61;
      case 61:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_label_explosion(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pie_label_explosion_undefined = 62;
      case 62:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_pie_label_explosion_undefined(&_has_bits_);
          pie_label_explosion_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive bubble_line_type = 63;
      case 63:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_line_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bubble_line_type_undefined = 64;
      case 64:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          _Internal::set_has_bubble_line_type_undefined(&_has_bits_);
          bubble_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive line_line_type = 65;
      case 65:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_line_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool line_line_type_undefined = 66;
      case 66:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_line_line_type_undefined(&_has_bits_);
          line_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive mixed_line_line_type = 67;
      case 67:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_line_line_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_line_line_type_undefined = 68;
      case 68:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_mixed_line_line_type_undefined(&_has_bits_);
          mixed_line_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive scatter_line_type = 69;
      case 69:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_line_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool scatter_line_type_undefined = 70;
      case 70:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_scatter_line_type_undefined(&_has_bits_);
          scatter_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecNumberFormatArchive default_number_format = 71;
      case 71:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_number_format(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_number_format_undefined = 72;
      case 72:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_default_number_format_undefined(&_has_bits_);
          default_number_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecNumberFormatArchive pie_number_format = 73;
      case 73:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_number_format(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pie_number_format_undefined = 74;
      case 74:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_pie_number_format_undefined(&_has_bits_);
          pie_number_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_number_format_type = 75;
      case 75:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_number_format_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_number_format_type_undefined = 76;
      case 76:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_default_number_format_type_undefined(&_has_bits_);
          default_number_format_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive pie_number_format_type = 77;
      case 77:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_number_format_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pie_number_format_type_undefined = 78;
      case 78:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_pie_number_format_type_undefined(&_has_bits_);
          pie_number_format_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecNumberFormatArchive stacked_percent_number_format = 79;
      case 79:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_stacked_percent_number_format(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool stacked_percent_number_format_undefined = 80;
      case 80:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_stacked_percent_number_format_undefined(&_has_bits_);
          stacked_percent_number_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_series_type = 81;
      case 81:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_series_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_series_type_undefined = 82;
      case 82:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_default_series_type_undefined(&_has_bits_);
          default_series_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_error_bar = 83;
      case 83:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_error_bar(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_show_error_bar_undefined = 84;
      case 84:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_default_show_error_bar_undefined(&_has_bits_);
          default_show_error_bar_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_error_bar_scatter_x = 85;
      case 85:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_error_bar_scatter_x(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_show_error_bar_scatter_x_undefined = 86;
      case 86:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_default_show_error_bar_scatter_x_undefined(&_has_bits_);
          default_show_error_bar_scatter_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive bubble_show_labels_in_front = 87;
      case 87:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_show_labels_in_front(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bubble_show_labels_in_front_undefined = 88;
      case 88:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_bubble_show_labels_in_front_undefined(&_has_bits_);
          bubble_show_labels_in_front_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_labels_in_front = 89;
      case 89:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_labels_in_front(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_show_labels_in_front_undefined = 90;
      case 90:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_default_show_labels_in_front_undefined(&_has_bits_);
          default_show_labels_in_front_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive scatter_show_line = 91;
      case 91:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_show_line(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool scatter_show_line_undefined = 92;
      case 92:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_scatter_show_line_undefined(&_has_bits_);
          scatter_show_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive bubble_show_negative_data = 93;
      case 93:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_show_negative_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bubble_show_negative_data_undefined = 94;
      case 94:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_bubble_show_negative_data_undefined(&_has_bits_);
          bubble_show_negative_data_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive bubble_show_series_labels = 95;
      case 95:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_show_series_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bubble_show_series_labels_undefined = 96;
      case 96:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          _Internal::set_has_bubble_show_series_labels_undefined(&_has_bits_);
          bubble_show_series_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive pie_show_series_labels = 97;
      case 97:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_show_series_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pie_show_series_labels_undefined = 98;
      case 98:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_pie_show_series_labels_undefined(&_has_bits_);
          pie_show_series_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive scatter_show_series_labels = 99;
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_show_series_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool scatter_show_series_labels_undefined = 100;
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_scatter_show_series_labels_undefined(&_has_bits_);
          scatter_show_series_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive area_show_symbol = 101;
      case 101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_show_symbol(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool area_show_symbol_undefined = 102;
      case 102:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_area_show_symbol_undefined(&_has_bits_);
          area_show_symbol_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive line_show_symbol = 103;
      case 103:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_show_symbol(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool line_show_symbol_undefined = 104;
      case 104:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_line_show_symbol_undefined(&_has_bits_);
          line_show_symbol_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive mixed_area_show_symbol = 105;
      case 105:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_area_show_symbol(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_area_show_symbol_undefined = 106;
      case 106:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_mixed_area_show_symbol_undefined(&_has_bits_);
          mixed_area_show_symbol_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive mixed_line_show_symbol = 107;
      case 107:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_line_show_symbol(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_line_show_symbol_undefined = 108;
      case 108:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_mixed_line_show_symbol_undefined(&_has_bits_);
          mixed_line_show_symbol_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive scatter_show_symbol = 109;
      case 109:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_show_symbol(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool scatter_show_symbol_undefined = 110;
      case 110:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_scatter_show_symbol_undefined(&_has_bits_);
          scatter_show_symbol_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_trend_line = 111;
      case 111:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_trend_line(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_show_trend_line_undefined = 112;
      case 112:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_default_show_trend_line_undefined(&_has_bits_);
          default_show_trend_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive area_show_value_labels = 113;
      case 113:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_show_value_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool area_show_value_labels_undefined = 114;
      case 114:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_area_show_value_labels_undefined(&_has_bits_);
          area_show_value_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive bar_show_value_labels = 115;
      case 115:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar_show_value_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bar_show_value_labels_undefined = 116;
      case 116:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_bar_show_value_labels_undefined(&_has_bits_);
          bar_show_value_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive bubble_show_value_labels = 117;
      case 117:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_show_value_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bubble_show_value_labels_undefined = 118;
      case 118:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_bubble_show_value_labels_undefined(&_has_bits_);
          bubble_show_value_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_value_labels = 119;
      case 119:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_value_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_show_value_labels_undefined = 120;
      case 120:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_default_show_value_labels_undefined(&_has_bits_);
          default_show_value_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive line_show_value_labels = 121;
      case 121:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_show_value_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool line_show_value_labels_undefined = 122;
      case 122:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_line_show_value_labels_undefined(&_has_bits_);
          line_show_value_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive mixed_show_value_labels = 123;
      case 123:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_show_value_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_show_value_labels_undefined = 124;
      case 124:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_mixed_show_value_labels_undefined(&_has_bits_);
          mixed_show_value_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive pie_show_value_labels = 125;
      case 125:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_show_value_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pie_show_value_labels_undefined = 126;
      case 126:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_pie_show_value_labels_undefined(&_has_bits_);
          pie_show_value_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive scatter_show_value_labels = 127;
      case 127:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_show_value_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool scatter_show_value_labels_undefined = 128;
      case 128:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          _Internal::set_has_scatter_show_value_labels_undefined(&_has_bits_);
          scatter_show_value_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive bubble_size_dimension = 129;
      case 129:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_size_dimension(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bubble_size_dimension_undefined = 130;
      case 130:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_bubble_size_dimension_undefined(&_has_bits_);
          bubble_size_dimension_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive area_stack_labels = 131;
      case 131:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_stack_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool area_stack_labels_undefined = 132;
      case 132:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_area_stack_labels_undefined(&_has_bits_);
          area_stack_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive bar_stack_labels = 133;
      case 133:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar_stack_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bar_stack_labels_undefined = 134;
      case 134:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_bar_stack_labels_undefined(&_has_bits_);
          bar_stack_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive bubble_stack_labels = 135;
      case 135:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_stack_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bubble_stack_labels_undefined = 136;
      case 136:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_bubble_stack_labels_undefined(&_has_bits_);
          bubble_stack_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_stack_labels = 137;
      case 137:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_stack_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_stack_labels_undefined = 138;
      case 138:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_default_stack_labels_undefined(&_has_bits_);
          default_stack_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive line_stack_labels = 139;
      case 139:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_stack_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool line_stack_labels_undefined = 140;
      case 140:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_line_stack_labels_undefined(&_has_bits_);
          line_stack_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive pie_stack_labels = 141;
      case 141:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_stack_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pie_stack_labels_undefined = 142;
      case 142:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_pie_stack_labels_undefined(&_has_bits_);
          pie_stack_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive scatter_stack_labels = 143;
      case 143:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_stack_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool scatter_stack_labels_undefined = 144;
      case 144:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_scatter_stack_labels_undefined(&_has_bits_);
          scatter_stack_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive stacked_area_stack_labels = 145;
      case 145:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_stacked_area_stack_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool stacked_area_stack_labels_undefined = 146;
      case 146:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_stacked_area_stack_labels_undefined(&_has_bits_);
          stacked_area_stack_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive stacked_bar_stack_labels = 147;
      case 147:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_stacked_bar_stack_labels(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool stacked_bar_stack_labels_undefined = 148;
      case 148:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_stacked_bar_stack_labels_undefined(&_has_bits_);
          stacked_bar_stack_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive area_symbol_type = 149;
      case 149:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_symbol_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool area_symbol_type_undefined = 150;
      case 150:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_area_symbol_type_undefined(&_has_bits_);
          area_symbol_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive line_symbol_type = 151;
      case 151:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_symbol_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool line_symbol_type_undefined = 152;
      case 152:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_line_symbol_type_undefined(&_has_bits_);
          line_symbol_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive mixed_area_symbol_type = 153;
      case 153:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_area_symbol_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_area_symbol_type_undefined = 154;
      case 154:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_mixed_area_symbol_type_undefined(&_has_bits_);
          mixed_area_symbol_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive mixed_line_symbol_type = 155;
      case 155:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_line_symbol_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_line_symbol_type_undefined = 156;
      case 156:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_mixed_line_symbol_type_undefined(&_has_bits_);
          mixed_line_symbol_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive scatter_symbol_type = 157;
      case 157:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_symbol_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool scatter_symbol_type_undefined = 158;
      case 158:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_scatter_symbol_type_undefined(&_has_bits_);
          scatter_symbol_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_trend_line_equation_offset_x = 159;
      case 159:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_equation_offset_x(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_trend_line_equation_offset_x_undefined = 160;
      case 160:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          _Internal::set_has_default_trend_line_equation_offset_x_undefined(&_has_bits_);
          default_trend_line_equation_offset_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_trend_line_equation_offset_y = 161;
      case 161:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_equation_offset_y(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_trend_line_equation_offset_y_undefined = 162;
      case 162:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_default_trend_line_equation_offset_y_undefined(&_has_bits_);
          default_trend_line_equation_offset_y_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecStringArchive default_trend_line_label_string = 163;
      case 163:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_label_string(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_trend_line_label_string_undefined = 164;
      case 164:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_default_trend_line_label_string_undefined(&_has_bits_);
          default_trend_line_label_string_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_trend_line_order = 165;
      case 165:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_order(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_trend_line_order_undefined = 166;
      case 166:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_default_trend_line_order_undefined(&_has_bits_);
          default_trend_line_order_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_trend_line_period = 167;
      case 167:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_period(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_trend_line_period_undefined = 168;
      case 168:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_default_trend_line_period_undefined(&_has_bits_);
          default_trend_line_period_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_trend_line_r_squared_offset_x = 169;
      case 169:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_r_squared_offset_x(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_trend_line_r_squared_offset_x_undefined = 170;
      case 170:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_default_trend_line_r_squared_offset_x_undefined(&_has_bits_);
          default_trend_line_r_squared_offset_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_trend_line_r_squared_offset_y = 171;
      case 171:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_r_squared_offset_y(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_trend_line_r_squared_offset_y_undefined = 172;
      case 172:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_default_trend_line_r_squared_offset_y_undefined(&_has_bits_);
          default_trend_line_r_squared_offset_y_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_trend_line_show_equation = 173;
      case 173:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_show_equation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_trend_line_show_equation_undefined = 174;
      case 174:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_default_trend_line_show_equation_undefined(&_has_bits_);
          default_trend_line_show_equation_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_trend_line_show_label = 175;
      case 175:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_show_label(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_trend_line_show_label_undefined = 176;
      case 176:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_default_trend_line_show_label_undefined(&_has_bits_);
          default_trend_line_show_label_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_trend_line_show_r2_value = 177;
      case 177:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_show_r2_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_trend_line_show_r2_value_undefined = 178;
      case 178:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_default_trend_line_show_r2_value_undefined(&_has_bits_);
          default_trend_line_show_r2_value_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_trend_line_type = 179;
      case 179:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_trend_line_type_undefined = 180;
      case 180:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_default_trend_line_type_undefined(&_has_bits_);
          default_trend_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive bubble_value_labels_axis = 181;
      case 181:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_value_labels_axis(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bubble_value_labels_axis_undefined = 182;
      case 182:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_bubble_value_labels_axis_undefined(&_has_bits_);
          bubble_value_labels_axis_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive scatter_value_labels_axis = 183;
      case 183:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_value_labels_axis(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool scatter_value_labels_axis_undefined = 184;
      case 184:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_scatter_value_labels_axis_undefined(&_has_bits_);
          scatter_value_labels_axis_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive pie_wedge_explosion = 185;
      case 185:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_wedge_explosion(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pie_wedge_explosion_undefined = 186;
      case 186:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_pie_wedge_explosion_undefined(&_has_bits_);
          pie_wedge_explosion_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_y_axis_ordinal = 187;
      case 187:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_y_axis_ordinal(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_y_axis_ordinal_undefined = 188;
      case 188:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_default_y_axis_ordinal_undefined(&_has_bits_);
          default_y_axis_ordinal_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChartSeriesNonStylePropertyChangeSetArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecFormatObjectArchive default10_date_format = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::default10_date_format(this), target, stream);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool default10_date_format_undefined = 2;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_default10_date_format_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecNumberFormatArchive default10_number_format = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::default10_number_format(this), target, stream);
  }

  cached_has_bits = _has_bits_[2];
  // optional bool default10_number_format_undefined = 4;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_default10_number_format_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecNumberFormatArchive pie10_number_format = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::pie10_number_format(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool pie10_number_format_undefined = 6;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_pie10_number_format_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive pie23_label_explosion = 7;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::pie23_label_explosion(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool pie23_label_explosion_undefined = 8;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_pie23_label_explosion_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive bubble_adjustment_scale = 9;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::bubble_adjustment_scale(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool bubble_adjustment_scale_undefined = 10;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_bubble_adjustment_scale_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecFormatObjectArchive default_date_format = 11;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::default_date_format(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_date_format_undefined = 12;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->_internal_default_date_format_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecFormatObjectArchive default_duration_format = 13;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::default_duration_format(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_duration_format_undefined = 14;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(14, this->_internal_default_duration_format_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive area_enable_callout_line = 15;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        15, _Internal::area_enable_callout_line(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool area_enable_callout_line_undefined = 16;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(16, this->_internal_area_enable_callout_line_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive bar_enable_callout_line = 17;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        17, _Internal::bar_enable_callout_line(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool bar_enable_callout_line_undefined = 18;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(18, this->_internal_bar_enable_callout_line_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive bubble_enable_callout_line = 19;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        19, _Internal::bubble_enable_callout_line(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool bubble_enable_callout_line_undefined = 20;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(20, this->_internal_bubble_enable_callout_line_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_enable_callout_line = 21;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        21, _Internal::default_enable_callout_line(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_enable_callout_line_undefined = 22;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(22, this->_internal_default_enable_callout_line_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive line_enable_callout_line = 23;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        23, _Internal::line_enable_callout_line(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool line_enable_callout_line_undefined = 24;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(24, this->_internal_line_enable_callout_line_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive pie_enable_callout_line = 25;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        25, _Internal::pie_enable_callout_line(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool pie_enable_callout_line_undefined = 26;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(26, this->_internal_pie_enable_callout_line_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive scatter_enable_callout_line = 27;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        27, _Internal::scatter_enable_callout_line(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool scatter_enable_callout_line_undefined = 28;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(28, this->_internal_scatter_enable_callout_line_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive stacked_area_enable_callout_line = 29;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        29, _Internal::stacked_area_enable_callout_line(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool stacked_area_enable_callout_line_undefined = 30;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(30, this->_internal_stacked_area_enable_callout_line_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive stacked_bar_enable_callout_line = 31;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        31, _Internal::stacked_bar_enable_callout_line(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool stacked_bar_enable_callout_line_undefined = 32;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(32, this->_internal_stacked_bar_enable_callout_line_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_negative_data = 33;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        33, _Internal::default_error_bar_custom_negative_data(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_error_bar_custom_negative_data_undefined = 34;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(34, this->_internal_default_error_bar_custom_negative_data_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_negative_data_scatter_x = 35;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        35, _Internal::default_error_bar_custom_negative_data_scatter_x(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_error_bar_custom_negative_data_scatter_x_undefined = 36;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(36, this->_internal_default_error_bar_custom_negative_data_scatter_x_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_positive_data = 37;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        37, _Internal::default_error_bar_custom_positive_data(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_error_bar_custom_positive_data_undefined = 38;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(38, this->_internal_default_error_bar_custom_positive_data_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_positive_data_scatter_x = 39;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        39, _Internal::default_error_bar_custom_positive_data_scatter_x(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_error_bar_custom_positive_data_scatter_x_undefined = 40;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(40, this->_internal_default_error_bar_custom_positive_data_scatter_x_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_error_bar_fixed_value = 41;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        41, _Internal::default_error_bar_fixed_value(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_error_bar_fixed_value_undefined = 42;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(42, this->_internal_default_error_bar_fixed_value_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_error_bar_fixed_value_scatter_x = 43;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        43, _Internal::default_error_bar_fixed_value_scatter_x(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_error_bar_fixed_value_scatter_x_undefined = 44;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(44, this->_internal_default_error_bar_fixed_value_scatter_x_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_error_bar_percent_value = 45;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        45, _Internal::default_error_bar_percent_value(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_error_bar_percent_value_undefined = 46;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(46, this->_internal_default_error_bar_percent_value_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_error_bar_percent_value_scatter_x = 47;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        47, _Internal::default_error_bar_percent_value_scatter_x(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_error_bar_percent_value_scatter_x_undefined = 48;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(48, this->_internal_default_error_bar_percent_value_scatter_x_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_error_bar_setting = 49;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        49, _Internal::default_error_bar_setting(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_error_bar_setting_undefined = 50;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(50, this->_internal_default_error_bar_setting_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_error_bar_setting_scatter_x = 51;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        51, _Internal::default_error_bar_setting_scatter_x(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_error_bar_setting_scatter_x_undefined = 52;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(52, this->_internal_default_error_bar_setting_scatter_x_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_error_bar_std_dev_value = 53;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        53, _Internal::default_error_bar_std_dev_value(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_error_bar_std_dev_value_undefined = 54;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(54, this->_internal_default_error_bar_std_dev_value_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_error_bar_std_dev_value_scatter_x = 55;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        55, _Internal::default_error_bar_std_dev_value_scatter_x(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_error_bar_std_dev_value_scatter_x_undefined = 56;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(56, this->_internal_default_error_bar_std_dev_value_scatter_x_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_error_bar_type = 57;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        57, _Internal::default_error_bar_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_error_bar_type_undefined = 58;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(58, this->_internal_default_error_bar_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_error_bar_type_scatter_x = 59;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        59, _Internal::default_error_bar_type_scatter_x(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_error_bar_type_scatter_x_undefined = 60;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(60, this->_internal_default_error_bar_type_scatter_x_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive pie_label_explosion = 61;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        61, _Internal::pie_label_explosion(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool pie_label_explosion_undefined = 62;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(62, this->_internal_pie_label_explosion_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive bubble_line_type = 63;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        63, _Internal::bubble_line_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool bubble_line_type_undefined = 64;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(64, this->_internal_bubble_line_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive line_line_type = 65;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        65, _Internal::line_line_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool line_line_type_undefined = 66;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(66, this->_internal_line_line_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive mixed_line_line_type = 67;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        67, _Internal::mixed_line_line_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool mixed_line_line_type_undefined = 68;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(68, this->_internal_mixed_line_line_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive scatter_line_type = 69;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        69, _Internal::scatter_line_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool scatter_line_type_undefined = 70;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(70, this->_internal_scatter_line_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSCHSOS.SpecNumberFormatArchive default_number_format = 71;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        71, _Internal::default_number_format(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool default_number_format_undefined = 72;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(72, this->_internal_default_number_format_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSCHSOS.SpecNumberFormatArchive pie_number_format = 73;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        73, _Internal::pie_number_format(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool pie_number_format_undefined = 74;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(74, this->_internal_pie_number_format_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive default_number_format_type = 75;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        75, _Internal::default_number_format_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool default_number_format_type_undefined = 76;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(76, this->_internal_default_number_format_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive pie_number_format_type = 77;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        77, _Internal::pie_number_format_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool pie_number_format_type_undefined = 78;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(78, this->_internal_pie_number_format_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSCHSOS.SpecNumberFormatArchive stacked_percent_number_format = 79;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        79, _Internal::stacked_percent_number_format(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool stacked_percent_number_format_undefined = 80;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(80, this->_internal_stacked_percent_number_format_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive default_series_type = 81;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        81, _Internal::default_series_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool default_series_type_undefined = 82;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(82, this->_internal_default_series_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive default_show_error_bar = 83;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        83, _Internal::default_show_error_bar(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool default_show_error_bar_undefined = 84;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(84, this->_internal_default_show_error_bar_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive default_show_error_bar_scatter_x = 85;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        85, _Internal::default_show_error_bar_scatter_x(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool default_show_error_bar_scatter_x_undefined = 86;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(86, this->_internal_default_show_error_bar_scatter_x_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive bubble_show_labels_in_front = 87;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        87, _Internal::bubble_show_labels_in_front(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool bubble_show_labels_in_front_undefined = 88;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(88, this->_internal_bubble_show_labels_in_front_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive default_show_labels_in_front = 89;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        89, _Internal::default_show_labels_in_front(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool default_show_labels_in_front_undefined = 90;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(90, this->_internal_default_show_labels_in_front_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive scatter_show_line = 91;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        91, _Internal::scatter_show_line(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool scatter_show_line_undefined = 92;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(92, this->_internal_scatter_show_line_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive bubble_show_negative_data = 93;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        93, _Internal::bubble_show_negative_data(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool bubble_show_negative_data_undefined = 94;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(94, this->_internal_bubble_show_negative_data_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive bubble_show_series_labels = 95;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        95, _Internal::bubble_show_series_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool bubble_show_series_labels_undefined = 96;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(96, this->_internal_bubble_show_series_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive pie_show_series_labels = 97;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        97, _Internal::pie_show_series_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool pie_show_series_labels_undefined = 98;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(98, this->_internal_pie_show_series_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive scatter_show_series_labels = 99;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        99, _Internal::scatter_show_series_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool scatter_show_series_labels_undefined = 100;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(100, this->_internal_scatter_show_series_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive area_show_symbol = 101;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        101, _Internal::area_show_symbol(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool area_show_symbol_undefined = 102;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(102, this->_internal_area_show_symbol_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive line_show_symbol = 103;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        103, _Internal::line_show_symbol(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool line_show_symbol_undefined = 104;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(104, this->_internal_line_show_symbol_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive mixed_area_show_symbol = 105;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        105, _Internal::mixed_area_show_symbol(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool mixed_area_show_symbol_undefined = 106;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(106, this->_internal_mixed_area_show_symbol_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive mixed_line_show_symbol = 107;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        107, _Internal::mixed_line_show_symbol(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool mixed_line_show_symbol_undefined = 108;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(108, this->_internal_mixed_line_show_symbol_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive scatter_show_symbol = 109;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        109, _Internal::scatter_show_symbol(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool scatter_show_symbol_undefined = 110;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(110, this->_internal_scatter_show_symbol_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive default_show_trend_line = 111;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        111, _Internal::default_show_trend_line(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool default_show_trend_line_undefined = 112;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(112, this->_internal_default_show_trend_line_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive area_show_value_labels = 113;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        113, _Internal::area_show_value_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool area_show_value_labels_undefined = 114;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(114, this->_internal_area_show_value_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive bar_show_value_labels = 115;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        115, _Internal::bar_show_value_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool bar_show_value_labels_undefined = 116;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(116, this->_internal_bar_show_value_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive bubble_show_value_labels = 117;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        117, _Internal::bubble_show_value_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool bubble_show_value_labels_undefined = 118;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(118, this->_internal_bubble_show_value_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive default_show_value_labels = 119;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        119, _Internal::default_show_value_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool default_show_value_labels_undefined = 120;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(120, this->_internal_default_show_value_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive line_show_value_labels = 121;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        121, _Internal::line_show_value_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool line_show_value_labels_undefined = 122;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(122, this->_internal_line_show_value_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive mixed_show_value_labels = 123;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        123, _Internal::mixed_show_value_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool mixed_show_value_labels_undefined = 124;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(124, this->_internal_mixed_show_value_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive pie_show_value_labels = 125;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        125, _Internal::pie_show_value_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool pie_show_value_labels_undefined = 126;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(126, this->_internal_pie_show_value_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive scatter_show_value_labels = 127;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        127, _Internal::scatter_show_value_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool scatter_show_value_labels_undefined = 128;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(128, this->_internal_scatter_show_value_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive bubble_size_dimension = 129;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        129, _Internal::bubble_size_dimension(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool bubble_size_dimension_undefined = 130;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(130, this->_internal_bubble_size_dimension_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive area_stack_labels = 131;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        131, _Internal::area_stack_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool area_stack_labels_undefined = 132;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(132, this->_internal_area_stack_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive bar_stack_labels = 133;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        133, _Internal::bar_stack_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool bar_stack_labels_undefined = 134;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(134, this->_internal_bar_stack_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive bubble_stack_labels = 135;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        135, _Internal::bubble_stack_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool bubble_stack_labels_undefined = 136;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(136, this->_internal_bubble_stack_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive default_stack_labels = 137;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        137, _Internal::default_stack_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool default_stack_labels_undefined = 138;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(138, this->_internal_default_stack_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive line_stack_labels = 139;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        139, _Internal::line_stack_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool line_stack_labels_undefined = 140;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(140, this->_internal_line_stack_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive pie_stack_labels = 141;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        141, _Internal::pie_stack_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool pie_stack_labels_undefined = 142;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(142, this->_internal_pie_stack_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive scatter_stack_labels = 143;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        143, _Internal::scatter_stack_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool scatter_stack_labels_undefined = 144;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(144, this->_internal_scatter_stack_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive stacked_area_stack_labels = 145;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        145, _Internal::stacked_area_stack_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool stacked_area_stack_labels_undefined = 146;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(146, this->_internal_stacked_area_stack_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive stacked_bar_stack_labels = 147;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        147, _Internal::stacked_bar_stack_labels(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool stacked_bar_stack_labels_undefined = 148;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(148, this->_internal_stacked_bar_stack_labels_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive area_symbol_type = 149;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        149, _Internal::area_symbol_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool area_symbol_type_undefined = 150;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(150, this->_internal_area_symbol_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive line_symbol_type = 151;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        151, _Internal::line_symbol_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool line_symbol_type_undefined = 152;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(152, this->_internal_line_symbol_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive mixed_area_symbol_type = 153;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        153, _Internal::mixed_area_symbol_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool mixed_area_symbol_type_undefined = 154;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(154, this->_internal_mixed_area_symbol_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive mixed_line_symbol_type = 155;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        155, _Internal::mixed_line_symbol_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool mixed_line_symbol_type_undefined = 156;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(156, this->_internal_mixed_line_symbol_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive scatter_symbol_type = 157;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        157, _Internal::scatter_symbol_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool scatter_symbol_type_undefined = 158;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(158, this->_internal_scatter_symbol_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecDoubleArchive default_trend_line_equation_offset_x = 159;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        159, _Internal::default_trend_line_equation_offset_x(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool default_trend_line_equation_offset_x_undefined = 160;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(160, this->_internal_default_trend_line_equation_offset_x_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecDoubleArchive default_trend_line_equation_offset_y = 161;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        161, _Internal::default_trend_line_equation_offset_y(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool default_trend_line_equation_offset_y_undefined = 162;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(162, this->_internal_default_trend_line_equation_offset_y_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecStringArchive default_trend_line_label_string = 163;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        163, _Internal::default_trend_line_label_string(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool default_trend_line_label_string_undefined = 164;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(164, this->_internal_default_trend_line_label_string_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive default_trend_line_order = 165;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        165, _Internal::default_trend_line_order(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool default_trend_line_order_undefined = 166;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(166, this->_internal_default_trend_line_order_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive default_trend_line_period = 167;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        167, _Internal::default_trend_line_period(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool default_trend_line_period_undefined = 168;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(168, this->_internal_default_trend_line_period_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecDoubleArchive default_trend_line_r_squared_offset_x = 169;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        169, _Internal::default_trend_line_r_squared_offset_x(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool default_trend_line_r_squared_offset_x_undefined = 170;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(170, this->_internal_default_trend_line_r_squared_offset_x_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecDoubleArchive default_trend_line_r_squared_offset_y = 171;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        171, _Internal::default_trend_line_r_squared_offset_y(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool default_trend_line_r_squared_offset_y_undefined = 172;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(172, this->_internal_default_trend_line_r_squared_offset_y_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive default_trend_line_show_equation = 173;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        173, _Internal::default_trend_line_show_equation(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool default_trend_line_show_equation_undefined = 174;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(174, this->_internal_default_trend_line_show_equation_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive default_trend_line_show_label = 175;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        175, _Internal::default_trend_line_show_label(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool default_trend_line_show_label_undefined = 176;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(176, this->_internal_default_trend_line_show_label_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive default_trend_line_show_r2_value = 177;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        177, _Internal::default_trend_line_show_r2_value(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool default_trend_line_show_r2_value_undefined = 178;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(178, this->_internal_default_trend_line_show_r2_value_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive default_trend_line_type = 179;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        179, _Internal::default_trend_line_type(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool default_trend_line_type_undefined = 180;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(180, this->_internal_default_trend_line_type_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive bubble_value_labels_axis = 181;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        181, _Internal::bubble_value_labels_axis(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool bubble_value_labels_axis_undefined = 182;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(182, this->_internal_bubble_value_labels_axis_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive scatter_value_labels_axis = 183;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        183, _Internal::scatter_value_labels_axis(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool scatter_value_labels_axis_undefined = 184;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(184, this->_internal_scatter_value_labels_axis_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecDoubleArchive pie_wedge_explosion = 185;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        185, _Internal::pie_wedge_explosion(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool pie_wedge_explosion_undefined = 186;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(186, this->_internal_pie_wedge_explosion_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive default_y_axis_ordinal = 187;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        187, _Internal::default_y_axis_ordinal(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool default_y_axis_ordinal_undefined = 188;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(188, this->_internal_default_y_axis_ordinal_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive)
  return target;
}

size_t ChartSeriesNonStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSCHSOS.SpecFormatObjectArchive default10_date_format = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default10_date_format_);
    }

    // optional .TSCHSOS.SpecNumberFormatArchive default10_number_format = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default10_number_format_);
    }

    // optional .TSCHSOS.SpecNumberFormatArchive pie10_number_format = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pie10_number_format_);
    }

    // optional .TSSSOS.SpecDoubleArchive pie23_label_explosion = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pie23_label_explosion_);
    }

    // optional .TSSSOS.SpecDoubleArchive bubble_adjustment_scale = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bubble_adjustment_scale_);
    }

    // optional .TSCHSOS.SpecFormatObjectArchive default_date_format = 11;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_date_format_);
    }

    // optional .TSCHSOS.SpecFormatObjectArchive default_duration_format = 13;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_duration_format_);
    }

    // optional .TSSSOS.SpecIntegerArchive area_enable_callout_line = 15;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area_enable_callout_line_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSSSOS.SpecIntegerArchive bar_enable_callout_line = 17;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bar_enable_callout_line_);
    }

    // optional .TSSSOS.SpecIntegerArchive bubble_enable_callout_line = 19;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bubble_enable_callout_line_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_enable_callout_line = 21;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_enable_callout_line_);
    }

    // optional .TSSSOS.SpecIntegerArchive line_enable_callout_line = 23;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *line_enable_callout_line_);
    }

    // optional .TSSSOS.SpecIntegerArchive pie_enable_callout_line = 25;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pie_enable_callout_line_);
    }

    // optional .TSSSOS.SpecIntegerArchive scatter_enable_callout_line = 27;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *scatter_enable_callout_line_);
    }

    // optional .TSSSOS.SpecIntegerArchive stacked_area_enable_callout_line = 29;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *stacked_area_enable_callout_line_);
    }

    // optional .TSSSOS.SpecIntegerArchive stacked_bar_enable_callout_line = 31;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *stacked_bar_enable_callout_line_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_negative_data = 33;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_error_bar_custom_negative_data_);
    }

    // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_negative_data_scatter_x = 35;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_error_bar_custom_negative_data_scatter_x_);
    }

    // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_positive_data = 37;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_error_bar_custom_positive_data_);
    }

    // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_positive_data_scatter_x = 39;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_error_bar_custom_positive_data_scatter_x_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_error_bar_fixed_value = 41;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_error_bar_fixed_value_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_error_bar_fixed_value_scatter_x = 43;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_error_bar_fixed_value_scatter_x_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_error_bar_percent_value = 45;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_error_bar_percent_value_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_error_bar_percent_value_scatter_x = 47;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_error_bar_percent_value_scatter_x_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .TSSSOS.SpecIntegerArchive default_error_bar_setting = 49;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_error_bar_setting_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_error_bar_setting_scatter_x = 51;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_error_bar_setting_scatter_x_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_error_bar_std_dev_value = 53;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_error_bar_std_dev_value_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_error_bar_std_dev_value_scatter_x = 55;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_error_bar_std_dev_value_scatter_x_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_error_bar_type = 57;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_error_bar_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_error_bar_type_scatter_x = 59;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_error_bar_type_scatter_x_);
    }

    // optional .TSSSOS.SpecDoubleArchive pie_label_explosion = 61;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pie_label_explosion_);
    }

    // optional .TSSSOS.SpecIntegerArchive bubble_line_type = 63;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bubble_line_type_);
    }

  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSSSOS.SpecIntegerArchive line_line_type = 65;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *line_line_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive mixed_line_line_type = 67;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_line_line_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive scatter_line_type = 69;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *scatter_line_type_);
    }

    // optional .TSCHSOS.SpecNumberFormatArchive default_number_format = 71;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_number_format_);
    }

    // optional .TSCHSOS.SpecNumberFormatArchive pie_number_format = 73;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pie_number_format_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_number_format_type = 75;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_number_format_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive pie_number_format_type = 77;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pie_number_format_type_);
    }

    // optional .TSCHSOS.SpecNumberFormatArchive stacked_percent_number_format = 79;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *stacked_percent_number_format_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSSSOS.SpecIntegerArchive default_series_type = 81;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_series_type_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_error_bar = 83;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_show_error_bar_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_error_bar_scatter_x = 85;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_show_error_bar_scatter_x_);
    }

    // optional .TSSSOS.SpecBoolArchive bubble_show_labels_in_front = 87;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bubble_show_labels_in_front_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_labels_in_front = 89;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_show_labels_in_front_);
    }

    // optional .TSSSOS.SpecBoolArchive scatter_show_line = 91;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *scatter_show_line_);
    }

    // optional .TSSSOS.SpecBoolArchive bubble_show_negative_data = 93;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bubble_show_negative_data_);
    }

    // optional .TSSSOS.SpecBoolArchive bubble_show_series_labels = 95;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bubble_show_series_labels_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSSSOS.SpecBoolArchive pie_show_series_labels = 97;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pie_show_series_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive scatter_show_series_labels = 99;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *scatter_show_series_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive area_show_symbol = 101;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area_show_symbol_);
    }

    // optional .TSSSOS.SpecBoolArchive line_show_symbol = 103;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *line_show_symbol_);
    }

    // optional .TSSSOS.SpecBoolArchive mixed_area_show_symbol = 105;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_area_show_symbol_);
    }

    // optional .TSSSOS.SpecBoolArchive mixed_line_show_symbol = 107;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_line_show_symbol_);
    }

    // optional .TSSSOS.SpecBoolArchive scatter_show_symbol = 109;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *scatter_show_symbol_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_trend_line = 111;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_show_trend_line_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .TSSSOS.SpecBoolArchive area_show_value_labels = 113;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area_show_value_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive bar_show_value_labels = 115;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bar_show_value_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive bubble_show_value_labels = 117;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bubble_show_value_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_value_labels = 119;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_show_value_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive line_show_value_labels = 121;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *line_show_value_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive mixed_show_value_labels = 123;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_show_value_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive pie_show_value_labels = 125;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pie_show_value_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive scatter_show_value_labels = 127;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *scatter_show_value_labels_);
    }

  }
  cached_has_bits = _has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSSSOS.SpecIntegerArchive bubble_size_dimension = 129;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bubble_size_dimension_);
    }

    // optional .TSSSOS.SpecBoolArchive area_stack_labels = 131;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area_stack_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive bar_stack_labels = 133;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bar_stack_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive bubble_stack_labels = 135;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bubble_stack_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive default_stack_labels = 137;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_stack_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive line_stack_labels = 139;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *line_stack_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive pie_stack_labels = 141;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pie_stack_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive scatter_stack_labels = 143;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *scatter_stack_labels_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSSSOS.SpecBoolArchive stacked_area_stack_labels = 145;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *stacked_area_stack_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive stacked_bar_stack_labels = 147;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *stacked_bar_stack_labels_);
    }

    // optional .TSSSOS.SpecIntegerArchive area_symbol_type = 149;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area_symbol_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive line_symbol_type = 151;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *line_symbol_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive mixed_area_symbol_type = 153;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_area_symbol_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive mixed_line_symbol_type = 155;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_line_symbol_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive scatter_symbol_type = 157;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *scatter_symbol_type_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_trend_line_equation_offset_x = 159;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_trend_line_equation_offset_x_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSSSOS.SpecDoubleArchive default_trend_line_equation_offset_y = 161;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_trend_line_equation_offset_y_);
    }

    // optional .TSSSOS.SpecStringArchive default_trend_line_label_string = 163;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_trend_line_label_string_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_trend_line_order = 165;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_trend_line_order_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_trend_line_period = 167;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_trend_line_period_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_trend_line_r_squared_offset_x = 169;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_trend_line_r_squared_offset_x_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_trend_line_r_squared_offset_y = 171;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_trend_line_r_squared_offset_y_);
    }

    // optional .TSSSOS.SpecBoolArchive default_trend_line_show_equation = 173;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_trend_line_show_equation_);
    }

    // optional .TSSSOS.SpecBoolArchive default_trend_line_show_label = 175;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_trend_line_show_label_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .TSSSOS.SpecBoolArchive default_trend_line_show_r2_value = 177;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_trend_line_show_r2_value_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_trend_line_type = 179;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_trend_line_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive bubble_value_labels_axis = 181;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bubble_value_labels_axis_);
    }

    // optional .TSSSOS.SpecIntegerArchive scatter_value_labels_axis = 183;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *scatter_value_labels_axis_);
    }

    // optional .TSSSOS.SpecDoubleArchive pie_wedge_explosion = 185;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pie_wedge_explosion_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_y_axis_ordinal = 187;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_y_axis_ordinal_);
    }

    // optional bool default10_date_format_undefined = 2;
    if (cached_has_bits & 0x40000000u) {
      total_size += 1 + 1;
    }

    // optional bool default10_number_format_undefined = 4;
    if (cached_has_bits & 0x80000000u) {
      total_size += 1 + 1;
    }

  }
  cached_has_bits = _has_bits_[3];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool pie10_number_format_undefined = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional bool pie23_label_explosion_undefined = 8;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool bubble_adjustment_scale_undefined = 10;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool default_date_format_undefined = 12;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool default_duration_format_undefined = 14;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool area_enable_callout_line_undefined = 16;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional bool bar_enable_callout_line_undefined = 18;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_enable_callout_line_undefined = 20;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool default_enable_callout_line_undefined = 22;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool line_enable_callout_line_undefined = 24;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool pie_enable_callout_line_undefined = 26;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_enable_callout_line_undefined = 28;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool stacked_area_enable_callout_line_undefined = 30;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional bool stacked_bar_enable_callout_line_undefined = 32;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_custom_negative_data_undefined = 34;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_custom_negative_data_scatter_x_undefined = 36;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool default_error_bar_custom_positive_data_undefined = 38;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_custom_positive_data_scatter_x_undefined = 40;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_fixed_value_undefined = 42;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_fixed_value_scatter_x_undefined = 44;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_percent_value_undefined = 46;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_percent_value_scatter_x_undefined = 48;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_setting_undefined = 50;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_setting_scatter_x_undefined = 52;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool default_error_bar_std_dev_value_undefined = 54;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_std_dev_value_scatter_x_undefined = 56;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_type_undefined = 58;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_type_scatter_x_undefined = 60;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + 1;
    }

    // optional bool pie_label_explosion_undefined = 62;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_line_type_undefined = 64;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + 1;
    }

    // optional bool line_line_type_undefined = 66;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_line_line_type_undefined = 68;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + 1;
    }

  }
  cached_has_bits = _has_bits_[4];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool scatter_line_type_undefined = 70;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 1;
    }

    // optional bool default_number_format_undefined = 72;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 1;
    }

    // optional bool pie_number_format_undefined = 74;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool default_number_format_type_undefined = 76;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

    // optional bool pie_number_format_type_undefined = 78;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional bool stacked_percent_number_format_undefined = 80;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional bool default_series_type_undefined = 82;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool default_show_error_bar_undefined = 84;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool default_show_error_bar_scatter_x_undefined = 86;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_show_labels_in_front_undefined = 88;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool default_show_labels_in_front_undefined = 90;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_show_line_undefined = 92;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_show_negative_data_undefined = 94;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_show_series_labels_undefined = 96;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

    // optional bool pie_show_series_labels_undefined = 98;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_show_series_labels_undefined = 100;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool area_show_symbol_undefined = 102;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool line_show_symbol_undefined = 104;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_area_show_symbol_undefined = 106;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_line_show_symbol_undefined = 108;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_show_symbol_undefined = 110;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

    // optional bool default_show_trend_line_undefined = 112;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool area_show_value_labels_undefined = 114;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional bool bar_show_value_labels_undefined = 116;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool bubble_show_value_labels_undefined = 118;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_show_value_labels_undefined = 120;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + 1;
    }

    // optional bool line_show_value_labels_undefined = 122;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_show_value_labels_undefined = 124;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + 1;
    }

    // optional bool pie_show_value_labels_undefined = 126;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_show_value_labels_undefined = 128;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_size_dimension_undefined = 130;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + 1;
    }

    // optional bool area_stack_labels_undefined = 132;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + 1;
    }

  }
  cached_has_bits = _has_bits_[5];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool bar_stack_labels_undefined = 134;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_stack_labels_undefined = 136;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 1;
    }

    // optional bool default_stack_labels_undefined = 138;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool line_stack_labels_undefined = 140;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

    // optional bool pie_stack_labels_undefined = 142;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_stack_labels_undefined = 144;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional bool stacked_area_stack_labels_undefined = 146;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool stacked_bar_stack_labels_undefined = 148;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool area_symbol_type_undefined = 150;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool line_symbol_type_undefined = 152;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_area_symbol_type_undefined = 154;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_line_symbol_type_undefined = 156;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_symbol_type_undefined = 158;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trend_line_equation_offset_x_undefined = 160;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trend_line_equation_offset_y_undefined = 162;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trend_line_label_string_undefined = 164;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool default_trend_line_order_undefined = 166;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trend_line_period_undefined = 168;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trend_line_r_squared_offset_x_undefined = 170;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trend_line_r_squared_offset_y_undefined = 172;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trend_line_show_equation_undefined = 174;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trend_line_show_label_undefined = 176;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trend_line_show_r2_value_undefined = 178;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trend_line_type_undefined = 180;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x0f000000u) {
    // optional bool bubble_value_labels_axis_undefined = 182;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_value_labels_axis_undefined = 184;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + 1;
    }

    // optional bool pie_wedge_explosion_undefined = 186;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_y_axis_ordinal_undefined = 188;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChartSeriesNonStylePropertyChangeSetArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const ChartSeriesNonStylePropertyChangeSetArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChartSeriesNonStylePropertyChangeSetArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive)
    MergeFrom(*source);
  }
}

void ChartSeriesNonStylePropertyChangeSetArchive::MergeFrom(const ChartSeriesNonStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_default10_date_format()->::TSCHSOS::SpecFormatObjectArchive::MergeFrom(from._internal_default10_date_format());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_default10_number_format()->::TSCHSOS::SpecNumberFormatArchive::MergeFrom(from._internal_default10_number_format());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_pie10_number_format()->::TSCHSOS::SpecNumberFormatArchive::MergeFrom(from._internal_pie10_number_format());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_pie23_label_explosion()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_pie23_label_explosion());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_bubble_adjustment_scale()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_bubble_adjustment_scale());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_default_date_format()->::TSCHSOS::SpecFormatObjectArchive::MergeFrom(from._internal_default_date_format());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_default_duration_format()->::TSCHSOS::SpecFormatObjectArchive::MergeFrom(from._internal_default_duration_format());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_area_enable_callout_line()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_area_enable_callout_line());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_bar_enable_callout_line()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_bar_enable_callout_line());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_bubble_enable_callout_line()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_bubble_enable_callout_line());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_default_enable_callout_line()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_enable_callout_line());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_line_enable_callout_line()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_line_enable_callout_line());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_pie_enable_callout_line()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_pie_enable_callout_line());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_scatter_enable_callout_line()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_scatter_enable_callout_line());
    }
    if (cached_has_bits & 0x00004000u) {
      _internal_mutable_stacked_area_enable_callout_line()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_stacked_area_enable_callout_line());
    }
    if (cached_has_bits & 0x00008000u) {
      _internal_mutable_stacked_bar_enable_callout_line()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_stacked_bar_enable_callout_line());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _internal_mutable_default_error_bar_custom_negative_data()->::TSCHSOS::SpecChartErrorBarCustomDataArchive::MergeFrom(from._internal_default_error_bar_custom_negative_data());
    }
    if (cached_has_bits & 0x00020000u) {
      _internal_mutable_default_error_bar_custom_negative_data_scatter_x()->::TSCHSOS::SpecChartErrorBarCustomDataArchive::MergeFrom(from._internal_default_error_bar_custom_negative_data_scatter_x());
    }
    if (cached_has_bits & 0x00040000u) {
      _internal_mutable_default_error_bar_custom_positive_data()->::TSCHSOS::SpecChartErrorBarCustomDataArchive::MergeFrom(from._internal_default_error_bar_custom_positive_data());
    }
    if (cached_has_bits & 0x00080000u) {
      _internal_mutable_default_error_bar_custom_positive_data_scatter_x()->::TSCHSOS::SpecChartErrorBarCustomDataArchive::MergeFrom(from._internal_default_error_bar_custom_positive_data_scatter_x());
    }
    if (cached_has_bits & 0x00100000u) {
      _internal_mutable_default_error_bar_fixed_value()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default_error_bar_fixed_value());
    }
    if (cached_has_bits & 0x00200000u) {
      _internal_mutable_default_error_bar_fixed_value_scatter_x()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default_error_bar_fixed_value_scatter_x());
    }
    if (cached_has_bits & 0x00400000u) {
      _internal_mutable_default_error_bar_percent_value()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default_error_bar_percent_value());
    }
    if (cached_has_bits & 0x00800000u) {
      _internal_mutable_default_error_bar_percent_value_scatter_x()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default_error_bar_percent_value_scatter_x());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _internal_mutable_default_error_bar_setting()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_error_bar_setting());
    }
    if (cached_has_bits & 0x02000000u) {
      _internal_mutable_default_error_bar_setting_scatter_x()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_error_bar_setting_scatter_x());
    }
    if (cached_has_bits & 0x04000000u) {
      _internal_mutable_default_error_bar_std_dev_value()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default_error_bar_std_dev_value());
    }
    if (cached_has_bits & 0x08000000u) {
      _internal_mutable_default_error_bar_std_dev_value_scatter_x()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default_error_bar_std_dev_value_scatter_x());
    }
    if (cached_has_bits & 0x10000000u) {
      _internal_mutable_default_error_bar_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_error_bar_type());
    }
    if (cached_has_bits & 0x20000000u) {
      _internal_mutable_default_error_bar_type_scatter_x()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_error_bar_type_scatter_x());
    }
    if (cached_has_bits & 0x40000000u) {
      _internal_mutable_pie_label_explosion()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_pie_label_explosion());
    }
    if (cached_has_bits & 0x80000000u) {
      _internal_mutable_bubble_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_bubble_line_type());
    }
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_line_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_line_line_type());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_mixed_line_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_mixed_line_line_type());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_scatter_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_scatter_line_type());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_default_number_format()->::TSCHSOS::SpecNumberFormatArchive::MergeFrom(from._internal_default_number_format());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_pie_number_format()->::TSCHSOS::SpecNumberFormatArchive::MergeFrom(from._internal_pie_number_format());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_default_number_format_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_number_format_type());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_pie_number_format_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_pie_number_format_type());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_stacked_percent_number_format()->::TSCHSOS::SpecNumberFormatArchive::MergeFrom(from._internal_stacked_percent_number_format());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_default_series_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_series_type());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_default_show_error_bar()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_default_show_error_bar());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_default_show_error_bar_scatter_x()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_default_show_error_bar_scatter_x());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_bubble_show_labels_in_front()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_bubble_show_labels_in_front());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_default_show_labels_in_front()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_default_show_labels_in_front());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_scatter_show_line()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_scatter_show_line());
    }
    if (cached_has_bits & 0x00004000u) {
      _internal_mutable_bubble_show_negative_data()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_bubble_show_negative_data());
    }
    if (cached_has_bits & 0x00008000u) {
      _internal_mutable_bubble_show_series_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_bubble_show_series_labels());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _internal_mutable_pie_show_series_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_pie_show_series_labels());
    }
    if (cached_has_bits & 0x00020000u) {
      _internal_mutable_scatter_show_series_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_scatter_show_series_labels());
    }
    if (cached_has_bits & 0x00040000u) {
      _internal_mutable_area_show_symbol()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_area_show_symbol());
    }
    if (cached_has_bits & 0x00080000u) {
      _internal_mutable_line_show_symbol()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_line_show_symbol());
    }
    if (cached_has_bits & 0x00100000u) {
      _internal_mutable_mixed_area_show_symbol()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_mixed_area_show_symbol());
    }
    if (cached_has_bits & 0x00200000u) {
      _internal_mutable_mixed_line_show_symbol()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_mixed_line_show_symbol());
    }
    if (cached_has_bits & 0x00400000u) {
      _internal_mutable_scatter_show_symbol()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_scatter_show_symbol());
    }
    if (cached_has_bits & 0x00800000u) {
      _internal_mutable_default_show_trend_line()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_default_show_trend_line());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _internal_mutable_area_show_value_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_area_show_value_labels());
    }
    if (cached_has_bits & 0x02000000u) {
      _internal_mutable_bar_show_value_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_bar_show_value_labels());
    }
    if (cached_has_bits & 0x04000000u) {
      _internal_mutable_bubble_show_value_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_bubble_show_value_labels());
    }
    if (cached_has_bits & 0x08000000u) {
      _internal_mutable_default_show_value_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_default_show_value_labels());
    }
    if (cached_has_bits & 0x10000000u) {
      _internal_mutable_line_show_value_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_line_show_value_labels());
    }
    if (cached_has_bits & 0x20000000u) {
      _internal_mutable_mixed_show_value_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_mixed_show_value_labels());
    }
    if (cached_has_bits & 0x40000000u) {
      _internal_mutable_pie_show_value_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_pie_show_value_labels());
    }
    if (cached_has_bits & 0x80000000u) {
      _internal_mutable_scatter_show_value_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_scatter_show_value_labels());
    }
  }
  cached_has_bits = from._has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_bubble_size_dimension()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_bubble_size_dimension());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_area_stack_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_area_stack_labels());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_bar_stack_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_bar_stack_labels());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_bubble_stack_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_bubble_stack_labels());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_default_stack_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_default_stack_labels());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_line_stack_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_line_stack_labels());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_pie_stack_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_pie_stack_labels());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_scatter_stack_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_scatter_stack_labels());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_stacked_area_stack_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_stacked_area_stack_labels());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_stacked_bar_stack_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_stacked_bar_stack_labels());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_area_symbol_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_area_symbol_type());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_line_symbol_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_line_symbol_type());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_mixed_area_symbol_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_mixed_area_symbol_type());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_mixed_line_symbol_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_mixed_line_symbol_type());
    }
    if (cached_has_bits & 0x00004000u) {
      _internal_mutable_scatter_symbol_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_scatter_symbol_type());
    }
    if (cached_has_bits & 0x00008000u) {
      _internal_mutable_default_trend_line_equation_offset_x()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default_trend_line_equation_offset_x());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _internal_mutable_default_trend_line_equation_offset_y()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default_trend_line_equation_offset_y());
    }
    if (cached_has_bits & 0x00020000u) {
      _internal_mutable_default_trend_line_label_string()->::TSSSOS::SpecStringArchive::MergeFrom(from._internal_default_trend_line_label_string());
    }
    if (cached_has_bits & 0x00040000u) {
      _internal_mutable_default_trend_line_order()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_trend_line_order());
    }
    if (cached_has_bits & 0x00080000u) {
      _internal_mutable_default_trend_line_period()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_trend_line_period());
    }
    if (cached_has_bits & 0x00100000u) {
      _internal_mutable_default_trend_line_r_squared_offset_x()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default_trend_line_r_squared_offset_x());
    }
    if (cached_has_bits & 0x00200000u) {
      _internal_mutable_default_trend_line_r_squared_offset_y()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default_trend_line_r_squared_offset_y());
    }
    if (cached_has_bits & 0x00400000u) {
      _internal_mutable_default_trend_line_show_equation()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_default_trend_line_show_equation());
    }
    if (cached_has_bits & 0x00800000u) {
      _internal_mutable_default_trend_line_show_label()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_default_trend_line_show_label());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _internal_mutable_default_trend_line_show_r2_value()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_default_trend_line_show_r2_value());
    }
    if (cached_has_bits & 0x02000000u) {
      _internal_mutable_default_trend_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_trend_line_type());
    }
    if (cached_has_bits & 0x04000000u) {
      _internal_mutable_bubble_value_labels_axis()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_bubble_value_labels_axis());
    }
    if (cached_has_bits & 0x08000000u) {
      _internal_mutable_scatter_value_labels_axis()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_scatter_value_labels_axis());
    }
    if (cached_has_bits & 0x10000000u) {
      _internal_mutable_pie_wedge_explosion()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_pie_wedge_explosion());
    }
    if (cached_has_bits & 0x20000000u) {
      _internal_mutable_default_y_axis_ordinal()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_y_axis_ordinal());
    }
    if (cached_has_bits & 0x40000000u) {
      default10_date_format_undefined_ = from.default10_date_format_undefined_;
    }
    if (cached_has_bits & 0x80000000u) {
      default10_number_format_undefined_ = from.default10_number_format_undefined_;
    }
    _has_bits_[2] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[3];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      pie10_number_format_undefined_ = from.pie10_number_format_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      pie23_label_explosion_undefined_ = from.pie23_label_explosion_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      bubble_adjustment_scale_undefined_ = from.bubble_adjustment_scale_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      default_date_format_undefined_ = from.default_date_format_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      default_duration_format_undefined_ = from.default_duration_format_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      area_enable_callout_line_undefined_ = from.area_enable_callout_line_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      bar_enable_callout_line_undefined_ = from.bar_enable_callout_line_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      bubble_enable_callout_line_undefined_ = from.bubble_enable_callout_line_undefined_;
    }
    _has_bits_[3] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      default_enable_callout_line_undefined_ = from.default_enable_callout_line_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      line_enable_callout_line_undefined_ = from.line_enable_callout_line_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      pie_enable_callout_line_undefined_ = from.pie_enable_callout_line_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      scatter_enable_callout_line_undefined_ = from.scatter_enable_callout_line_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      stacked_area_enable_callout_line_undefined_ = from.stacked_area_enable_callout_line_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      stacked_bar_enable_callout_line_undefined_ = from.stacked_bar_enable_callout_line_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      default_error_bar_custom_negative_data_undefined_ = from.default_error_bar_custom_negative_data_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      default_error_bar_custom_negative_data_scatter_x_undefined_ = from.default_error_bar_custom_negative_data_scatter_x_undefined_;
    }
    _has_bits_[3] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      default_error_bar_custom_positive_data_undefined_ = from.default_error_bar_custom_positive_data_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      default_error_bar_custom_positive_data_scatter_x_undefined_ = from.default_error_bar_custom_positive_data_scatter_x_undefined_;
    }
    if (cached_has_bits & 0x00040000u) {
      default_error_bar_fixed_value_undefined_ = from.default_error_bar_fixed_value_undefined_;
    }
    if (cached_has_bits & 0x00080000u) {
      default_error_bar_fixed_value_scatter_x_undefined_ = from.default_error_bar_fixed_value_scatter_x_undefined_;
    }
    if (cached_has_bits & 0x00100000u) {
      default_error_bar_percent_value_undefined_ = from.default_error_bar_percent_value_undefined_;
    }
    if (cached_has_bits & 0x00200000u) {
      default_error_bar_percent_value_scatter_x_undefined_ = from.default_error_bar_percent_value_scatter_x_undefined_;
    }
    if (cached_has_bits & 0x00400000u) {
      default_error_bar_setting_undefined_ = from.default_error_bar_setting_undefined_;
    }
    if (cached_has_bits & 0x00800000u) {
      default_error_bar_setting_scatter_x_undefined_ = from.default_error_bar_setting_scatter_x_undefined_;
    }
    _has_bits_[3] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      default_error_bar_std_dev_value_undefined_ = from.default_error_bar_std_dev_value_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      default_error_bar_std_dev_value_scatter_x_undefined_ = from.default_error_bar_std_dev_value_scatter_x_undefined_;
    }
    if (cached_has_bits & 0x04000000u) {
      default_error_bar_type_undefined_ = from.default_error_bar_type_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      default_error_bar_type_scatter_x_undefined_ = from.default_error_bar_type_scatter_x_undefined_;
    }
    if (cached_has_bits & 0x10000000u) {
      pie_label_explosion_undefined_ = from.pie_label_explosion_undefined_;
    }
    if (cached_has_bits & 0x20000000u) {
      bubble_line_type_undefined_ = from.bubble_line_type_undefined_;
    }
    if (cached_has_bits & 0x40000000u) {
      line_line_type_undefined_ = from.line_line_type_undefined_;
    }
    if (cached_has_bits & 0x80000000u) {
      mixed_line_line_type_undefined_ = from.mixed_line_line_type_undefined_;
    }
    _has_bits_[3] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[4];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      scatter_line_type_undefined_ = from.scatter_line_type_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      default_number_format_undefined_ = from.default_number_format_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      pie_number_format_undefined_ = from.pie_number_format_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      default_number_format_type_undefined_ = from.default_number_format_type_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      pie_number_format_type_undefined_ = from.pie_number_format_type_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      stacked_percent_number_format_undefined_ = from.stacked_percent_number_format_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      default_series_type_undefined_ = from.default_series_type_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      default_show_error_bar_undefined_ = from.default_show_error_bar_undefined_;
    }
    _has_bits_[4] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      default_show_error_bar_scatter_x_undefined_ = from.default_show_error_bar_scatter_x_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      bubble_show_labels_in_front_undefined_ = from.bubble_show_labels_in_front_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      default_show_labels_in_front_undefined_ = from.default_show_labels_in_front_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      scatter_show_line_undefined_ = from.scatter_show_line_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      bubble_show_negative_data_undefined_ = from.bubble_show_negative_data_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      bubble_show_series_labels_undefined_ = from.bubble_show_series_labels_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      pie_show_series_labels_undefined_ = from.pie_show_series_labels_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      scatter_show_series_labels_undefined_ = from.scatter_show_series_labels_undefined_;
    }
    _has_bits_[4] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      area_show_symbol_undefined_ = from.area_show_symbol_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      line_show_symbol_undefined_ = from.line_show_symbol_undefined_;
    }
    if (cached_has_bits & 0x00040000u) {
      mixed_area_show_symbol_undefined_ = from.mixed_area_show_symbol_undefined_;
    }
    if (cached_has_bits & 0x00080000u) {
      mixed_line_show_symbol_undefined_ = from.mixed_line_show_symbol_undefined_;
    }
    if (cached_has_bits & 0x00100000u) {
      scatter_show_symbol_undefined_ = from.scatter_show_symbol_undefined_;
    }
    if (cached_has_bits & 0x00200000u) {
      default_show_trend_line_undefined_ = from.default_show_trend_line_undefined_;
    }
    if (cached_has_bits & 0x00400000u) {
      area_show_value_labels_undefined_ = from.area_show_value_labels_undefined_;
    }
    if (cached_has_bits & 0x00800000u) {
      bar_show_value_labels_undefined_ = from.bar_show_value_labels_undefined_;
    }
    _has_bits_[4] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      bubble_show_value_labels_undefined_ = from.bubble_show_value_labels_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      default_show_value_labels_undefined_ = from.default_show_value_labels_undefined_;
    }
    if (cached_has_bits & 0x04000000u) {
      line_show_value_labels_undefined_ = from.line_show_value_labels_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      mixed_show_value_labels_undefined_ = from.mixed_show_value_labels_undefined_;
    }
    if (cached_has_bits & 0x10000000u) {
      pie_show_value_labels_undefined_ = from.pie_show_value_labels_undefined_;
    }
    if (cached_has_bits & 0x20000000u) {
      scatter_show_value_labels_undefined_ = from.scatter_show_value_labels_undefined_;
    }
    if (cached_has_bits & 0x40000000u) {
      bubble_size_dimension_undefined_ = from.bubble_size_dimension_undefined_;
    }
    if (cached_has_bits & 0x80000000u) {
      area_stack_labels_undefined_ = from.area_stack_labels_undefined_;
    }
    _has_bits_[4] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[5];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      bar_stack_labels_undefined_ = from.bar_stack_labels_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      bubble_stack_labels_undefined_ = from.bubble_stack_labels_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      default_stack_labels_undefined_ = from.default_stack_labels_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      line_stack_labels_undefined_ = from.line_stack_labels_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      pie_stack_labels_undefined_ = from.pie_stack_labels_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      scatter_stack_labels_undefined_ = from.scatter_stack_labels_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      stacked_area_stack_labels_undefined_ = from.stacked_area_stack_labels_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      stacked_bar_stack_labels_undefined_ = from.stacked_bar_stack_labels_undefined_;
    }
    _has_bits_[5] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      area_symbol_type_undefined_ = from.area_symbol_type_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      line_symbol_type_undefined_ = from.line_symbol_type_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      mixed_area_symbol_type_undefined_ = from.mixed_area_symbol_type_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      mixed_line_symbol_type_undefined_ = from.mixed_line_symbol_type_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      scatter_symbol_type_undefined_ = from.scatter_symbol_type_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      default_trend_line_equation_offset_x_undefined_ = from.default_trend_line_equation_offset_x_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      default_trend_line_equation_offset_y_undefined_ = from.default_trend_line_equation_offset_y_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      default_trend_line_label_string_undefined_ = from.default_trend_line_label_string_undefined_;
    }
    _has_bits_[5] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      default_trend_line_order_undefined_ = from.default_trend_line_order_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      default_trend_line_period_undefined_ = from.default_trend_line_period_undefined_;
    }
    if (cached_has_bits & 0x00040000u) {
      default_trend_line_r_squared_offset_x_undefined_ = from.default_trend_line_r_squared_offset_x_undefined_;
    }
    if (cached_has_bits & 0x00080000u) {
      default_trend_line_r_squared_offset_y_undefined_ = from.default_trend_line_r_squared_offset_y_undefined_;
    }
    if (cached_has_bits & 0x00100000u) {
      default_trend_line_show_equation_undefined_ = from.default_trend_line_show_equation_undefined_;
    }
    if (cached_has_bits & 0x00200000u) {
      default_trend_line_show_label_undefined_ = from.default_trend_line_show_label_undefined_;
    }
    if (cached_has_bits & 0x00400000u) {
      default_trend_line_show_r2_value_undefined_ = from.default_trend_line_show_r2_value_undefined_;
    }
    if (cached_has_bits & 0x00800000u) {
      default_trend_line_type_undefined_ = from.default_trend_line_type_undefined_;
    }
    _has_bits_[5] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0f000000u) {
    if (cached_has_bits & 0x01000000u) {
      bubble_value_labels_axis_undefined_ = from.bubble_value_labels_axis_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      scatter_value_labels_axis_undefined_ = from.scatter_value_labels_axis_undefined_;
    }
    if (cached_has_bits & 0x04000000u) {
      pie_wedge_explosion_undefined_ = from.pie_wedge_explosion_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      default_y_axis_ordinal_undefined_ = from.default_y_axis_ordinal_undefined_;
    }
    _has_bits_[5] |= cached_has_bits;
  }
}

void ChartSeriesNonStylePropertyChangeSetArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChartSeriesNonStylePropertyChangeSetArchive::CopyFrom(const ChartSeriesNonStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChartSeriesNonStylePropertyChangeSetArchive::IsInitialized() const {
  if (_internal_has_default10_date_format()) {
    if (!default10_date_format_->IsInitialized()) return false;
  }
  if (_internal_has_default10_number_format()) {
    if (!default10_number_format_->IsInitialized()) return false;
  }
  if (_internal_has_pie10_number_format()) {
    if (!pie10_number_format_->IsInitialized()) return false;
  }
  if (_internal_has_pie23_label_explosion()) {
    if (!pie23_label_explosion_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_adjustment_scale()) {
    if (!bubble_adjustment_scale_->IsInitialized()) return false;
  }
  if (_internal_has_default_date_format()) {
    if (!default_date_format_->IsInitialized()) return false;
  }
  if (_internal_has_default_duration_format()) {
    if (!default_duration_format_->IsInitialized()) return false;
  }
  if (_internal_has_area_enable_callout_line()) {
    if (!area_enable_callout_line_->IsInitialized()) return false;
  }
  if (_internal_has_bar_enable_callout_line()) {
    if (!bar_enable_callout_line_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_enable_callout_line()) {
    if (!bubble_enable_callout_line_->IsInitialized()) return false;
  }
  if (_internal_has_default_enable_callout_line()) {
    if (!default_enable_callout_line_->IsInitialized()) return false;
  }
  if (_internal_has_line_enable_callout_line()) {
    if (!line_enable_callout_line_->IsInitialized()) return false;
  }
  if (_internal_has_pie_enable_callout_line()) {
    if (!pie_enable_callout_line_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_enable_callout_line()) {
    if (!scatter_enable_callout_line_->IsInitialized()) return false;
  }
  if (_internal_has_stacked_area_enable_callout_line()) {
    if (!stacked_area_enable_callout_line_->IsInitialized()) return false;
  }
  if (_internal_has_stacked_bar_enable_callout_line()) {
    if (!stacked_bar_enable_callout_line_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_custom_negative_data()) {
    if (!default_error_bar_custom_negative_data_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_custom_negative_data_scatter_x()) {
    if (!default_error_bar_custom_negative_data_scatter_x_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_custom_positive_data()) {
    if (!default_error_bar_custom_positive_data_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_custom_positive_data_scatter_x()) {
    if (!default_error_bar_custom_positive_data_scatter_x_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_fixed_value()) {
    if (!default_error_bar_fixed_value_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_fixed_value_scatter_x()) {
    if (!default_error_bar_fixed_value_scatter_x_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_percent_value()) {
    if (!default_error_bar_percent_value_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_percent_value_scatter_x()) {
    if (!default_error_bar_percent_value_scatter_x_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_setting()) {
    if (!default_error_bar_setting_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_setting_scatter_x()) {
    if (!default_error_bar_setting_scatter_x_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_std_dev_value()) {
    if (!default_error_bar_std_dev_value_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_std_dev_value_scatter_x()) {
    if (!default_error_bar_std_dev_value_scatter_x_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_type()) {
    if (!default_error_bar_type_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_type_scatter_x()) {
    if (!default_error_bar_type_scatter_x_->IsInitialized()) return false;
  }
  if (_internal_has_pie_label_explosion()) {
    if (!pie_label_explosion_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_line_type()) {
    if (!bubble_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_line_line_type()) {
    if (!line_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_line_line_type()) {
    if (!mixed_line_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_line_type()) {
    if (!scatter_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_default_number_format()) {
    if (!default_number_format_->IsInitialized()) return false;
  }
  if (_internal_has_pie_number_format()) {
    if (!pie_number_format_->IsInitialized()) return false;
  }
  if (_internal_has_default_number_format_type()) {
    if (!default_number_format_type_->IsInitialized()) return false;
  }
  if (_internal_has_pie_number_format_type()) {
    if (!pie_number_format_type_->IsInitialized()) return false;
  }
  if (_internal_has_stacked_percent_number_format()) {
    if (!stacked_percent_number_format_->IsInitialized()) return false;
  }
  if (_internal_has_default_series_type()) {
    if (!default_series_type_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_error_bar()) {
    if (!default_show_error_bar_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_error_bar_scatter_x()) {
    if (!default_show_error_bar_scatter_x_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_show_labels_in_front()) {
    if (!bubble_show_labels_in_front_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_labels_in_front()) {
    if (!default_show_labels_in_front_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_show_line()) {
    if (!scatter_show_line_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_show_negative_data()) {
    if (!bubble_show_negative_data_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_show_series_labels()) {
    if (!bubble_show_series_labels_->IsInitialized()) return false;
  }
  if (_internal_has_pie_show_series_labels()) {
    if (!pie_show_series_labels_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_show_series_labels()) {
    if (!scatter_show_series_labels_->IsInitialized()) return false;
  }
  if (_internal_has_area_show_symbol()) {
    if (!area_show_symbol_->IsInitialized()) return false;
  }
  if (_internal_has_line_show_symbol()) {
    if (!line_show_symbol_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_area_show_symbol()) {
    if (!mixed_area_show_symbol_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_line_show_symbol()) {
    if (!mixed_line_show_symbol_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_show_symbol()) {
    if (!scatter_show_symbol_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_trend_line()) {
    if (!default_show_trend_line_->IsInitialized()) return false;
  }
  if (_internal_has_area_show_value_labels()) {
    if (!area_show_value_labels_->IsInitialized()) return false;
  }
  if (_internal_has_bar_show_value_labels()) {
    if (!bar_show_value_labels_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_show_value_labels()) {
    if (!bubble_show_value_labels_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_value_labels()) {
    if (!default_show_value_labels_->IsInitialized()) return false;
  }
  if (_internal_has_line_show_value_labels()) {
    if (!line_show_value_labels_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_show_value_labels()) {
    if (!mixed_show_value_labels_->IsInitialized()) return false;
  }
  if (_internal_has_pie_show_value_labels()) {
    if (!pie_show_value_labels_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_show_value_labels()) {
    if (!scatter_show_value_labels_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_size_dimension()) {
    if (!bubble_size_dimension_->IsInitialized()) return false;
  }
  if (_internal_has_area_stack_labels()) {
    if (!area_stack_labels_->IsInitialized()) return false;
  }
  if (_internal_has_bar_stack_labels()) {
    if (!bar_stack_labels_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_stack_labels()) {
    if (!bubble_stack_labels_->IsInitialized()) return false;
  }
  if (_internal_has_default_stack_labels()) {
    if (!default_stack_labels_->IsInitialized()) return false;
  }
  if (_internal_has_line_stack_labels()) {
    if (!line_stack_labels_->IsInitialized()) return false;
  }
  if (_internal_has_pie_stack_labels()) {
    if (!pie_stack_labels_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_stack_labels()) {
    if (!scatter_stack_labels_->IsInitialized()) return false;
  }
  if (_internal_has_stacked_area_stack_labels()) {
    if (!stacked_area_stack_labels_->IsInitialized()) return false;
  }
  if (_internal_has_stacked_bar_stack_labels()) {
    if (!stacked_bar_stack_labels_->IsInitialized()) return false;
  }
  if (_internal_has_area_symbol_type()) {
    if (!area_symbol_type_->IsInitialized()) return false;
  }
  if (_internal_has_line_symbol_type()) {
    if (!line_symbol_type_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_area_symbol_type()) {
    if (!mixed_area_symbol_type_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_line_symbol_type()) {
    if (!mixed_line_symbol_type_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_symbol_type()) {
    if (!scatter_symbol_type_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_equation_offset_x()) {
    if (!default_trend_line_equation_offset_x_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_equation_offset_y()) {
    if (!default_trend_line_equation_offset_y_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_label_string()) {
    if (!default_trend_line_label_string_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_order()) {
    if (!default_trend_line_order_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_period()) {
    if (!default_trend_line_period_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_r_squared_offset_x()) {
    if (!default_trend_line_r_squared_offset_x_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_r_squared_offset_y()) {
    if (!default_trend_line_r_squared_offset_y_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_show_equation()) {
    if (!default_trend_line_show_equation_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_show_label()) {
    if (!default_trend_line_show_label_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_show_r2_value()) {
    if (!default_trend_line_show_r2_value_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_type()) {
    if (!default_trend_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_value_labels_axis()) {
    if (!bubble_value_labels_axis_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_value_labels_axis()) {
    if (!scatter_value_labels_axis_->IsInitialized()) return false;
  }
  if (_internal_has_pie_wedge_explosion()) {
    if (!pie_wedge_explosion_->IsInitialized()) return false;
  }
  if (_internal_has_default_y_axis_ordinal()) {
    if (!default_y_axis_ordinal_->IsInitialized()) return false;
  }
  return true;
}

void ChartSeriesNonStylePropertyChangeSetArchive::InternalSwap(ChartSeriesNonStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  swap(_has_bits_[2], other->_has_bits_[2]);
  swap(_has_bits_[3], other->_has_bits_[3]);
  swap(_has_bits_[4], other->_has_bits_[4]);
  swap(_has_bits_[5], other->_has_bits_[5]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChartSeriesNonStylePropertyChangeSetArchive, default_y_axis_ordinal_undefined_)
      + sizeof(ChartSeriesNonStylePropertyChangeSetArchive::default_y_axis_ordinal_undefined_)
      - PROTOBUF_FIELD_OFFSET(ChartSeriesNonStylePropertyChangeSetArchive, default10_date_format_)>(
          reinterpret_cast<char*>(&default10_date_format_),
          reinterpret_cast<char*>(&other->default10_date_format_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChartSeriesNonStylePropertyChangeSetArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[19]);
}

// ===================================================================

class ChartSeriesStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<ChartSeriesStylePropertyChangeSetArchive>()._has_bits_);
  static const ::TSDSOS::SpecLineEndArchive& default_callout_line_end_line_end(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_callout_line_end_line_end(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_default_callout_line_end_line_end_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 512u;
  }
  static const ::TSDSOS::SpecLineEndArchive& default_callout_line_start_line_end(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_callout_line_start_line_end(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_default_callout_line_start_line_end_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 1024u;
  }
  static const ::TSDSOS::SpecStrokeArchive& default_callout_line_stroke_style(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_callout_line_stroke_style(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_default_callout_line_stroke_style_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 2048u;
  }
  static const ::TSDSOS::SpecLineEndArchive& default_error_bar_line_end(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_line_end(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_default_error_bar_line_end_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 4096u;
  }
  static const ::TSDSOS::SpecLineEndArchive& default_error_bar_line_end_scatter_x(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_line_end_scatter_x(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_default_error_bar_line_end_scatter_x_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 8192u;
  }
  static const ::TSDSOS::SpecShadowArchive& default_error_bar_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_shadow(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_default_error_bar_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 16384u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_error_bar_spacing(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_spacing(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_default_error_bar_spacing_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 32768u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_error_bar_spacing_scatter_x(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_spacing_scatter_x(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_default_error_bar_spacing_scatter_x_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 65536u;
  }
  static const ::TSDSOS::SpecStrokeArchive& default_error_bar_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_default_error_bar_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 131072u;
  }
  static const ::TSDSOS::SpecStrokeArchive& default_error_bar_stroke_scatter_x(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_stroke_scatter_x(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_default_error_bar_stroke_scatter_x_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 262144u;
  }
  static const ::TSDSOS::SpecFillArchive& area3d_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area3d_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_area3d_fill_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 524288u;
  }
  static const ::TSDSOS::SpecFillArchive& bar3d_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bar3d_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_bar3d_fill_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 1048576u;
  }
  static const ::TSDSOS::SpecFillArchive& column3d_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_column3d_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_column3d_fill_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 2097152u;
  }
  static const ::TSDSOS::SpecFillArchive& line3d_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_line3d_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_line3d_fill_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 4194304u;
  }
  static const ::TSDSOS::SpecFillArchive& pie3d_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_pie3d_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_pie3d_fill_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 8388608u;
  }
  static const ::TSDSOS::SpecFillArchive& area_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_area_fill_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 16777216u;
  }
  static const ::TSDSOS::SpecFillArchive& bar_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bar_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_bar_fill_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 33554432u;
  }
  static const ::TSDSOS::SpecFillArchive& column_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_column_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_column_fill_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 67108864u;
  }
  static const ::TSDSOS::SpecFillArchive& default_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_default_fill_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 134217728u;
  }
  static const ::TSDSOS::SpecFillArchive& mixed_area_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_area_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_mixed_area_fill_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 268435456u;
  }
  static const ::TSDSOS::SpecFillArchive& mixed_column_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_column_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_mixed_column_fill_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 536870912u;
  }
  static const ::TSDSOS::SpecFillArchive& pie_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_pie_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_pie_fill_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 1073741824u;
  }
  static const ::TSSSOS::SpecIntegerArchive& area_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_area_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 2147483648u;
  }
  static const ::TSSSOS::SpecIntegerArchive& bar_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bar_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_bar_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 1u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_default_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 2u;
  }
  static const ::TSSSOS::SpecIntegerArchive& donut_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_donut_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_donut_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 4u;
  }
  static const ::TSSSOS::SpecIntegerArchive& line_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_line_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_line_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 8u;
  }
  static const ::TSSSOS::SpecIntegerArchive& mixed_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static void set_has_mixed_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 16u;
  }
  static const ::TSSSOS::SpecIntegerArchive& pie_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_pie_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static void set_has_pie_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 32u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_opacity(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_opacity(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static void set_has_default_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 64u;
  }
  static const ::TSSSOS::SpecIntegerArchive& area_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area_outside_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static void set_has_area_outside_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 128u;
  }
  static const ::TSSSOS::SpecIntegerArchive& bar_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bar_outside_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static void set_has_bar_outside_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 256u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_outside_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static void set_has_default_outside_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 512u;
  }
  static const ::TSSSOS::SpecIntegerArchive& donut_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_donut_outside_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static void set_has_donut_outside_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 1024u;
  }
  static const ::TSSSOS::SpecIntegerArchive& mixed_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_outside_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static void set_has_mixed_outside_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 2048u;
  }
  static const ::TSSSOS::SpecIntegerArchive& pie_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_pie_outside_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static void set_has_pie_outside_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 4096u;
  }
  static const ::TSDSOS::SpecShadowArchive& area3d_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area3d_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static void set_has_area3d_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 8192u;
  }
  static const ::TSDSOS::SpecShadowArchive& bar3d_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bar3d_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static void set_has_bar3d_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 16384u;
  }
  static const ::TSDSOS::SpecShadowArchive& column3d_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_column3d_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static void set_has_column3d_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 32768u;
  }
  static const ::TSDSOS::SpecShadowArchive& line3d_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_line3d_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static void set_has_line3d_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 65536u;
  }
  static const ::TSDSOS::SpecShadowArchive& pie3d_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_pie3d_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 256u;
  }
  static void set_has_pie3d_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 131072u;
  }
  static const ::TSDSOS::SpecShadowArchive& area_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 512u;
  }
  static void set_has_area_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 262144u;
  }
  static const ::TSDSOS::SpecShadowArchive& bar_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bar_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 1024u;
  }
  static void set_has_bar_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 524288u;
  }
  static const ::TSDSOS::SpecShadowArchive& bubble_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 2048u;
  }
  static void set_has_bubble_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 1048576u;
  }
  static const ::TSDSOS::SpecShadowArchive& default_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 4096u;
  }
  static void set_has_default_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 2097152u;
  }
  static const ::TSDSOS::SpecShadowArchive& line_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_line_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 8192u;
  }
  static void set_has_line_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 4194304u;
  }
  static const ::TSDSOS::SpecShadowArchive& mixed_area_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_area_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 16384u;
  }
  static void set_has_mixed_area_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 8388608u;
  }
  static const ::TSDSOS::SpecShadowArchive& mixed_column_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_column_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 32768u;
  }
  static void set_has_mixed_column_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 16777216u;
  }
  static const ::TSDSOS::SpecShadowArchive& mixed_line_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_line_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 65536u;
  }
  static void set_has_mixed_line_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 33554432u;
  }
  static const ::TSDSOS::SpecShadowArchive& pie_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_pie_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 131072u;
  }
  static void set_has_pie_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 67108864u;
  }
  static const ::TSDSOS::SpecShadowArchive& scatter_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 262144u;
  }
  static void set_has_scatter_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 134217728u;
  }
  static const ::TSDSOS::SpecStrokeArchive& area_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area_stroke(HasBits* has_bits) {
    (*has_bits)[1] |= 524288u;
  }
  static void set_has_area_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 268435456u;
  }
  static const ::TSDSOS::SpecStrokeArchive& bar_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bar_stroke(HasBits* has_bits) {
    (*has_bits)[1] |= 1048576u;
  }
  static void set_has_bar_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 536870912u;
  }
  static const ::TSDSOS::SpecStrokeArchive& bubble_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_stroke(HasBits* has_bits) {
    (*has_bits)[1] |= 2097152u;
  }
  static void set_has_bubble_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 1073741824u;
  }
  static const ::TSDSOS::SpecStrokeArchive& line_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_line_stroke(HasBits* has_bits) {
    (*has_bits)[1] |= 4194304u;
  }
  static void set_has_line_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 2147483648u;
  }
  static const ::TSDSOS::SpecStrokeArchive& mixed_area_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_area_stroke(HasBits* has_bits) {
    (*has_bits)[1] |= 8388608u;
  }
  static void set_has_mixed_area_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 1u;
  }
  static const ::TSDSOS::SpecStrokeArchive& mixed_column_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_column_stroke(HasBits* has_bits) {
    (*has_bits)[1] |= 16777216u;
  }
  static void set_has_mixed_column_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 2u;
  }
  static const ::TSDSOS::SpecStrokeArchive& mixed_line_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_line_stroke(HasBits* has_bits) {
    (*has_bits)[1] |= 33554432u;
  }
  static void set_has_mixed_line_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 4u;
  }
  static const ::TSDSOS::SpecStrokeArchive& pie_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_pie_stroke(HasBits* has_bits) {
    (*has_bits)[1] |= 67108864u;
  }
  static void set_has_pie_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 8u;
  }
  static const ::TSDSOS::SpecStrokeArchive& scatter_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_stroke(HasBits* has_bits) {
    (*has_bits)[1] |= 134217728u;
  }
  static void set_has_scatter_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 16u;
  }
  static const ::TSDSOS::SpecFillArchive& area_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area_symbol_fill(HasBits* has_bits) {
    (*has_bits)[1] |= 268435456u;
  }
  static void set_has_area_symbol_fill_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 32u;
  }
  static const ::TSDSOS::SpecFillArchive& bubble_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_symbol_fill(HasBits* has_bits) {
    (*has_bits)[1] |= 536870912u;
  }
  static void set_has_bubble_symbol_fill_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 64u;
  }
  static const ::TSDSOS::SpecFillArchive& line_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_line_symbol_fill(HasBits* has_bits) {
    (*has_bits)[1] |= 1073741824u;
  }
  static void set_has_line_symbol_fill_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 128u;
  }
  static const ::TSDSOS::SpecFillArchive& mixed_area_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_area_symbol_fill(HasBits* has_bits) {
    (*has_bits)[1] |= 2147483648u;
  }
  static void set_has_mixed_area_symbol_fill_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 256u;
  }
  static const ::TSDSOS::SpecFillArchive& mixed_line_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_line_symbol_fill(HasBits* has_bits) {
    (*has_bits)[2] |= 1u;
  }
  static void set_has_mixed_line_symbol_fill_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 512u;
  }
  static const ::TSDSOS::SpecFillArchive& scatter_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_symbol_fill(HasBits* has_bits) {
    (*has_bits)[2] |= 2u;
  }
  static void set_has_scatter_symbol_fill_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 1024u;
  }
  static const ::TSSSOS::SpecBoolArchive& area_symbol_fill_use_series_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area_symbol_fill_use_series_fill(HasBits* has_bits) {
    (*has_bits)[2] |= 4u;
  }
  static void set_has_area_symbol_fill_use_series_fill_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 2048u;
  }
  static const ::TSSSOS::SpecBoolArchive& line_symbol_fill_use_series_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_line_symbol_fill_use_series_fill(HasBits* has_bits) {
    (*has_bits)[2] |= 8u;
  }
  static void set_has_line_symbol_fill_use_series_fill_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 4096u;
  }
  static const ::TSSSOS::SpecBoolArchive& mixed_area_symbol_fill_use_series_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_area_symbol_fill_use_series_fill(HasBits* has_bits) {
    (*has_bits)[2] |= 16u;
  }
  static void set_has_mixed_area_symbol_fill_use_series_fill_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 8192u;
  }
  static const ::TSSSOS::SpecBoolArchive& mixed_line_symbol_fill_use_series_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_line_symbol_fill_use_series_fill(HasBits* has_bits) {
    (*has_bits)[2] |= 32u;
  }
  static void set_has_mixed_line_symbol_fill_use_series_fill_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 16384u;
  }
  static const ::TSSSOS::SpecBoolArchive& area_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area_symbol_fill_use_series_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 64u;
  }
  static void set_has_area_symbol_fill_use_series_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 32768u;
  }
  static const ::TSSSOS::SpecBoolArchive& bubble_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_symbol_fill_use_series_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 128u;
  }
  static void set_has_bubble_symbol_fill_use_series_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 65536u;
  }
  static const ::TSSSOS::SpecBoolArchive& line_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_line_symbol_fill_use_series_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 256u;
  }
  static void set_has_line_symbol_fill_use_series_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 131072u;
  }
  static const ::TSSSOS::SpecBoolArchive& mixed_area_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_area_symbol_fill_use_series_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 512u;
  }
  static void set_has_mixed_area_symbol_fill_use_series_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 262144u;
  }
  static const ::TSSSOS::SpecBoolArchive& mixed_line_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_line_symbol_fill_use_series_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 1024u;
  }
  static void set_has_mixed_line_symbol_fill_use_series_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 524288u;
  }
  static const ::TSSSOS::SpecBoolArchive& scatter_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_symbol_fill_use_series_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 2048u;
  }
  static void set_has_scatter_symbol_fill_use_series_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 1048576u;
  }
  static const ::TSSSOS::SpecDoubleArchive& area_symbol_size(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area_symbol_size(HasBits* has_bits) {
    (*has_bits)[2] |= 4096u;
  }
  static void set_has_area_symbol_size_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 2097152u;
  }
  static const ::TSSSOS::SpecDoubleArchive& line_symbol_size(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_line_symbol_size(HasBits* has_bits) {
    (*has_bits)[2] |= 8192u;
  }
  static void set_has_line_symbol_size_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 4194304u;
  }
  static const ::TSSSOS::SpecDoubleArchive& mixed_area_symbol_size(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_area_symbol_size(HasBits* has_bits) {
    (*has_bits)[2] |= 16384u;
  }
  static void set_has_mixed_area_symbol_size_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 8388608u;
  }
  static const ::TSSSOS::SpecDoubleArchive& mixed_line_symbol_size(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_line_symbol_size(HasBits* has_bits) {
    (*has_bits)[2] |= 32768u;
  }
  static void set_has_mixed_line_symbol_size_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 16777216u;
  }
  static const ::TSSSOS::SpecDoubleArchive& scatter_symbol_size(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_symbol_size(HasBits* has_bits) {
    (*has_bits)[2] |= 65536u;
  }
  static void set_has_scatter_symbol_size_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 33554432u;
  }
  static const ::TSDSOS::SpecStrokeArchive& area_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area_symbol_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 131072u;
  }
  static void set_has_area_symbol_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 67108864u;
  }
  static const ::TSDSOS::SpecStrokeArchive& bubble_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_symbol_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 262144u;
  }
  static void set_has_bubble_symbol_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 134217728u;
  }
  static const ::TSDSOS::SpecStrokeArchive& line_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_line_symbol_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 524288u;
  }
  static void set_has_line_symbol_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 268435456u;
  }
  static const ::TSDSOS::SpecStrokeArchive& mixed_area_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_area_symbol_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 1048576u;
  }
  static void set_has_mixed_area_symbol_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 536870912u;
  }
  static const ::TSDSOS::SpecStrokeArchive& mixed_line_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_line_symbol_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 2097152u;
  }
  static void set_has_mixed_line_symbol_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 1073741824u;
  }
  static const ::TSDSOS::SpecStrokeArchive& scatter_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_symbol_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 4194304u;
  }
  static void set_has_scatter_symbol_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 2147483648u;
  }
  static const ::TSDSOS::SpecShadowArchive& default_trend_line_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_shadow(HasBits* has_bits) {
    (*has_bits)[2] |= 8388608u;
  }
  static void set_has_default_trend_line_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 1u;
  }
  static const ::TSDSOS::SpecStrokeArchive& default_trend_line_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 16777216u;
  }
  static void set_has_default_trend_line_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 2u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_trendline_equation_opacity(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_trendline_equation_opacity(HasBits* has_bits) {
    (*has_bits)[2] |= 33554432u;
  }
  static void set_has_default_trendline_equation_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 4u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_trendline_equation_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_trendline_equation_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[2] |= 67108864u;
  }
  static void set_has_default_trendline_equation_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 8u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_trendline_r_squared_opacity(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_trendline_r_squared_opacity(HasBits* has_bits) {
    (*has_bits)[2] |= 134217728u;
  }
  static void set_has_default_trendline_r_squared_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 16u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_trendline_r_squared_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_trendline_r_squared_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[2] |= 268435456u;
  }
  static void set_has_default_trendline_r_squared_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 32u;
  }
  static const ::TSSSOS::SpecIntegerArchive& area_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area_value_label_position(HasBits* has_bits) {
    (*has_bits)[2] |= 536870912u;
  }
  static void set_has_area_value_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 64u;
  }
  static const ::TSSSOS::SpecIntegerArchive& bar_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bar_value_label_position(HasBits* has_bits) {
    (*has_bits)[2] |= 1073741824u;
  }
  static void set_has_bar_value_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 128u;
  }
  static const ::TSSSOS::SpecIntegerArchive& bubble_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_value_label_position(HasBits* has_bits) {
    (*has_bits)[2] |= 2147483648u;
  }
  static void set_has_bubble_value_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 256u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_value_label_position(HasBits* has_bits) {
    (*has_bits)[3] |= 1u;
  }
  static void set_has_default_value_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 512u;
  }
  static const ::TSSSOS::SpecIntegerArchive& line_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_line_value_label_position(HasBits* has_bits) {
    (*has_bits)[3] |= 2u;
  }
  static void set_has_line_value_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 1024u;
  }
  static const ::TSSSOS::SpecIntegerArchive& mixed_area_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_area_value_label_position(HasBits* has_bits) {
    (*has_bits)[3] |= 4u;
  }
  static void set_has_mixed_area_value_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 2048u;
  }
  static const ::TSSSOS::SpecIntegerArchive& mixed_column_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_column_value_label_position(HasBits* has_bits) {
    (*has_bits)[3] |= 8u;
  }
  static void set_has_mixed_column_value_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 4096u;
  }
  static const ::TSSSOS::SpecIntegerArchive& mixed_line_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_line_value_label_position(HasBits* has_bits) {
    (*has_bits)[3] |= 16u;
  }
  static void set_has_mixed_line_value_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 8192u;
  }
  static const ::TSSSOS::SpecIntegerArchive& scatter_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_value_label_position(HasBits* has_bits) {
    (*has_bits)[3] |= 32u;
  }
  static void set_has_scatter_value_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 16384u;
  }
  static const ::TSSSOS::SpecIntegerArchive& stacked_area_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_stacked_area_value_label_position(HasBits* has_bits) {
    (*has_bits)[3] |= 64u;
  }
  static void set_has_stacked_area_value_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 32768u;
  }
  static const ::TSSSOS::SpecIntegerArchive& stacked_bar_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_stacked_bar_value_label_position(HasBits* has_bits) {
    (*has_bits)[3] |= 128u;
  }
  static void set_has_stacked_bar_value_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 65536u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_value_label_spacing(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_value_label_spacing(HasBits* has_bits) {
    (*has_bits)[3] |= 256u;
  }
  static void set_has_default_value_label_spacing_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 131072u;
  }
};

const ::TSDSOS::SpecLineEndArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_callout_line_end_line_end(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->default_callout_line_end_line_end_;
}
const ::TSDSOS::SpecLineEndArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_callout_line_start_line_end(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->default_callout_line_start_line_end_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_callout_line_stroke_style(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->default_callout_line_stroke_style_;
}
const ::TSDSOS::SpecLineEndArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_error_bar_line_end(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->default_error_bar_line_end_;
}
const ::TSDSOS::SpecLineEndArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_error_bar_line_end_scatter_x(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->default_error_bar_line_end_scatter_x_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_error_bar_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->default_error_bar_shadow_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_error_bar_spacing(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->default_error_bar_spacing_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_error_bar_spacing_scatter_x(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->default_error_bar_spacing_scatter_x_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_error_bar_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->default_error_bar_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_error_bar_stroke_scatter_x(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->default_error_bar_stroke_scatter_x_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area3d_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->area3d_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bar3d_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->bar3d_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::column3d_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->column3d_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::line3d_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->line3d_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::pie3d_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->pie3d_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->area_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bar_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->bar_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::column_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->column_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->default_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_area_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_area_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_column_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_column_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::pie_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->pie_fill_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->area_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bar_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->bar_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->default_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::donut_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->donut_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::line_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->line_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::pie_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->pie_label_paragraph_style_index_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_opacity(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->default_opacity_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->area_outside_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bar_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->bar_outside_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->default_outside_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::donut_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->donut_outside_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_outside_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::pie_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->pie_outside_label_paragraph_style_index_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area3d_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->area3d_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bar3d_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->bar3d_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::column3d_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->column3d_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::line3d_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->line3d_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::pie3d_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->pie3d_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->area_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bar_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->bar_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bubble_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->bubble_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->default_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::line_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->line_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_area_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_area_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_column_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_column_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_line_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_line_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::pie_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->pie_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::scatter_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->scatter_shadow_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->area_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bar_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->bar_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bubble_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->bubble_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::line_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->line_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_area_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_area_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_column_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_column_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_line_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_line_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::pie_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->pie_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::scatter_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->scatter_stroke_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->area_symbol_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bubble_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->bubble_symbol_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::line_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->line_symbol_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_area_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_area_symbol_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_line_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_line_symbol_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::scatter_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->scatter_symbol_fill_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area_symbol_fill_use_series_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->area_symbol_fill_use_series_fill_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::line_symbol_fill_use_series_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->line_symbol_fill_use_series_fill_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_area_symbol_fill_use_series_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_area_symbol_fill_use_series_fill_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_line_symbol_fill_use_series_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_line_symbol_fill_use_series_fill_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->area_symbol_fill_use_series_stroke_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bubble_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->bubble_symbol_fill_use_series_stroke_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::line_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->line_symbol_fill_use_series_stroke_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_area_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_area_symbol_fill_use_series_stroke_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_line_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_line_symbol_fill_use_series_stroke_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::scatter_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->scatter_symbol_fill_use_series_stroke_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area_symbol_size(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->area_symbol_size_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::line_symbol_size(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->line_symbol_size_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_area_symbol_size(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_area_symbol_size_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_line_symbol_size(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_line_symbol_size_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::scatter_symbol_size(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->scatter_symbol_size_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->area_symbol_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bubble_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->bubble_symbol_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::line_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->line_symbol_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_area_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_area_symbol_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_line_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_line_symbol_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::scatter_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->scatter_symbol_stroke_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_trend_line_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->default_trend_line_shadow_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_trend_line_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->default_trend_line_stroke_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_trendline_equation_opacity(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->default_trendline_equation_opacity_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_trendline_equation_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->default_trendline_equation_paragraph_style_index_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_trendline_r_squared_opacity(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->default_trendline_r_squared_opacity_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_trendline_r_squared_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->default_trendline_r_squared_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->area_value_label_position_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bar_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->bar_value_label_position_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bubble_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->bubble_value_label_position_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->default_value_label_position_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::line_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->line_value_label_position_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_area_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_area_value_label_position_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_column_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_column_value_label_position_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_line_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->mixed_line_value_label_position_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::scatter_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->scatter_value_label_position_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::stacked_area_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->stacked_area_value_label_position_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::stacked_bar_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->stacked_bar_value_label_position_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_value_label_spacing(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->default_value_label_spacing_;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_callout_line_end_line_end() {
  if (default_callout_line_end_line_end_ != nullptr) default_callout_line_end_line_end_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_callout_line_start_line_end() {
  if (default_callout_line_start_line_end_ != nullptr) default_callout_line_start_line_end_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_callout_line_stroke_style() {
  if (default_callout_line_stroke_style_ != nullptr) default_callout_line_stroke_style_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_error_bar_line_end() {
  if (default_error_bar_line_end_ != nullptr) default_error_bar_line_end_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_error_bar_line_end_scatter_x() {
  if (default_error_bar_line_end_scatter_x_ != nullptr) default_error_bar_line_end_scatter_x_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_error_bar_shadow() {
  if (default_error_bar_shadow_ != nullptr) default_error_bar_shadow_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_error_bar_spacing() {
  if (default_error_bar_spacing_ != nullptr) default_error_bar_spacing_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_error_bar_spacing_scatter_x() {
  if (default_error_bar_spacing_scatter_x_ != nullptr) default_error_bar_spacing_scatter_x_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_error_bar_stroke() {
  if (default_error_bar_stroke_ != nullptr) default_error_bar_stroke_->Clear();
  _has_bits_[0] &= ~0x00000100u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_error_bar_stroke_scatter_x() {
  if (default_error_bar_stroke_scatter_x_ != nullptr) default_error_bar_stroke_scatter_x_->Clear();
  _has_bits_[0] &= ~0x00000200u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area3d_fill() {
  if (area3d_fill_ != nullptr) area3d_fill_->Clear();
  _has_bits_[0] &= ~0x00000400u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bar3d_fill() {
  if (bar3d_fill_ != nullptr) bar3d_fill_->Clear();
  _has_bits_[0] &= ~0x00000800u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_column3d_fill() {
  if (column3d_fill_ != nullptr) column3d_fill_->Clear();
  _has_bits_[0] &= ~0x00001000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_line3d_fill() {
  if (line3d_fill_ != nullptr) line3d_fill_->Clear();
  _has_bits_[0] &= ~0x00002000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_pie3d_fill() {
  if (pie3d_fill_ != nullptr) pie3d_fill_->Clear();
  _has_bits_[0] &= ~0x00004000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area_fill() {
  if (area_fill_ != nullptr) area_fill_->Clear();
  _has_bits_[0] &= ~0x00008000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bar_fill() {
  if (bar_fill_ != nullptr) bar_fill_->Clear();
  _has_bits_[0] &= ~0x00010000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_column_fill() {
  if (column_fill_ != nullptr) column_fill_->Clear();
  _has_bits_[0] &= ~0x00020000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_fill() {
  if (default_fill_ != nullptr) default_fill_->Clear();
  _has_bits_[0] &= ~0x00040000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_area_fill() {
  if (mixed_area_fill_ != nullptr) mixed_area_fill_->Clear();
  _has_bits_[0] &= ~0x00080000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_column_fill() {
  if (mixed_column_fill_ != nullptr) mixed_column_fill_->Clear();
  _has_bits_[0] &= ~0x00100000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_pie_fill() {
  if (pie_fill_ != nullptr) pie_fill_->Clear();
  _has_bits_[0] &= ~0x00200000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area_label_paragraph_style_index() {
  if (area_label_paragraph_style_index_ != nullptr) area_label_paragraph_style_index_->Clear();
  _has_bits_[0] &= ~0x00400000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bar_label_paragraph_style_index() {
  if (bar_label_paragraph_style_index_ != nullptr) bar_label_paragraph_style_index_->Clear();
  _has_bits_[0] &= ~0x00800000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_label_paragraph_style_index() {
  if (default_label_paragraph_style_index_ != nullptr) default_label_paragraph_style_index_->Clear();
  _has_bits_[0] &= ~0x01000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_donut_label_paragraph_style_index() {
  if (donut_label_paragraph_style_index_ != nullptr) donut_label_paragraph_style_index_->Clear();
  _has_bits_[0] &= ~0x02000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_line_label_paragraph_style_index() {
  if (line_label_paragraph_style_index_ != nullptr) line_label_paragraph_style_index_->Clear();
  _has_bits_[0] &= ~0x04000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_label_paragraph_style_index() {
  if (mixed_label_paragraph_style_index_ != nullptr) mixed_label_paragraph_style_index_->Clear();
  _has_bits_[0] &= ~0x08000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_pie_label_paragraph_style_index() {
  if (pie_label_paragraph_style_index_ != nullptr) pie_label_paragraph_style_index_->Clear();
  _has_bits_[0] &= ~0x10000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_opacity() {
  if (default_opacity_ != nullptr) default_opacity_->Clear();
  _has_bits_[0] &= ~0x20000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area_outside_label_paragraph_style_index() {
  if (area_outside_label_paragraph_style_index_ != nullptr) area_outside_label_paragraph_style_index_->Clear();
  _has_bits_[0] &= ~0x40000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bar_outside_label_paragraph_style_index() {
  if (bar_outside_label_paragraph_style_index_ != nullptr) bar_outside_label_paragraph_style_index_->Clear();
  _has_bits_[0] &= ~0x80000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_outside_label_paragraph_style_index() {
  if (default_outside_label_paragraph_style_index_ != nullptr) default_outside_label_paragraph_style_index_->Clear();
  _has_bits_[1] &= ~0x00000001u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_donut_outside_label_paragraph_style_index() {
  if (donut_outside_label_paragraph_style_index_ != nullptr) donut_outside_label_paragraph_style_index_->Clear();
  _has_bits_[1] &= ~0x00000002u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_outside_label_paragraph_style_index() {
  if (mixed_outside_label_paragraph_style_index_ != nullptr) mixed_outside_label_paragraph_style_index_->Clear();
  _has_bits_[1] &= ~0x00000004u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_pie_outside_label_paragraph_style_index() {
  if (pie_outside_label_paragraph_style_index_ != nullptr) pie_outside_label_paragraph_style_index_->Clear();
  _has_bits_[1] &= ~0x00000008u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area3d_shadow() {
  if (area3d_shadow_ != nullptr) area3d_shadow_->Clear();
  _has_bits_[1] &= ~0x00000010u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bar3d_shadow() {
  if (bar3d_shadow_ != nullptr) bar3d_shadow_->Clear();
  _has_bits_[1] &= ~0x00000020u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_column3d_shadow() {
  if (column3d_shadow_ != nullptr) column3d_shadow_->Clear();
  _has_bits_[1] &= ~0x00000040u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_line3d_shadow() {
  if (line3d_shadow_ != nullptr) line3d_shadow_->Clear();
  _has_bits_[1] &= ~0x00000080u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_pie3d_shadow() {
  if (pie3d_shadow_ != nullptr) pie3d_shadow_->Clear();
  _has_bits_[1] &= ~0x00000100u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area_shadow() {
  if (area_shadow_ != nullptr) area_shadow_->Clear();
  _has_bits_[1] &= ~0x00000200u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bar_shadow() {
  if (bar_shadow_ != nullptr) bar_shadow_->Clear();
  _has_bits_[1] &= ~0x00000400u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bubble_shadow() {
  if (bubble_shadow_ != nullptr) bubble_shadow_->Clear();
  _has_bits_[1] &= ~0x00000800u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_shadow() {
  if (default_shadow_ != nullptr) default_shadow_->Clear();
  _has_bits_[1] &= ~0x00001000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_line_shadow() {
  if (line_shadow_ != nullptr) line_shadow_->Clear();
  _has_bits_[1] &= ~0x00002000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_area_shadow() {
  if (mixed_area_shadow_ != nullptr) mixed_area_shadow_->Clear();
  _has_bits_[1] &= ~0x00004000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_column_shadow() {
  if (mixed_column_shadow_ != nullptr) mixed_column_shadow_->Clear();
  _has_bits_[1] &= ~0x00008000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_line_shadow() {
  if (mixed_line_shadow_ != nullptr) mixed_line_shadow_->Clear();
  _has_bits_[1] &= ~0x00010000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_pie_shadow() {
  if (pie_shadow_ != nullptr) pie_shadow_->Clear();
  _has_bits_[1] &= ~0x00020000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_scatter_shadow() {
  if (scatter_shadow_ != nullptr) scatter_shadow_->Clear();
  _has_bits_[1] &= ~0x00040000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area_stroke() {
  if (area_stroke_ != nullptr) area_stroke_->Clear();
  _has_bits_[1] &= ~0x00080000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bar_stroke() {
  if (bar_stroke_ != nullptr) bar_stroke_->Clear();
  _has_bits_[1] &= ~0x00100000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bubble_stroke() {
  if (bubble_stroke_ != nullptr) bubble_stroke_->Clear();
  _has_bits_[1] &= ~0x00200000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_line_stroke() {
  if (line_stroke_ != nullptr) line_stroke_->Clear();
  _has_bits_[1] &= ~0x00400000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_area_stroke() {
  if (mixed_area_stroke_ != nullptr) mixed_area_stroke_->Clear();
  _has_bits_[1] &= ~0x00800000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_column_stroke() {
  if (mixed_column_stroke_ != nullptr) mixed_column_stroke_->Clear();
  _has_bits_[1] &= ~0x01000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_line_stroke() {
  if (mixed_line_stroke_ != nullptr) mixed_line_stroke_->Clear();
  _has_bits_[1] &= ~0x02000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_pie_stroke() {
  if (pie_stroke_ != nullptr) pie_stroke_->Clear();
  _has_bits_[1] &= ~0x04000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_scatter_stroke() {
  if (scatter_stroke_ != nullptr) scatter_stroke_->Clear();
  _has_bits_[1] &= ~0x08000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area_symbol_fill() {
  if (area_symbol_fill_ != nullptr) area_symbol_fill_->Clear();
  _has_bits_[1] &= ~0x10000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bubble_symbol_fill() {
  if (bubble_symbol_fill_ != nullptr) bubble_symbol_fill_->Clear();
  _has_bits_[1] &= ~0x20000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_line_symbol_fill() {
  if (line_symbol_fill_ != nullptr) line_symbol_fill_->Clear();
  _has_bits_[1] &= ~0x40000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_area_symbol_fill() {
  if (mixed_area_symbol_fill_ != nullptr) mixed_area_symbol_fill_->Clear();
  _has_bits_[1] &= ~0x80000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_line_symbol_fill() {
  if (mixed_line_symbol_fill_ != nullptr) mixed_line_symbol_fill_->Clear();
  _has_bits_[2] &= ~0x00000001u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_scatter_symbol_fill() {
  if (scatter_symbol_fill_ != nullptr) scatter_symbol_fill_->Clear();
  _has_bits_[2] &= ~0x00000002u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area_symbol_fill_use_series_fill() {
  if (area_symbol_fill_use_series_fill_ != nullptr) area_symbol_fill_use_series_fill_->Clear();
  _has_bits_[2] &= ~0x00000004u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_line_symbol_fill_use_series_fill() {
  if (line_symbol_fill_use_series_fill_ != nullptr) line_symbol_fill_use_series_fill_->Clear();
  _has_bits_[2] &= ~0x00000008u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_area_symbol_fill_use_series_fill() {
  if (mixed_area_symbol_fill_use_series_fill_ != nullptr) mixed_area_symbol_fill_use_series_fill_->Clear();
  _has_bits_[2] &= ~0x00000010u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_line_symbol_fill_use_series_fill() {
  if (mixed_line_symbol_fill_use_series_fill_ != nullptr) mixed_line_symbol_fill_use_series_fill_->Clear();
  _has_bits_[2] &= ~0x00000020u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area_symbol_fill_use_series_stroke() {
  if (area_symbol_fill_use_series_stroke_ != nullptr) area_symbol_fill_use_series_stroke_->Clear();
  _has_bits_[2] &= ~0x00000040u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bubble_symbol_fill_use_series_stroke() {
  if (bubble_symbol_fill_use_series_stroke_ != nullptr) bubble_symbol_fill_use_series_stroke_->Clear();
  _has_bits_[2] &= ~0x00000080u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_line_symbol_fill_use_series_stroke() {
  if (line_symbol_fill_use_series_stroke_ != nullptr) line_symbol_fill_use_series_stroke_->Clear();
  _has_bits_[2] &= ~0x00000100u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_area_symbol_fill_use_series_stroke() {
  if (mixed_area_symbol_fill_use_series_stroke_ != nullptr) mixed_area_symbol_fill_use_series_stroke_->Clear();
  _has_bits_[2] &= ~0x00000200u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_line_symbol_fill_use_series_stroke() {
  if (mixed_line_symbol_fill_use_series_stroke_ != nullptr) mixed_line_symbol_fill_use_series_stroke_->Clear();
  _has_bits_[2] &= ~0x00000400u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_scatter_symbol_fill_use_series_stroke() {
  if (scatter_symbol_fill_use_series_stroke_ != nullptr) scatter_symbol_fill_use_series_stroke_->Clear();
  _has_bits_[2] &= ~0x00000800u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area_symbol_size() {
  if (area_symbol_size_ != nullptr) area_symbol_size_->Clear();
  _has_bits_[2] &= ~0x00001000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_line_symbol_size() {
  if (line_symbol_size_ != nullptr) line_symbol_size_->Clear();
  _has_bits_[2] &= ~0x00002000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_area_symbol_size() {
  if (mixed_area_symbol_size_ != nullptr) mixed_area_symbol_size_->Clear();
  _has_bits_[2] &= ~0x00004000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_line_symbol_size() {
  if (mixed_line_symbol_size_ != nullptr) mixed_line_symbol_size_->Clear();
  _has_bits_[2] &= ~0x00008000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_scatter_symbol_size() {
  if (scatter_symbol_size_ != nullptr) scatter_symbol_size_->Clear();
  _has_bits_[2] &= ~0x00010000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area_symbol_stroke() {
  if (area_symbol_stroke_ != nullptr) area_symbol_stroke_->Clear();
  _has_bits_[2] &= ~0x00020000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bubble_symbol_stroke() {
  if (bubble_symbol_stroke_ != nullptr) bubble_symbol_stroke_->Clear();
  _has_bits_[2] &= ~0x00040000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_line_symbol_stroke() {
  if (line_symbol_stroke_ != nullptr) line_symbol_stroke_->Clear();
  _has_bits_[2] &= ~0x00080000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_area_symbol_stroke() {
  if (mixed_area_symbol_stroke_ != nullptr) mixed_area_symbol_stroke_->Clear();
  _has_bits_[2] &= ~0x00100000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_line_symbol_stroke() {
  if (mixed_line_symbol_stroke_ != nullptr) mixed_line_symbol_stroke_->Clear();
  _has_bits_[2] &= ~0x00200000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_scatter_symbol_stroke() {
  if (scatter_symbol_stroke_ != nullptr) scatter_symbol_stroke_->Clear();
  _has_bits_[2] &= ~0x00400000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_trend_line_shadow() {
  if (default_trend_line_shadow_ != nullptr) default_trend_line_shadow_->Clear();
  _has_bits_[2] &= ~0x00800000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_trend_line_stroke() {
  if (default_trend_line_stroke_ != nullptr) default_trend_line_stroke_->Clear();
  _has_bits_[2] &= ~0x01000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_trendline_equation_opacity() {
  if (default_trendline_equation_opacity_ != nullptr) default_trendline_equation_opacity_->Clear();
  _has_bits_[2] &= ~0x02000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_trendline_equation_paragraph_style_index() {
  if (default_trendline_equation_paragraph_style_index_ != nullptr) default_trendline_equation_paragraph_style_index_->Clear();
  _has_bits_[2] &= ~0x04000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_trendline_r_squared_opacity() {
  if (default_trendline_r_squared_opacity_ != nullptr) default_trendline_r_squared_opacity_->Clear();
  _has_bits_[2] &= ~0x08000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_trendline_r_squared_paragraph_style_index() {
  if (default_trendline_r_squared_paragraph_style_index_ != nullptr) default_trendline_r_squared_paragraph_style_index_->Clear();
  _has_bits_[2] &= ~0x10000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area_value_label_position() {
  if (area_value_label_position_ != nullptr) area_value_label_position_->Clear();
  _has_bits_[2] &= ~0x20000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bar_value_label_position() {
  if (bar_value_label_position_ != nullptr) bar_value_label_position_->Clear();
  _has_bits_[2] &= ~0x40000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bubble_value_label_position() {
  if (bubble_value_label_position_ != nullptr) bubble_value_label_position_->Clear();
  _has_bits_[2] &= ~0x80000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_value_label_position() {
  if (default_value_label_position_ != nullptr) default_value_label_position_->Clear();
  _has_bits_[3] &= ~0x00000001u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_line_value_label_position() {
  if (line_value_label_position_ != nullptr) line_value_label_position_->Clear();
  _has_bits_[3] &= ~0x00000002u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_area_value_label_position() {
  if (mixed_area_value_label_position_ != nullptr) mixed_area_value_label_position_->Clear();
  _has_bits_[3] &= ~0x00000004u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_column_value_label_position() {
  if (mixed_column_value_label_position_ != nullptr) mixed_column_value_label_position_->Clear();
  _has_bits_[3] &= ~0x00000008u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_line_value_label_position() {
  if (mixed_line_value_label_position_ != nullptr) mixed_line_value_label_position_->Clear();
  _has_bits_[3] &= ~0x00000010u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_scatter_value_label_position() {
  if (scatter_value_label_position_ != nullptr) scatter_value_label_position_->Clear();
  _has_bits_[3] &= ~0x00000020u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_stacked_area_value_label_position() {
  if (stacked_area_value_label_position_ != nullptr) stacked_area_value_label_position_->Clear();
  _has_bits_[3] &= ~0x00000040u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_stacked_bar_value_label_position() {
  if (stacked_bar_value_label_position_ != nullptr) stacked_bar_value_label_position_->Clear();
  _has_bits_[3] &= ~0x00000080u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_value_label_spacing() {
  if (default_value_label_spacing_ != nullptr) default_value_label_spacing_->Clear();
  _has_bits_[3] &= ~0x00000100u;
}
ChartSeriesStylePropertyChangeSetArchive::ChartSeriesStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.ChartSeriesStylePropertyChangeSetArchive)
}
ChartSeriesStylePropertyChangeSetArchive::ChartSeriesStylePropertyChangeSetArchive(const ChartSeriesStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_default_callout_line_end_line_end()) {
    default_callout_line_end_line_end_ = new ::TSDSOS::SpecLineEndArchive(*from.default_callout_line_end_line_end_);
  } else {
    default_callout_line_end_line_end_ = nullptr;
  }
  if (from._internal_has_default_callout_line_start_line_end()) {
    default_callout_line_start_line_end_ = new ::TSDSOS::SpecLineEndArchive(*from.default_callout_line_start_line_end_);
  } else {
    default_callout_line_start_line_end_ = nullptr;
  }
  if (from._internal_has_default_callout_line_stroke_style()) {
    default_callout_line_stroke_style_ = new ::TSDSOS::SpecStrokeArchive(*from.default_callout_line_stroke_style_);
  } else {
    default_callout_line_stroke_style_ = nullptr;
  }
  if (from._internal_has_default_error_bar_line_end()) {
    default_error_bar_line_end_ = new ::TSDSOS::SpecLineEndArchive(*from.default_error_bar_line_end_);
  } else {
    default_error_bar_line_end_ = nullptr;
  }
  if (from._internal_has_default_error_bar_line_end_scatter_x()) {
    default_error_bar_line_end_scatter_x_ = new ::TSDSOS::SpecLineEndArchive(*from.default_error_bar_line_end_scatter_x_);
  } else {
    default_error_bar_line_end_scatter_x_ = nullptr;
  }
  if (from._internal_has_default_error_bar_shadow()) {
    default_error_bar_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.default_error_bar_shadow_);
  } else {
    default_error_bar_shadow_ = nullptr;
  }
  if (from._internal_has_default_error_bar_spacing()) {
    default_error_bar_spacing_ = new ::TSSSOS::SpecIntegerArchive(*from.default_error_bar_spacing_);
  } else {
    default_error_bar_spacing_ = nullptr;
  }
  if (from._internal_has_default_error_bar_spacing_scatter_x()) {
    default_error_bar_spacing_scatter_x_ = new ::TSSSOS::SpecIntegerArchive(*from.default_error_bar_spacing_scatter_x_);
  } else {
    default_error_bar_spacing_scatter_x_ = nullptr;
  }
  if (from._internal_has_default_error_bar_stroke()) {
    default_error_bar_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.default_error_bar_stroke_);
  } else {
    default_error_bar_stroke_ = nullptr;
  }
  if (from._internal_has_default_error_bar_stroke_scatter_x()) {
    default_error_bar_stroke_scatter_x_ = new ::TSDSOS::SpecStrokeArchive(*from.default_error_bar_stroke_scatter_x_);
  } else {
    default_error_bar_stroke_scatter_x_ = nullptr;
  }
  if (from._internal_has_area3d_fill()) {
    area3d_fill_ = new ::TSDSOS::SpecFillArchive(*from.area3d_fill_);
  } else {
    area3d_fill_ = nullptr;
  }
  if (from._internal_has_bar3d_fill()) {
    bar3d_fill_ = new ::TSDSOS::SpecFillArchive(*from.bar3d_fill_);
  } else {
    bar3d_fill_ = nullptr;
  }
  if (from._internal_has_column3d_fill()) {
    column3d_fill_ = new ::TSDSOS::SpecFillArchive(*from.column3d_fill_);
  } else {
    column3d_fill_ = nullptr;
  }
  if (from._internal_has_line3d_fill()) {
    line3d_fill_ = new ::TSDSOS::SpecFillArchive(*from.line3d_fill_);
  } else {
    line3d_fill_ = nullptr;
  }
  if (from._internal_has_pie3d_fill()) {
    pie3d_fill_ = new ::TSDSOS::SpecFillArchive(*from.pie3d_fill_);
  } else {
    pie3d_fill_ = nullptr;
  }
  if (from._internal_has_area_fill()) {
    area_fill_ = new ::TSDSOS::SpecFillArchive(*from.area_fill_);
  } else {
    area_fill_ = nullptr;
  }
  if (from._internal_has_bar_fill()) {
    bar_fill_ = new ::TSDSOS::SpecFillArchive(*from.bar_fill_);
  } else {
    bar_fill_ = nullptr;
  }
  if (from._internal_has_column_fill()) {
    column_fill_ = new ::TSDSOS::SpecFillArchive(*from.column_fill_);
  } else {
    column_fill_ = nullptr;
  }
  if (from._internal_has_default_fill()) {
    default_fill_ = new ::TSDSOS::SpecFillArchive(*from.default_fill_);
  } else {
    default_fill_ = nullptr;
  }
  if (from._internal_has_mixed_area_fill()) {
    mixed_area_fill_ = new ::TSDSOS::SpecFillArchive(*from.mixed_area_fill_);
  } else {
    mixed_area_fill_ = nullptr;
  }
  if (from._internal_has_mixed_column_fill()) {
    mixed_column_fill_ = new ::TSDSOS::SpecFillArchive(*from.mixed_column_fill_);
  } else {
    mixed_column_fill_ = nullptr;
  }
  if (from._internal_has_pie_fill()) {
    pie_fill_ = new ::TSDSOS::SpecFillArchive(*from.pie_fill_);
  } else {
    pie_fill_ = nullptr;
  }
  if (from._internal_has_area_label_paragraph_style_index()) {
    area_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.area_label_paragraph_style_index_);
  } else {
    area_label_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_bar_label_paragraph_style_index()) {
    bar_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.bar_label_paragraph_style_index_);
  } else {
    bar_label_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_default_label_paragraph_style_index()) {
    default_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.default_label_paragraph_style_index_);
  } else {
    default_label_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_donut_label_paragraph_style_index()) {
    donut_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.donut_label_paragraph_style_index_);
  } else {
    donut_label_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_line_label_paragraph_style_index()) {
    line_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.line_label_paragraph_style_index_);
  } else {
    line_label_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_mixed_label_paragraph_style_index()) {
    mixed_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.mixed_label_paragraph_style_index_);
  } else {
    mixed_label_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_pie_label_paragraph_style_index()) {
    pie_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.pie_label_paragraph_style_index_);
  } else {
    pie_label_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_default_opacity()) {
    default_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from.default_opacity_);
  } else {
    default_opacity_ = nullptr;
  }
  if (from._internal_has_area_outside_label_paragraph_style_index()) {
    area_outside_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.area_outside_label_paragraph_style_index_);
  } else {
    area_outside_label_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_bar_outside_label_paragraph_style_index()) {
    bar_outside_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.bar_outside_label_paragraph_style_index_);
  } else {
    bar_outside_label_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_default_outside_label_paragraph_style_index()) {
    default_outside_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.default_outside_label_paragraph_style_index_);
  } else {
    default_outside_label_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_donut_outside_label_paragraph_style_index()) {
    donut_outside_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.donut_outside_label_paragraph_style_index_);
  } else {
    donut_outside_label_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_mixed_outside_label_paragraph_style_index()) {
    mixed_outside_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.mixed_outside_label_paragraph_style_index_);
  } else {
    mixed_outside_label_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_pie_outside_label_paragraph_style_index()) {
    pie_outside_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.pie_outside_label_paragraph_style_index_);
  } else {
    pie_outside_label_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_area3d_shadow()) {
    area3d_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.area3d_shadow_);
  } else {
    area3d_shadow_ = nullptr;
  }
  if (from._internal_has_bar3d_shadow()) {
    bar3d_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.bar3d_shadow_);
  } else {
    bar3d_shadow_ = nullptr;
  }
  if (from._internal_has_column3d_shadow()) {
    column3d_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.column3d_shadow_);
  } else {
    column3d_shadow_ = nullptr;
  }
  if (from._internal_has_line3d_shadow()) {
    line3d_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.line3d_shadow_);
  } else {
    line3d_shadow_ = nullptr;
  }
  if (from._internal_has_pie3d_shadow()) {
    pie3d_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.pie3d_shadow_);
  } else {
    pie3d_shadow_ = nullptr;
  }
  if (from._internal_has_area_shadow()) {
    area_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.area_shadow_);
  } else {
    area_shadow_ = nullptr;
  }
  if (from._internal_has_bar_shadow()) {
    bar_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.bar_shadow_);
  } else {
    bar_shadow_ = nullptr;
  }
  if (from._internal_has_bubble_shadow()) {
    bubble_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.bubble_shadow_);
  } else {
    bubble_shadow_ = nullptr;
  }
  if (from._internal_has_default_shadow()) {
    default_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.default_shadow_);
  } else {
    default_shadow_ = nullptr;
  }
  if (from._internal_has_line_shadow()) {
    line_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.line_shadow_);
  } else {
    line_shadow_ = nullptr;
  }
  if (from._internal_has_mixed_area_shadow()) {
    mixed_area_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.mixed_area_shadow_);
  } else {
    mixed_area_shadow_ = nullptr;
  }
  if (from._internal_has_mixed_column_shadow()) {
    mixed_column_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.mixed_column_shadow_);
  } else {
    mixed_column_shadow_ = nullptr;
  }
  if (from._internal_has_mixed_line_shadow()) {
    mixed_line_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.mixed_line_shadow_);
  } else {
    mixed_line_shadow_ = nullptr;
  }
  if (from._internal_has_pie_shadow()) {
    pie_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.pie_shadow_);
  } else {
    pie_shadow_ = nullptr;
  }
  if (from._internal_has_scatter_shadow()) {
    scatter_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.scatter_shadow_);
  } else {
    scatter_shadow_ = nullptr;
  }
  if (from._internal_has_area_stroke()) {
    area_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.area_stroke_);
  } else {
    area_stroke_ = nullptr;
  }
  if (from._internal_has_bar_stroke()) {
    bar_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.bar_stroke_);
  } else {
    bar_stroke_ = nullptr;
  }
  if (from._internal_has_bubble_stroke()) {
    bubble_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.bubble_stroke_);
  } else {
    bubble_stroke_ = nullptr;
  }
  if (from._internal_has_line_stroke()) {
    line_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.line_stroke_);
  } else {
    line_stroke_ = nullptr;
  }
  if (from._internal_has_mixed_area_stroke()) {
    mixed_area_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.mixed_area_stroke_);
  } else {
    mixed_area_stroke_ = nullptr;
  }
  if (from._internal_has_mixed_column_stroke()) {
    mixed_column_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.mixed_column_stroke_);
  } else {
    mixed_column_stroke_ = nullptr;
  }
  if (from._internal_has_mixed_line_stroke()) {
    mixed_line_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.mixed_line_stroke_);
  } else {
    mixed_line_stroke_ = nullptr;
  }
  if (from._internal_has_pie_stroke()) {
    pie_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.pie_stroke_);
  } else {
    pie_stroke_ = nullptr;
  }
  if (from._internal_has_scatter_stroke()) {
    scatter_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.scatter_stroke_);
  } else {
    scatter_stroke_ = nullptr;
  }
  if (from._internal_has_area_symbol_fill()) {
    area_symbol_fill_ = new ::TSDSOS::SpecFillArchive(*from.area_symbol_fill_);
  } else {
    area_symbol_fill_ = nullptr;
  }
  if (from._internal_has_bubble_symbol_fill()) {
    bubble_symbol_fill_ = new ::TSDSOS::SpecFillArchive(*from.bubble_symbol_fill_);
  } else {
    bubble_symbol_fill_ = nullptr;
  }
  if (from._internal_has_line_symbol_fill()) {
    line_symbol_fill_ = new ::TSDSOS::SpecFillArchive(*from.line_symbol_fill_);
  } else {
    line_symbol_fill_ = nullptr;
  }
  if (from._internal_has_mixed_area_symbol_fill()) {
    mixed_area_symbol_fill_ = new ::TSDSOS::SpecFillArchive(*from.mixed_area_symbol_fill_);
  } else {
    mixed_area_symbol_fill_ = nullptr;
  }
  if (from._internal_has_mixed_line_symbol_fill()) {
    mixed_line_symbol_fill_ = new ::TSDSOS::SpecFillArchive(*from.mixed_line_symbol_fill_);
  } else {
    mixed_line_symbol_fill_ = nullptr;
  }
  if (from._internal_has_scatter_symbol_fill()) {
    scatter_symbol_fill_ = new ::TSDSOS::SpecFillArchive(*from.scatter_symbol_fill_);
  } else {
    scatter_symbol_fill_ = nullptr;
  }
  if (from._internal_has_area_symbol_fill_use_series_fill()) {
    area_symbol_fill_use_series_fill_ = new ::TSSSOS::SpecBoolArchive(*from.area_symbol_fill_use_series_fill_);
  } else {
    area_symbol_fill_use_series_fill_ = nullptr;
  }
  if (from._internal_has_line_symbol_fill_use_series_fill()) {
    line_symbol_fill_use_series_fill_ = new ::TSSSOS::SpecBoolArchive(*from.line_symbol_fill_use_series_fill_);
  } else {
    line_symbol_fill_use_series_fill_ = nullptr;
  }
  if (from._internal_has_mixed_area_symbol_fill_use_series_fill()) {
    mixed_area_symbol_fill_use_series_fill_ = new ::TSSSOS::SpecBoolArchive(*from.mixed_area_symbol_fill_use_series_fill_);
  } else {
    mixed_area_symbol_fill_use_series_fill_ = nullptr;
  }
  if (from._internal_has_mixed_line_symbol_fill_use_series_fill()) {
    mixed_line_symbol_fill_use_series_fill_ = new ::TSSSOS::SpecBoolArchive(*from.mixed_line_symbol_fill_use_series_fill_);
  } else {
    mixed_line_symbol_fill_use_series_fill_ = nullptr;
  }
  if (from._internal_has_area_symbol_fill_use_series_stroke()) {
    area_symbol_fill_use_series_stroke_ = new ::TSSSOS::SpecBoolArchive(*from.area_symbol_fill_use_series_stroke_);
  } else {
    area_symbol_fill_use_series_stroke_ = nullptr;
  }
  if (from._internal_has_bubble_symbol_fill_use_series_stroke()) {
    bubble_symbol_fill_use_series_stroke_ = new ::TSSSOS::SpecBoolArchive(*from.bubble_symbol_fill_use_series_stroke_);
  } else {
    bubble_symbol_fill_use_series_stroke_ = nullptr;
  }
  if (from._internal_has_line_symbol_fill_use_series_stroke()) {
    line_symbol_fill_use_series_stroke_ = new ::TSSSOS::SpecBoolArchive(*from.line_symbol_fill_use_series_stroke_);
  } else {
    line_symbol_fill_use_series_stroke_ = nullptr;
  }
  if (from._internal_has_mixed_area_symbol_fill_use_series_stroke()) {
    mixed_area_symbol_fill_use_series_stroke_ = new ::TSSSOS::SpecBoolArchive(*from.mixed_area_symbol_fill_use_series_stroke_);
  } else {
    mixed_area_symbol_fill_use_series_stroke_ = nullptr;
  }
  if (from._internal_has_mixed_line_symbol_fill_use_series_stroke()) {
    mixed_line_symbol_fill_use_series_stroke_ = new ::TSSSOS::SpecBoolArchive(*from.mixed_line_symbol_fill_use_series_stroke_);
  } else {
    mixed_line_symbol_fill_use_series_stroke_ = nullptr;
  }
  if (from._internal_has_scatter_symbol_fill_use_series_stroke()) {
    scatter_symbol_fill_use_series_stroke_ = new ::TSSSOS::SpecBoolArchive(*from.scatter_symbol_fill_use_series_stroke_);
  } else {
    scatter_symbol_fill_use_series_stroke_ = nullptr;
  }
  if (from._internal_has_area_symbol_size()) {
    area_symbol_size_ = new ::TSSSOS::SpecDoubleArchive(*from.area_symbol_size_);
  } else {
    area_symbol_size_ = nullptr;
  }
  if (from._internal_has_line_symbol_size()) {
    line_symbol_size_ = new ::TSSSOS::SpecDoubleArchive(*from.line_symbol_size_);
  } else {
    line_symbol_size_ = nullptr;
  }
  if (from._internal_has_mixed_area_symbol_size()) {
    mixed_area_symbol_size_ = new ::TSSSOS::SpecDoubleArchive(*from.mixed_area_symbol_size_);
  } else {
    mixed_area_symbol_size_ = nullptr;
  }
  if (from._internal_has_mixed_line_symbol_size()) {
    mixed_line_symbol_size_ = new ::TSSSOS::SpecDoubleArchive(*from.mixed_line_symbol_size_);
  } else {
    mixed_line_symbol_size_ = nullptr;
  }
  if (from._internal_has_scatter_symbol_size()) {
    scatter_symbol_size_ = new ::TSSSOS::SpecDoubleArchive(*from.scatter_symbol_size_);
  } else {
    scatter_symbol_size_ = nullptr;
  }
  if (from._internal_has_area_symbol_stroke()) {
    area_symbol_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.area_symbol_stroke_);
  } else {
    area_symbol_stroke_ = nullptr;
  }
  if (from._internal_has_bubble_symbol_stroke()) {
    bubble_symbol_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.bubble_symbol_stroke_);
  } else {
    bubble_symbol_stroke_ = nullptr;
  }
  if (from._internal_has_line_symbol_stroke()) {
    line_symbol_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.line_symbol_stroke_);
  } else {
    line_symbol_stroke_ = nullptr;
  }
  if (from._internal_has_mixed_area_symbol_stroke()) {
    mixed_area_symbol_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.mixed_area_symbol_stroke_);
  } else {
    mixed_area_symbol_stroke_ = nullptr;
  }
  if (from._internal_has_mixed_line_symbol_stroke()) {
    mixed_line_symbol_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.mixed_line_symbol_stroke_);
  } else {
    mixed_line_symbol_stroke_ = nullptr;
  }
  if (from._internal_has_scatter_symbol_stroke()) {
    scatter_symbol_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.scatter_symbol_stroke_);
  } else {
    scatter_symbol_stroke_ = nullptr;
  }
  if (from._internal_has_default_trend_line_shadow()) {
    default_trend_line_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.default_trend_line_shadow_);
  } else {
    default_trend_line_shadow_ = nullptr;
  }
  if (from._internal_has_default_trend_line_stroke()) {
    default_trend_line_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.default_trend_line_stroke_);
  } else {
    default_trend_line_stroke_ = nullptr;
  }
  if (from._internal_has_default_trendline_equation_opacity()) {
    default_trendline_equation_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from.default_trendline_equation_opacity_);
  } else {
    default_trendline_equation_opacity_ = nullptr;
  }
  if (from._internal_has_default_trendline_equation_paragraph_style_index()) {
    default_trendline_equation_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.default_trendline_equation_paragraph_style_index_);
  } else {
    default_trendline_equation_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_default_trendline_r_squared_opacity()) {
    default_trendline_r_squared_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from.default_trendline_r_squared_opacity_);
  } else {
    default_trendline_r_squared_opacity_ = nullptr;
  }
  if (from._internal_has_default_trendline_r_squared_paragraph_style_index()) {
    default_trendline_r_squared_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.default_trendline_r_squared_paragraph_style_index_);
  } else {
    default_trendline_r_squared_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_area_value_label_position()) {
    area_value_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from.area_value_label_position_);
  } else {
    area_value_label_position_ = nullptr;
  }
  if (from._internal_has_bar_value_label_position()) {
    bar_value_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from.bar_value_label_position_);
  } else {
    bar_value_label_position_ = nullptr;
  }
  if (from._internal_has_bubble_value_label_position()) {
    bubble_value_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from.bubble_value_label_position_);
  } else {
    bubble_value_label_position_ = nullptr;
  }
  if (from._internal_has_default_value_label_position()) {
    default_value_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from.default_value_label_position_);
  } else {
    default_value_label_position_ = nullptr;
  }
  if (from._internal_has_line_value_label_position()) {
    line_value_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from.line_value_label_position_);
  } else {
    line_value_label_position_ = nullptr;
  }
  if (from._internal_has_mixed_area_value_label_position()) {
    mixed_area_value_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from.mixed_area_value_label_position_);
  } else {
    mixed_area_value_label_position_ = nullptr;
  }
  if (from._internal_has_mixed_column_value_label_position()) {
    mixed_column_value_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from.mixed_column_value_label_position_);
  } else {
    mixed_column_value_label_position_ = nullptr;
  }
  if (from._internal_has_mixed_line_value_label_position()) {
    mixed_line_value_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from.mixed_line_value_label_position_);
  } else {
    mixed_line_value_label_position_ = nullptr;
  }
  if (from._internal_has_scatter_value_label_position()) {
    scatter_value_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from.scatter_value_label_position_);
  } else {
    scatter_value_label_position_ = nullptr;
  }
  if (from._internal_has_stacked_area_value_label_position()) {
    stacked_area_value_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from.stacked_area_value_label_position_);
  } else {
    stacked_area_value_label_position_ = nullptr;
  }
  if (from._internal_has_stacked_bar_value_label_position()) {
    stacked_bar_value_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from.stacked_bar_value_label_position_);
  } else {
    stacked_bar_value_label_position_ = nullptr;
  }
  if (from._internal_has_default_value_label_spacing()) {
    default_value_label_spacing_ = new ::TSSSOS::SpecIntegerArchive(*from.default_value_label_spacing_);
  } else {
    default_value_label_spacing_ = nullptr;
  }
  ::memcpy(&default_callout_line_end_line_end_undefined_, &from.default_callout_line_end_line_end_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&default_value_label_spacing_undefined_) -
    reinterpret_cast<char*>(&default_callout_line_end_line_end_undefined_)) + sizeof(default_value_label_spacing_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.ChartSeriesStylePropertyChangeSetArchive)
}

void ChartSeriesStylePropertyChangeSetArchive::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&default_callout_line_end_line_end_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&default_value_label_spacing_undefined_) -
    reinterpret_cast<char*>(&default_callout_line_end_line_end_)) + sizeof(default_value_label_spacing_undefined_));
}

ChartSeriesStylePropertyChangeSetArchive::~ChartSeriesStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.ChartSeriesStylePropertyChangeSetArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChartSeriesStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete default_callout_line_end_line_end_;
  if (this != internal_default_instance()) delete default_callout_line_start_line_end_;
  if (this != internal_default_instance()) delete default_callout_line_stroke_style_;
  if (this != internal_default_instance()) delete default_error_bar_line_end_;
  if (this != internal_default_instance()) delete default_error_bar_line_end_scatter_x_;
  if (this != internal_default_instance()) delete default_error_bar_shadow_;
  if (this != internal_default_instance()) delete default_error_bar_spacing_;
  if (this != internal_default_instance()) delete default_error_bar_spacing_scatter_x_;
  if (this != internal_default_instance()) delete default_error_bar_stroke_;
  if (this != internal_default_instance()) delete default_error_bar_stroke_scatter_x_;
  if (this != internal_default_instance()) delete area3d_fill_;
  if (this != internal_default_instance()) delete bar3d_fill_;
  if (this != internal_default_instance()) delete column3d_fill_;
  if (this != internal_default_instance()) delete line3d_fill_;
  if (this != internal_default_instance()) delete pie3d_fill_;
  if (this != internal_default_instance()) delete area_fill_;
  if (this != internal_default_instance()) delete bar_fill_;
  if (this != internal_default_instance()) delete column_fill_;
  if (this != internal_default_instance()) delete default_fill_;
  if (this != internal_default_instance()) delete mixed_area_fill_;
  if (this != internal_default_instance()) delete mixed_column_fill_;
  if (this != internal_default_instance()) delete pie_fill_;
  if (this != internal_default_instance()) delete area_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete bar_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete default_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete donut_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete line_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete mixed_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete pie_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete default_opacity_;
  if (this != internal_default_instance()) delete area_outside_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete bar_outside_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete default_outside_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete donut_outside_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete mixed_outside_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete pie_outside_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete area3d_shadow_;
  if (this != internal_default_instance()) delete bar3d_shadow_;
  if (this != internal_default_instance()) delete column3d_shadow_;
  if (this != internal_default_instance()) delete line3d_shadow_;
  if (this != internal_default_instance()) delete pie3d_shadow_;
  if (this != internal_default_instance()) delete area_shadow_;
  if (this != internal_default_instance()) delete bar_shadow_;
  if (this != internal_default_instance()) delete bubble_shadow_;
  if (this != internal_default_instance()) delete default_shadow_;
  if (this != internal_default_instance()) delete line_shadow_;
  if (this != internal_default_instance()) delete mixed_area_shadow_;
  if (this != internal_default_instance()) delete mixed_column_shadow_;
  if (this != internal_default_instance()) delete mixed_line_shadow_;
  if (this != internal_default_instance()) delete pie_shadow_;
  if (this != internal_default_instance()) delete scatter_shadow_;
  if (this != internal_default_instance()) delete area_stroke_;
  if (this != internal_default_instance()) delete bar_stroke_;
  if (this != internal_default_instance()) delete bubble_stroke_;
  if (this != internal_default_instance()) delete line_stroke_;
  if (this != internal_default_instance()) delete mixed_area_stroke_;
  if (this != internal_default_instance()) delete mixed_column_stroke_;
  if (this != internal_default_instance()) delete mixed_line_stroke_;
  if (this != internal_default_instance()) delete pie_stroke_;
  if (this != internal_default_instance()) delete scatter_stroke_;
  if (this != internal_default_instance()) delete area_symbol_fill_;
  if (this != internal_default_instance()) delete bubble_symbol_fill_;
  if (this != internal_default_instance()) delete line_symbol_fill_;
  if (this != internal_default_instance()) delete mixed_area_symbol_fill_;
  if (this != internal_default_instance()) delete mixed_line_symbol_fill_;
  if (this != internal_default_instance()) delete scatter_symbol_fill_;
  if (this != internal_default_instance()) delete area_symbol_fill_use_series_fill_;
  if (this != internal_default_instance()) delete line_symbol_fill_use_series_fill_;
  if (this != internal_default_instance()) delete mixed_area_symbol_fill_use_series_fill_;
  if (this != internal_default_instance()) delete mixed_line_symbol_fill_use_series_fill_;
  if (this != internal_default_instance()) delete area_symbol_fill_use_series_stroke_;
  if (this != internal_default_instance()) delete bubble_symbol_fill_use_series_stroke_;
  if (this != internal_default_instance()) delete line_symbol_fill_use_series_stroke_;
  if (this != internal_default_instance()) delete mixed_area_symbol_fill_use_series_stroke_;
  if (this != internal_default_instance()) delete mixed_line_symbol_fill_use_series_stroke_;
  if (this != internal_default_instance()) delete scatter_symbol_fill_use_series_stroke_;
  if (this != internal_default_instance()) delete area_symbol_size_;
  if (this != internal_default_instance()) delete line_symbol_size_;
  if (this != internal_default_instance()) delete mixed_area_symbol_size_;
  if (this != internal_default_instance()) delete mixed_line_symbol_size_;
  if (this != internal_default_instance()) delete scatter_symbol_size_;
  if (this != internal_default_instance()) delete area_symbol_stroke_;
  if (this != internal_default_instance()) delete bubble_symbol_stroke_;
  if (this != internal_default_instance()) delete line_symbol_stroke_;
  if (this != internal_default_instance()) delete mixed_area_symbol_stroke_;
  if (this != internal_default_instance()) delete mixed_line_symbol_stroke_;
  if (this != internal_default_instance()) delete scatter_symbol_stroke_;
  if (this != internal_default_instance()) delete default_trend_line_shadow_;
  if (this != internal_default_instance()) delete default_trend_line_stroke_;
  if (this != internal_default_instance()) delete default_trendline_equation_opacity_;
  if (this != internal_default_instance()) delete default_trendline_equation_paragraph_style_index_;
  if (this != internal_default_instance()) delete default_trendline_r_squared_opacity_;
  if (this != internal_default_instance()) delete default_trendline_r_squared_paragraph_style_index_;
  if (this != internal_default_instance()) delete area_value_label_position_;
  if (this != internal_default_instance()) delete bar_value_label_position_;
  if (this != internal_default_instance()) delete bubble_value_label_position_;
  if (this != internal_default_instance()) delete default_value_label_position_;
  if (this != internal_default_instance()) delete line_value_label_position_;
  if (this != internal_default_instance()) delete mixed_area_value_label_position_;
  if (this != internal_default_instance()) delete mixed_column_value_label_position_;
  if (this != internal_default_instance()) delete mixed_line_value_label_position_;
  if (this != internal_default_instance()) delete scatter_value_label_position_;
  if (this != internal_default_instance()) delete stacked_area_value_label_position_;
  if (this != internal_default_instance()) delete stacked_bar_value_label_position_;
  if (this != internal_default_instance()) delete default_value_label_spacing_;
}

void ChartSeriesStylePropertyChangeSetArchive::ArenaDtor(void* object) {
  ChartSeriesStylePropertyChangeSetArchive* _this = reinterpret_cast< ChartSeriesStylePropertyChangeSetArchive* >(object);
  (void)_this;
}
void ChartSeriesStylePropertyChangeSetArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChartSeriesStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ChartSeriesStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.ChartSeriesStylePropertyChangeSetArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(default_callout_line_end_line_end_ != nullptr);
      default_callout_line_end_line_end_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(default_callout_line_start_line_end_ != nullptr);
      default_callout_line_start_line_end_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(default_callout_line_stroke_style_ != nullptr);
      default_callout_line_stroke_style_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(default_error_bar_line_end_ != nullptr);
      default_error_bar_line_end_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(default_error_bar_line_end_scatter_x_ != nullptr);
      default_error_bar_line_end_scatter_x_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(default_error_bar_shadow_ != nullptr);
      default_error_bar_shadow_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(default_error_bar_spacing_ != nullptr);
      default_error_bar_spacing_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(default_error_bar_spacing_scatter_x_ != nullptr);
      default_error_bar_spacing_scatter_x_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(default_error_bar_stroke_ != nullptr);
      default_error_bar_stroke_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(default_error_bar_stroke_scatter_x_ != nullptr);
      default_error_bar_stroke_scatter_x_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(area3d_fill_ != nullptr);
      area3d_fill_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(bar3d_fill_ != nullptr);
      bar3d_fill_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(column3d_fill_ != nullptr);
      column3d_fill_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(line3d_fill_ != nullptr);
      line3d_fill_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(pie3d_fill_ != nullptr);
      pie3d_fill_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(area_fill_ != nullptr);
      area_fill_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(bar_fill_ != nullptr);
      bar_fill_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(column_fill_ != nullptr);
      column_fill_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(default_fill_ != nullptr);
      default_fill_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(mixed_area_fill_ != nullptr);
      mixed_area_fill_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(mixed_column_fill_ != nullptr);
      mixed_column_fill_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(pie_fill_ != nullptr);
      pie_fill_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(area_label_paragraph_style_index_ != nullptr);
      area_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(bar_label_paragraph_style_index_ != nullptr);
      bar_label_paragraph_style_index_->Clear();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(default_label_paragraph_style_index_ != nullptr);
      default_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(donut_label_paragraph_style_index_ != nullptr);
      donut_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(line_label_paragraph_style_index_ != nullptr);
      line_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(mixed_label_paragraph_style_index_ != nullptr);
      mixed_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(pie_label_paragraph_style_index_ != nullptr);
      pie_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(default_opacity_ != nullptr);
      default_opacity_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      GOOGLE_DCHECK(area_outside_label_paragraph_style_index_ != nullptr);
      area_outside_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x80000000u) {
      GOOGLE_DCHECK(bar_outside_label_paragraph_style_index_ != nullptr);
      bar_outside_label_paragraph_style_index_->Clear();
    }
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(default_outside_label_paragraph_style_index_ != nullptr);
      default_outside_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(donut_outside_label_paragraph_style_index_ != nullptr);
      donut_outside_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(mixed_outside_label_paragraph_style_index_ != nullptr);
      mixed_outside_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(pie_outside_label_paragraph_style_index_ != nullptr);
      pie_outside_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(area3d_shadow_ != nullptr);
      area3d_shadow_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(bar3d_shadow_ != nullptr);
      bar3d_shadow_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(column3d_shadow_ != nullptr);
      column3d_shadow_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(line3d_shadow_ != nullptr);
      line3d_shadow_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(pie3d_shadow_ != nullptr);
      pie3d_shadow_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(area_shadow_ != nullptr);
      area_shadow_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(bar_shadow_ != nullptr);
      bar_shadow_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(bubble_shadow_ != nullptr);
      bubble_shadow_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(default_shadow_ != nullptr);
      default_shadow_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(line_shadow_ != nullptr);
      line_shadow_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(mixed_area_shadow_ != nullptr);
      mixed_area_shadow_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(mixed_column_shadow_ != nullptr);
      mixed_column_shadow_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(mixed_line_shadow_ != nullptr);
      mixed_line_shadow_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(pie_shadow_ != nullptr);
      pie_shadow_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(scatter_shadow_ != nullptr);
      scatter_shadow_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(area_stroke_ != nullptr);
      area_stroke_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(bar_stroke_ != nullptr);
      bar_stroke_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(bubble_stroke_ != nullptr);
      bubble_stroke_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(line_stroke_ != nullptr);
      line_stroke_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(mixed_area_stroke_ != nullptr);
      mixed_area_stroke_->Clear();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(mixed_column_stroke_ != nullptr);
      mixed_column_stroke_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(mixed_line_stroke_ != nullptr);
      mixed_line_stroke_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(pie_stroke_ != nullptr);
      pie_stroke_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(scatter_stroke_ != nullptr);
      scatter_stroke_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(area_symbol_fill_ != nullptr);
      area_symbol_fill_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(bubble_symbol_fill_ != nullptr);
      bubble_symbol_fill_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      GOOGLE_DCHECK(line_symbol_fill_ != nullptr);
      line_symbol_fill_->Clear();
    }
    if (cached_has_bits & 0x80000000u) {
      GOOGLE_DCHECK(mixed_area_symbol_fill_ != nullptr);
      mixed_area_symbol_fill_->Clear();
    }
  }
  cached_has_bits = _has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(mixed_line_symbol_fill_ != nullptr);
      mixed_line_symbol_fill_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(scatter_symbol_fill_ != nullptr);
      scatter_symbol_fill_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(area_symbol_fill_use_series_fill_ != nullptr);
      area_symbol_fill_use_series_fill_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(line_symbol_fill_use_series_fill_ != nullptr);
      line_symbol_fill_use_series_fill_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(mixed_area_symbol_fill_use_series_fill_ != nullptr);
      mixed_area_symbol_fill_use_series_fill_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(mixed_line_symbol_fill_use_series_fill_ != nullptr);
      mixed_line_symbol_fill_use_series_fill_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(area_symbol_fill_use_series_stroke_ != nullptr);
      area_symbol_fill_use_series_stroke_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(bubble_symbol_fill_use_series_stroke_ != nullptr);
      bubble_symbol_fill_use_series_stroke_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(line_symbol_fill_use_series_stroke_ != nullptr);
      line_symbol_fill_use_series_stroke_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(mixed_area_symbol_fill_use_series_stroke_ != nullptr);
      mixed_area_symbol_fill_use_series_stroke_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(mixed_line_symbol_fill_use_series_stroke_ != nullptr);
      mixed_line_symbol_fill_use_series_stroke_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(scatter_symbol_fill_use_series_stroke_ != nullptr);
      scatter_symbol_fill_use_series_stroke_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(area_symbol_size_ != nullptr);
      area_symbol_size_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(line_symbol_size_ != nullptr);
      line_symbol_size_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(mixed_area_symbol_size_ != nullptr);
      mixed_area_symbol_size_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(mixed_line_symbol_size_ != nullptr);
      mixed_line_symbol_size_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(scatter_symbol_size_ != nullptr);
      scatter_symbol_size_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(area_symbol_stroke_ != nullptr);
      area_symbol_stroke_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(bubble_symbol_stroke_ != nullptr);
      bubble_symbol_stroke_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(line_symbol_stroke_ != nullptr);
      line_symbol_stroke_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(mixed_area_symbol_stroke_ != nullptr);
      mixed_area_symbol_stroke_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(mixed_line_symbol_stroke_ != nullptr);
      mixed_line_symbol_stroke_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(scatter_symbol_stroke_ != nullptr);
      scatter_symbol_stroke_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(default_trend_line_shadow_ != nullptr);
      default_trend_line_shadow_->Clear();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(default_trend_line_stroke_ != nullptr);
      default_trend_line_stroke_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(default_trendline_equation_opacity_ != nullptr);
      default_trendline_equation_opacity_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(default_trendline_equation_paragraph_style_index_ != nullptr);
      default_trendline_equation_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(default_trendline_r_squared_opacity_ != nullptr);
      default_trendline_r_squared_opacity_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(default_trendline_r_squared_paragraph_style_index_ != nullptr);
      default_trendline_r_squared_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(area_value_label_position_ != nullptr);
      area_value_label_position_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      GOOGLE_DCHECK(bar_value_label_position_ != nullptr);
      bar_value_label_position_->Clear();
    }
    if (cached_has_bits & 0x80000000u) {
      GOOGLE_DCHECK(bubble_value_label_position_ != nullptr);
      bubble_value_label_position_->Clear();
    }
  }
  cached_has_bits = _has_bits_[3];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(default_value_label_position_ != nullptr);
      default_value_label_position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(line_value_label_position_ != nullptr);
      line_value_label_position_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(mixed_area_value_label_position_ != nullptr);
      mixed_area_value_label_position_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(mixed_column_value_label_position_ != nullptr);
      mixed_column_value_label_position_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(mixed_line_value_label_position_ != nullptr);
      mixed_line_value_label_position_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(scatter_value_label_position_ != nullptr);
      scatter_value_label_position_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(stacked_area_value_label_position_ != nullptr);
      stacked_area_value_label_position_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(stacked_bar_value_label_position_ != nullptr);
      stacked_bar_value_label_position_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    GOOGLE_DCHECK(default_value_label_spacing_ != nullptr);
    default_value_label_spacing_->Clear();
  }
  if (cached_has_bits & 0x0000fe00u) {
    ::memset(&default_callout_line_end_line_end_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_error_bar_spacing_undefined_) -
        reinterpret_cast<char*>(&default_callout_line_end_line_end_undefined_)) + sizeof(default_error_bar_spacing_undefined_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&default_error_bar_spacing_scatter_x_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pie3d_fill_undefined_) -
        reinterpret_cast<char*>(&default_error_bar_spacing_scatter_x_undefined_)) + sizeof(pie3d_fill_undefined_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&area_fill_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&area_label_paragraph_style_index_undefined_) -
        reinterpret_cast<char*>(&area_fill_undefined_)) + sizeof(area_label_paragraph_style_index_undefined_));
  }
  cached_has_bits = _has_bits_[4];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&bar_label_paragraph_style_index_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&area_outside_label_paragraph_style_index_undefined_) -
        reinterpret_cast<char*>(&bar_label_paragraph_style_index_undefined_)) + sizeof(area_outside_label_paragraph_style_index_undefined_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&bar_outside_label_paragraph_style_index_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&column3d_shadow_undefined_) -
        reinterpret_cast<char*>(&bar_outside_label_paragraph_style_index_undefined_)) + sizeof(column3d_shadow_undefined_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&line3d_shadow_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mixed_area_shadow_undefined_) -
        reinterpret_cast<char*>(&line3d_shadow_undefined_)) + sizeof(mixed_area_shadow_undefined_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&mixed_column_shadow_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&line_stroke_undefined_) -
        reinterpret_cast<char*>(&mixed_column_shadow_undefined_)) + sizeof(line_stroke_undefined_));
  }
  cached_has_bits = _has_bits_[5];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&mixed_area_stroke_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&line_symbol_fill_undefined_) -
        reinterpret_cast<char*>(&mixed_area_stroke_undefined_)) + sizeof(line_symbol_fill_undefined_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&mixed_area_symbol_fill_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&area_symbol_fill_use_series_stroke_undefined_) -
        reinterpret_cast<char*>(&mixed_area_symbol_fill_undefined_)) + sizeof(area_symbol_fill_use_series_stroke_undefined_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&bubble_symbol_fill_use_series_stroke_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mixed_area_symbol_size_undefined_) -
        reinterpret_cast<char*>(&bubble_symbol_fill_use_series_stroke_undefined_)) + sizeof(mixed_area_symbol_size_undefined_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&mixed_line_symbol_size_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&scatter_symbol_stroke_undefined_) -
        reinterpret_cast<char*>(&mixed_line_symbol_size_undefined_)) + sizeof(scatter_symbol_stroke_undefined_));
  }
  cached_has_bits = _has_bits_[6];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&default_trend_line_shadow_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bar_value_label_position_undefined_) -
        reinterpret_cast<char*>(&default_trend_line_shadow_undefined_)) + sizeof(bar_value_label_position_undefined_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&bubble_value_label_position_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stacked_area_value_label_position_undefined_) -
        reinterpret_cast<char*>(&bubble_value_label_position_undefined_)) + sizeof(stacked_area_value_label_position_undefined_));
  }
  if (cached_has_bits & 0x00030000u) {
    ::memset(&stacked_bar_value_label_position_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_value_label_spacing_undefined_) -
        reinterpret_cast<char*>(&stacked_bar_value_label_position_undefined_)) + sizeof(default_value_label_spacing_undefined_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChartSeriesStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSDSOS.SpecLineEndArchive default_callout_line_end_line_end = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_callout_line_end_line_end(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_callout_line_end_line_end_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_default_callout_line_end_line_end_undefined(&_has_bits_);
          default_callout_line_end_line_end_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecLineEndArchive default_callout_line_start_line_end = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_callout_line_start_line_end(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_callout_line_start_line_end_undefined = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_default_callout_line_start_line_end_undefined(&_has_bits_);
          default_callout_line_start_line_end_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive default_callout_line_stroke_style = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_callout_line_stroke_style(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_callout_line_stroke_style_undefined = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_default_callout_line_stroke_style_undefined(&_has_bits_);
          default_callout_line_stroke_style_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecLineEndArchive default_error_bar_line_end = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_line_end(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_error_bar_line_end_undefined = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_default_error_bar_line_end_undefined(&_has_bits_);
          default_error_bar_line_end_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecLineEndArchive default_error_bar_line_end_scatter_x = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_line_end_scatter_x(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_error_bar_line_end_scatter_x_undefined = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_default_error_bar_line_end_scatter_x_undefined(&_has_bits_);
          default_error_bar_line_end_scatter_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive default_error_bar_shadow = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_error_bar_shadow_undefined = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_default_error_bar_shadow_undefined(&_has_bits_);
          default_error_bar_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_error_bar_spacing = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_spacing(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_error_bar_spacing_undefined = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_default_error_bar_spacing_undefined(&_has_bits_);
          default_error_bar_spacing_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_error_bar_spacing_scatter_x = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_spacing_scatter_x(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_error_bar_spacing_scatter_x_undefined = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_default_error_bar_spacing_scatter_x_undefined(&_has_bits_);
          default_error_bar_spacing_scatter_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive default_error_bar_stroke = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_error_bar_stroke_undefined = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_default_error_bar_stroke_undefined(&_has_bits_);
          default_error_bar_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive default_error_bar_stroke_scatter_x = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_stroke_scatter_x(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_error_bar_stroke_scatter_x_undefined = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_default_error_bar_stroke_scatter_x_undefined(&_has_bits_);
          default_error_bar_stroke_scatter_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive area3d_fill = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_area3d_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool area3d_fill_undefined = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_area3d_fill_undefined(&_has_bits_);
          area3d_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive bar3d_fill = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar3d_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bar3d_fill_undefined = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_bar3d_fill_undefined(&_has_bits_);
          bar3d_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive column3d_fill = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_column3d_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool column3d_fill_undefined = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_column3d_fill_undefined(&_has_bits_);
          column3d_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive line3d_fill = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_line3d_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool line3d_fill_undefined = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_line3d_fill_undefined(&_has_bits_);
          line3d_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive pie3d_fill = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie3d_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pie3d_fill_undefined = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_pie3d_fill_undefined(&_has_bits_);
          pie3d_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive area_fill = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool area_fill_undefined = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          _Internal::set_has_area_fill_undefined(&_has_bits_);
          area_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive bar_fill = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bar_fill_undefined = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_bar_fill_undefined(&_has_bits_);
          bar_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive column_fill = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_column_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool column_fill_undefined = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_column_fill_undefined(&_has_bits_);
          column_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive default_fill = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_fill_undefined = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_default_fill_undefined(&_has_bits_);
          default_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive mixed_area_fill = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_area_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_area_fill_undefined = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_mixed_area_fill_undefined(&_has_bits_);
          mixed_area_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive mixed_column_fill = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_column_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_column_fill_undefined = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_mixed_column_fill_undefined(&_has_bits_);
          mixed_column_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive pie_fill = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pie_fill_undefined = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_pie_fill_undefined(&_has_bits_);
          pie_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive area_label_paragraph_style_index = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool area_label_paragraph_style_index_undefined = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_area_label_paragraph_style_index_undefined(&_has_bits_);
          area_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive bar_label_paragraph_style_index = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bar_label_paragraph_style_index_undefined = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_bar_label_paragraph_style_index_undefined(&_has_bits_);
          bar_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_label_paragraph_style_index_undefined = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_default_label_paragraph_style_index_undefined(&_has_bits_);
          default_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive donut_label_paragraph_style_index = 51;
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_donut_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool donut_label_paragraph_style_index_undefined = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_donut_label_paragraph_style_index_undefined(&_has_bits_);
          donut_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive line_label_paragraph_style_index = 53;
      case 53:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool line_label_paragraph_style_index_undefined = 54;
      case 54:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_line_label_paragraph_style_index_undefined(&_has_bits_);
          line_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive mixed_label_paragraph_style_index = 55;
      case 55:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_label_paragraph_style_index_undefined = 56;
      case 56:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_mixed_label_paragraph_style_index_undefined(&_has_bits_);
          mixed_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive pie_label_paragraph_style_index = 57;
      case 57:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pie_label_paragraph_style_index_undefined = 58;
      case 58:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_pie_label_paragraph_style_index_undefined(&_has_bits_);
          pie_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_opacity = 59;
      case 59:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_opacity(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_opacity_undefined = 60;
      case 60:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_default_opacity_undefined(&_has_bits_);
          default_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive area_outside_label_paragraph_style_index = 61;
      case 61:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_outside_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool area_outside_label_paragraph_style_index_undefined = 62;
      case 62:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_area_outside_label_paragraph_style_index_undefined(&_has_bits_);
          area_outside_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive bar_outside_label_paragraph_style_index = 63;
      case 63:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar_outside_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bar_outside_label_paragraph_style_index_undefined = 64;
      case 64:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          _Internal::set_has_bar_outside_label_paragraph_style_index_undefined(&_has_bits_);
          bar_outside_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_outside_label_paragraph_style_index = 65;
      case 65:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_outside_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_outside_label_paragraph_style_index_undefined = 66;
      case 66:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_default_outside_label_paragraph_style_index_undefined(&_has_bits_);
          default_outside_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive donut_outside_label_paragraph_style_index = 67;
      case 67:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_donut_outside_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool donut_outside_label_paragraph_style_index_undefined = 68;
      case 68:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_donut_outside_label_paragraph_style_index_undefined(&_has_bits_);
          donut_outside_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive mixed_outside_label_paragraph_style_index = 69;
      case 69:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_outside_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_outside_label_paragraph_style_index_undefined = 70;
      case 70:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_mixed_outside_label_paragraph_style_index_undefined(&_has_bits_);
          mixed_outside_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive pie_outside_label_paragraph_style_index = 71;
      case 71:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_outside_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pie_outside_label_paragraph_style_index_undefined = 72;
      case 72:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_pie_outside_label_paragraph_style_index_undefined(&_has_bits_);
          pie_outside_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive area3d_shadow = 73;
      case 73:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_area3d_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool area3d_shadow_undefined = 74;
      case 74:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_area3d_shadow_undefined(&_has_bits_);
          area3d_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive bar3d_shadow = 75;
      case 75:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar3d_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bar3d_shadow_undefined = 76;
      case 76:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_bar3d_shadow_undefined(&_has_bits_);
          bar3d_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive column3d_shadow = 77;
      case 77:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_column3d_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool column3d_shadow_undefined = 78;
      case 78:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_column3d_shadow_undefined(&_has_bits_);
          column3d_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive line3d_shadow = 79;
      case 79:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_line3d_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool line3d_shadow_undefined = 80;
      case 80:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_line3d_shadow_undefined(&_has_bits_);
          line3d_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive pie3d_shadow = 81;
      case 81:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie3d_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pie3d_shadow_undefined = 82;
      case 82:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_pie3d_shadow_undefined(&_has_bits_);
          pie3d_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive area_shadow = 83;
      case 83:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool area_shadow_undefined = 84;
      case 84:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_area_shadow_undefined(&_has_bits_);
          area_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive bar_shadow = 85;
      case 85:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bar_shadow_undefined = 86;
      case 86:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_bar_shadow_undefined(&_has_bits_);
          bar_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive bubble_shadow = 87;
      case 87:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bubble_shadow_undefined = 88;
      case 88:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_bubble_shadow_undefined(&_has_bits_);
          bubble_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive default_shadow = 89;
      case 89:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_shadow_undefined = 90;
      case 90:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_default_shadow_undefined(&_has_bits_);
          default_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive line_shadow = 91;
      case 91:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool line_shadow_undefined = 92;
      case 92:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_line_shadow_undefined(&_has_bits_);
          line_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive mixed_area_shadow = 93;
      case 93:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_area_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_area_shadow_undefined = 94;
      case 94:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_mixed_area_shadow_undefined(&_has_bits_);
          mixed_area_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive mixed_column_shadow = 95;
      case 95:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_column_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_column_shadow_undefined = 96;
      case 96:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          _Internal::set_has_mixed_column_shadow_undefined(&_has_bits_);
          mixed_column_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive mixed_line_shadow = 97;
      case 97:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_line_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_line_shadow_undefined = 98;
      case 98:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_mixed_line_shadow_undefined(&_has_bits_);
          mixed_line_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive pie_shadow = 99;
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pie_shadow_undefined = 100;
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_pie_shadow_undefined(&_has_bits_);
          pie_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive scatter_shadow = 101;
      case 101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool scatter_shadow_undefined = 102;
      case 102:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_scatter_shadow_undefined(&_has_bits_);
          scatter_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive area_stroke = 103;
      case 103:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool area_stroke_undefined = 104;
      case 104:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_area_stroke_undefined(&_has_bits_);
          area_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive bar_stroke = 105;
      case 105:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bar_stroke_undefined = 106;
      case 106:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_bar_stroke_undefined(&_has_bits_);
          bar_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive bubble_stroke = 107;
      case 107:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bubble_stroke_undefined = 108;
      case 108:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_bubble_stroke_undefined(&_has_bits_);
          bubble_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive line_stroke = 109;
      case 109:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool line_stroke_undefined = 110;
      case 110:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_line_stroke_undefined(&_has_bits_);
          line_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive mixed_area_stroke = 111;
      case 111:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_area_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_area_stroke_undefined = 112;
      case 112:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_mixed_area_stroke_undefined(&_has_bits_);
          mixed_area_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive mixed_column_stroke = 113;
      case 113:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_column_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_column_stroke_undefined = 114;
      case 114:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_mixed_column_stroke_undefined(&_has_bits_);
          mixed_column_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive mixed_line_stroke = 115;
      case 115:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_line_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_line_stroke_undefined = 116;
      case 116:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_mixed_line_stroke_undefined(&_has_bits_);
          mixed_line_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive pie_stroke = 117;
      case 117:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pie_stroke_undefined = 118;
      case 118:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_pie_stroke_undefined(&_has_bits_);
          pie_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive scatter_stroke = 119;
      case 119:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool scatter_stroke_undefined = 120;
      case 120:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_scatter_stroke_undefined(&_has_bits_);
          scatter_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive area_symbol_fill = 121;
      case 121:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_symbol_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool area_symbol_fill_undefined = 122;
      case 122:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_area_symbol_fill_undefined(&_has_bits_);
          area_symbol_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive bubble_symbol_fill = 123;
      case 123:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_symbol_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bubble_symbol_fill_undefined = 124;
      case 124:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_bubble_symbol_fill_undefined(&_has_bits_);
          bubble_symbol_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive line_symbol_fill = 125;
      case 125:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_symbol_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool line_symbol_fill_undefined = 126;
      case 126:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_line_symbol_fill_undefined(&_has_bits_);
          line_symbol_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive mixed_area_symbol_fill = 127;
      case 127:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_area_symbol_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_area_symbol_fill_undefined = 128;
      case 128:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          _Internal::set_has_mixed_area_symbol_fill_undefined(&_has_bits_);
          mixed_area_symbol_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive mixed_line_symbol_fill = 129;
      case 129:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_line_symbol_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_line_symbol_fill_undefined = 130;
      case 130:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_mixed_line_symbol_fill_undefined(&_has_bits_);
          mixed_line_symbol_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive scatter_symbol_fill = 131;
      case 131:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_symbol_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool scatter_symbol_fill_undefined = 132;
      case 132:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_scatter_symbol_fill_undefined(&_has_bits_);
          scatter_symbol_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive area_symbol_fill_use_series_fill = 133;
      case 133:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_symbol_fill_use_series_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool area_symbol_fill_use_series_fill_undefined = 134;
      case 134:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_area_symbol_fill_use_series_fill_undefined(&_has_bits_);
          area_symbol_fill_use_series_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive line_symbol_fill_use_series_fill = 135;
      case 135:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_symbol_fill_use_series_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool line_symbol_fill_use_series_fill_undefined = 136;
      case 136:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_line_symbol_fill_use_series_fill_undefined(&_has_bits_);
          line_symbol_fill_use_series_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive mixed_area_symbol_fill_use_series_fill = 137;
      case 137:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_area_symbol_fill_use_series_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_area_symbol_fill_use_series_fill_undefined = 138;
      case 138:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_mixed_area_symbol_fill_use_series_fill_undefined(&_has_bits_);
          mixed_area_symbol_fill_use_series_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive mixed_line_symbol_fill_use_series_fill = 139;
      case 139:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_line_symbol_fill_use_series_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_line_symbol_fill_use_series_fill_undefined = 140;
      case 140:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_mixed_line_symbol_fill_use_series_fill_undefined(&_has_bits_);
          mixed_line_symbol_fill_use_series_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive area_symbol_fill_use_series_stroke = 141;
      case 141:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_symbol_fill_use_series_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool area_symbol_fill_use_series_stroke_undefined = 142;
      case 142:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_area_symbol_fill_use_series_stroke_undefined(&_has_bits_);
          area_symbol_fill_use_series_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive bubble_symbol_fill_use_series_stroke = 143;
      case 143:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_symbol_fill_use_series_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bubble_symbol_fill_use_series_stroke_undefined = 144;
      case 144:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_bubble_symbol_fill_use_series_stroke_undefined(&_has_bits_);
          bubble_symbol_fill_use_series_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive line_symbol_fill_use_series_stroke = 145;
      case 145:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_symbol_fill_use_series_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool line_symbol_fill_use_series_stroke_undefined = 146;
      case 146:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_line_symbol_fill_use_series_stroke_undefined(&_has_bits_);
          line_symbol_fill_use_series_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive mixed_area_symbol_fill_use_series_stroke = 147;
      case 147:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_area_symbol_fill_use_series_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_area_symbol_fill_use_series_stroke_undefined = 148;
      case 148:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_mixed_area_symbol_fill_use_series_stroke_undefined(&_has_bits_);
          mixed_area_symbol_fill_use_series_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive mixed_line_symbol_fill_use_series_stroke = 149;
      case 149:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_line_symbol_fill_use_series_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_line_symbol_fill_use_series_stroke_undefined = 150;
      case 150:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_mixed_line_symbol_fill_use_series_stroke_undefined(&_has_bits_);
          mixed_line_symbol_fill_use_series_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive scatter_symbol_fill_use_series_stroke = 151;
      case 151:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_symbol_fill_use_series_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool scatter_symbol_fill_use_series_stroke_undefined = 152;
      case 152:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_scatter_symbol_fill_use_series_stroke_undefined(&_has_bits_);
          scatter_symbol_fill_use_series_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive area_symbol_size = 153;
      case 153:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_symbol_size(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool area_symbol_size_undefined = 154;
      case 154:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_area_symbol_size_undefined(&_has_bits_);
          area_symbol_size_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive line_symbol_size = 155;
      case 155:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_symbol_size(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool line_symbol_size_undefined = 156;
      case 156:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_line_symbol_size_undefined(&_has_bits_);
          line_symbol_size_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive mixed_area_symbol_size = 157;
      case 157:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_area_symbol_size(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_area_symbol_size_undefined = 158;
      case 158:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_mixed_area_symbol_size_undefined(&_has_bits_);
          mixed_area_symbol_size_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive mixed_line_symbol_size = 159;
      case 159:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_line_symbol_size(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_line_symbol_size_undefined = 160;
      case 160:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          _Internal::set_has_mixed_line_symbol_size_undefined(&_has_bits_);
          mixed_line_symbol_size_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive scatter_symbol_size = 161;
      case 161:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_symbol_size(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool scatter_symbol_size_undefined = 162;
      case 162:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_scatter_symbol_size_undefined(&_has_bits_);
          scatter_symbol_size_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive area_symbol_stroke = 163;
      case 163:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_symbol_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool area_symbol_stroke_undefined = 164;
      case 164:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_area_symbol_stroke_undefined(&_has_bits_);
          area_symbol_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive bubble_symbol_stroke = 165;
      case 165:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_symbol_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bubble_symbol_stroke_undefined = 166;
      case 166:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_bubble_symbol_stroke_undefined(&_has_bits_);
          bubble_symbol_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive line_symbol_stroke = 167;
      case 167:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_symbol_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool line_symbol_stroke_undefined = 168;
      case 168:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_line_symbol_stroke_undefined(&_has_bits_);
          line_symbol_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive mixed_area_symbol_stroke = 169;
      case 169:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_area_symbol_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_area_symbol_stroke_undefined = 170;
      case 170:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_mixed_area_symbol_stroke_undefined(&_has_bits_);
          mixed_area_symbol_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive mixed_line_symbol_stroke = 171;
      case 171:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_line_symbol_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_line_symbol_stroke_undefined = 172;
      case 172:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_mixed_line_symbol_stroke_undefined(&_has_bits_);
          mixed_line_symbol_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive scatter_symbol_stroke = 173;
      case 173:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_symbol_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool scatter_symbol_stroke_undefined = 174;
      case 174:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_scatter_symbol_stroke_undefined(&_has_bits_);
          scatter_symbol_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive default_trend_line_shadow = 175;
      case 175:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_trend_line_shadow_undefined = 176;
      case 176:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_default_trend_line_shadow_undefined(&_has_bits_);
          default_trend_line_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive default_trend_line_stroke = 177;
      case 177:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_trend_line_stroke_undefined = 178;
      case 178:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_default_trend_line_stroke_undefined(&_has_bits_);
          default_trend_line_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_trendline_equation_opacity = 179;
      case 179:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trendline_equation_opacity(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_trendline_equation_opacity_undefined = 180;
      case 180:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_default_trendline_equation_opacity_undefined(&_has_bits_);
          default_trendline_equation_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_trendline_equation_paragraph_style_index = 181;
      case 181:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trendline_equation_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_trendline_equation_paragraph_style_index_undefined = 182;
      case 182:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_default_trendline_equation_paragraph_style_index_undefined(&_has_bits_);
          default_trendline_equation_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_trendline_r_squared_opacity = 183;
      case 183:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trendline_r_squared_opacity(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_trendline_r_squared_opacity_undefined = 184;
      case 184:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_default_trendline_r_squared_opacity_undefined(&_has_bits_);
          default_trendline_r_squared_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_trendline_r_squared_paragraph_style_index = 185;
      case 185:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trendline_r_squared_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_trendline_r_squared_paragraph_style_index_undefined = 186;
      case 186:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_default_trendline_r_squared_paragraph_style_index_undefined(&_has_bits_);
          default_trendline_r_squared_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive area_value_label_position = 187;
      case 187:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_value_label_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool area_value_label_position_undefined = 188;
      case 188:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_area_value_label_position_undefined(&_has_bits_);
          area_value_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive bar_value_label_position = 189;
      case 189:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar_value_label_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bar_value_label_position_undefined = 190;
      case 190:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_bar_value_label_position_undefined(&_has_bits_);
          bar_value_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive bubble_value_label_position = 191;
      case 191:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_value_label_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bubble_value_label_position_undefined = 192;
      case 192:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          _Internal::set_has_bubble_value_label_position_undefined(&_has_bits_);
          bubble_value_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_value_label_position = 193;
      case 193:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_value_label_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_value_label_position_undefined = 194;
      case 194:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_default_value_label_position_undefined(&_has_bits_);
          default_value_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive line_value_label_position = 195;
      case 195:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_value_label_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool line_value_label_position_undefined = 196;
      case 196:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_line_value_label_position_undefined(&_has_bits_);
          line_value_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive mixed_area_value_label_position = 197;
      case 197:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_area_value_label_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_area_value_label_position_undefined = 198;
      case 198:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_mixed_area_value_label_position_undefined(&_has_bits_);
          mixed_area_value_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive mixed_column_value_label_position = 199;
      case 199:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_column_value_label_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_column_value_label_position_undefined = 200;
      case 200:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_mixed_column_value_label_position_undefined(&_has_bits_);
          mixed_column_value_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive mixed_line_value_label_position = 201;
      case 201:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_line_value_label_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool mixed_line_value_label_position_undefined = 202;
      case 202:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_mixed_line_value_label_position_undefined(&_has_bits_);
          mixed_line_value_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive scatter_value_label_position = 203;
      case 203:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_value_label_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool scatter_value_label_position_undefined = 204;
      case 204:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_scatter_value_label_position_undefined(&_has_bits_);
          scatter_value_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive stacked_area_value_label_position = 205;
      case 205:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_stacked_area_value_label_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool stacked_area_value_label_position_undefined = 206;
      case 206:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_stacked_area_value_label_position_undefined(&_has_bits_);
          stacked_area_value_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive stacked_bar_value_label_position = 207;
      case 207:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_stacked_bar_value_label_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool stacked_bar_value_label_position_undefined = 208;
      case 208:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_stacked_bar_value_label_position_undefined(&_has_bits_);
          stacked_bar_value_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_value_label_spacing = 209;
      case 209:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_value_label_spacing(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_value_label_spacing_undefined = 210;
      case 210:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_default_value_label_spacing_undefined(&_has_bits_);
          default_value_label_spacing_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChartSeriesStylePropertyChangeSetArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.ChartSeriesStylePropertyChangeSetArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecLineEndArchive default_callout_line_end_line_end = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::default_callout_line_end_line_end(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_callout_line_end_line_end_undefined = 2;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_default_callout_line_end_line_end_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecLineEndArchive default_callout_line_start_line_end = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::default_callout_line_start_line_end(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_callout_line_start_line_end_undefined = 4;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_default_callout_line_start_line_end_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecStrokeArchive default_callout_line_stroke_style = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::default_callout_line_stroke_style(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_callout_line_stroke_style_undefined = 6;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_default_callout_line_stroke_style_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecLineEndArchive default_error_bar_line_end = 7;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::default_error_bar_line_end(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_error_bar_line_end_undefined = 8;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_default_error_bar_line_end_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecLineEndArchive default_error_bar_line_end_scatter_x = 9;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::default_error_bar_line_end_scatter_x(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_error_bar_line_end_scatter_x_undefined = 10;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_default_error_bar_line_end_scatter_x_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecShadowArchive default_error_bar_shadow = 11;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::default_error_bar_shadow(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_error_bar_shadow_undefined = 12;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->_internal_default_error_bar_shadow_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_error_bar_spacing = 13;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::default_error_bar_spacing(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_error_bar_spacing_undefined = 14;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(14, this->_internal_default_error_bar_spacing_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_error_bar_spacing_scatter_x = 15;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        15, _Internal::default_error_bar_spacing_scatter_x(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_error_bar_spacing_scatter_x_undefined = 16;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(16, this->_internal_default_error_bar_spacing_scatter_x_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecStrokeArchive default_error_bar_stroke = 17;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        17, _Internal::default_error_bar_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_error_bar_stroke_undefined = 18;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(18, this->_internal_default_error_bar_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecStrokeArchive default_error_bar_stroke_scatter_x = 19;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        19, _Internal::default_error_bar_stroke_scatter_x(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_error_bar_stroke_scatter_x_undefined = 20;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(20, this->_internal_default_error_bar_stroke_scatter_x_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecFillArchive area3d_fill = 21;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        21, _Internal::area3d_fill(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool area3d_fill_undefined = 22;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(22, this->_internal_area3d_fill_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecFillArchive bar3d_fill = 23;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        23, _Internal::bar3d_fill(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool bar3d_fill_undefined = 24;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(24, this->_internal_bar3d_fill_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecFillArchive column3d_fill = 25;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        25, _Internal::column3d_fill(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool column3d_fill_undefined = 26;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(26, this->_internal_column3d_fill_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecFillArchive line3d_fill = 27;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        27, _Internal::line3d_fill(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool line3d_fill_undefined = 28;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(28, this->_internal_line3d_fill_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecFillArchive pie3d_fill = 29;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        29, _Internal::pie3d_fill(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool pie3d_fill_undefined = 30;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(30, this->_internal_pie3d_fill_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecFillArchive area_fill = 31;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        31, _Internal::area_fill(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool area_fill_undefined = 32;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(32, this->_internal_area_fill_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecFillArchive bar_fill = 33;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        33, _Internal::bar_fill(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool bar_fill_undefined = 34;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(34, this->_internal_bar_fill_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecFillArchive column_fill = 35;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        35, _Internal::column_fill(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool column_fill_undefined = 36;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(36, this->_internal_column_fill_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecFillArchive default_fill = 37;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        37, _Internal::default_fill(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool default_fill_undefined = 38;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(38, this->_internal_default_fill_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecFillArchive mixed_area_fill = 39;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        39, _Internal::mixed_area_fill(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool mixed_area_fill_undefined = 40;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(40, this->_internal_mixed_area_fill_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecFillArchive mixed_column_fill = 41;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        41, _Internal::mixed_column_fill(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool mixed_column_fill_undefined = 42;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(42, this->_internal_mixed_column_fill_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecFillArchive pie_fill = 43;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        43, _Internal::pie_fill(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool pie_fill_undefined = 44;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(44, this->_internal_pie_fill_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive area_label_paragraph_style_index = 45;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        45, _Internal::area_label_paragraph_style_index(this), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional bool area_label_paragraph_style_index_undefined = 46;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(46, this->_internal_area_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive bar_label_paragraph_style_index = 47;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        47, _Internal::bar_label_paragraph_style_index(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool bar_label_paragraph_style_index_undefined = 48;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(48, this->_internal_bar_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 49;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        49, _Internal::default_label_paragraph_style_index(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool default_label_paragraph_style_index_undefined = 50;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(50, this->_internal_default_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive donut_label_paragraph_style_index = 51;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        51, _Internal::donut_label_paragraph_style_index(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool donut_label_paragraph_style_index_undefined = 52;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(52, this->_internal_donut_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive line_label_paragraph_style_index = 53;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        53, _Internal::line_label_paragraph_style_index(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool line_label_paragraph_style_index_undefined = 54;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(54, this->_internal_line_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive mixed_label_paragraph_style_index = 55;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        55, _Internal::mixed_label_paragraph_style_index(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool mixed_label_paragraph_style_index_undefined = 56;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(56, this->_internal_mixed_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive pie_label_paragraph_style_index = 57;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        57, _Internal::pie_label_paragraph_style_index(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool pie_label_paragraph_style_index_undefined = 58;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(58, this->_internal_pie_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_opacity = 59;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        59, _Internal::default_opacity(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool default_opacity_undefined = 60;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(60, this->_internal_default_opacity_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive area_outside_label_paragraph_style_index = 61;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        61, _Internal::area_outside_label_paragraph_style_index(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool area_outside_label_paragraph_style_index_undefined = 62;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(62, this->_internal_area_outside_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive bar_outside_label_paragraph_style_index = 63;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        63, _Internal::bar_outside_label_paragraph_style_index(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool bar_outside_label_paragraph_style_index_undefined = 64;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(64, this->_internal_bar_outside_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive default_outside_label_paragraph_style_index = 65;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        65, _Internal::default_outside_label_paragraph_style_index(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool default_outside_label_paragraph_style_index_undefined = 66;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(66, this->_internal_default_outside_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive donut_outside_label_paragraph_style_index = 67;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        67, _Internal::donut_outside_label_paragraph_style_index(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool donut_outside_label_paragraph_style_index_undefined = 68;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(68, this->_internal_donut_outside_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive mixed_outside_label_paragraph_style_index = 69;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        69, _Internal::mixed_outside_label_paragraph_style_index(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool mixed_outside_label_paragraph_style_index_undefined = 70;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(70, this->_internal_mixed_outside_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive pie_outside_label_paragraph_style_index = 71;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        71, _Internal::pie_outside_label_paragraph_style_index(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool pie_outside_label_paragraph_style_index_undefined = 72;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(72, this->_internal_pie_outside_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive area3d_shadow = 73;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        73, _Internal::area3d_shadow(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool area3d_shadow_undefined = 74;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(74, this->_internal_area3d_shadow_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive bar3d_shadow = 75;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        75, _Internal::bar3d_shadow(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool bar3d_shadow_undefined = 76;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(76, this->_internal_bar3d_shadow_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive column3d_shadow = 77;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        77, _Internal::column3d_shadow(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool column3d_shadow_undefined = 78;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(78, this->_internal_column3d_shadow_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive line3d_shadow = 79;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        79, _Internal::line3d_shadow(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool line3d_shadow_undefined = 80;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(80, this->_internal_line3d_shadow_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive pie3d_shadow = 81;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        81, _Internal::pie3d_shadow(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool pie3d_shadow_undefined = 82;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(82, this->_internal_pie3d_shadow_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive area_shadow = 83;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        83, _Internal::area_shadow(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool area_shadow_undefined = 84;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(84, this->_internal_area_shadow_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive bar_shadow = 85;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        85, _Internal::bar_shadow(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool bar_shadow_undefined = 86;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(86, this->_internal_bar_shadow_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive bubble_shadow = 87;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        87, _Internal::bubble_shadow(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool bubble_shadow_undefined = 88;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(88, this->_internal_bubble_shadow_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive default_shadow = 89;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        89, _Internal::default_shadow(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool default_shadow_undefined = 90;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(90, this->_internal_default_shadow_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive line_shadow = 91;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        91, _Internal::line_shadow(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool line_shadow_undefined = 92;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(92, this->_internal_line_shadow_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive mixed_area_shadow = 93;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        93, _Internal::mixed_area_shadow(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool mixed_area_shadow_undefined = 94;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(94, this->_internal_mixed_area_shadow_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive mixed_column_shadow = 95;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        95, _Internal::mixed_column_shadow(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool mixed_column_shadow_undefined = 96;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(96, this->_internal_mixed_column_shadow_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive mixed_line_shadow = 97;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        97, _Internal::mixed_line_shadow(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool mixed_line_shadow_undefined = 98;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(98, this->_internal_mixed_line_shadow_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive pie_shadow = 99;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        99, _Internal::pie_shadow(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool pie_shadow_undefined = 100;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(100, this->_internal_pie_shadow_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive scatter_shadow = 101;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        101, _Internal::scatter_shadow(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool scatter_shadow_undefined = 102;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(102, this->_internal_scatter_shadow_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecStrokeArchive area_stroke = 103;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        103, _Internal::area_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool area_stroke_undefined = 104;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(104, this->_internal_area_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecStrokeArchive bar_stroke = 105;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        105, _Internal::bar_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool bar_stroke_undefined = 106;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(106, this->_internal_bar_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecStrokeArchive bubble_stroke = 107;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        107, _Internal::bubble_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool bubble_stroke_undefined = 108;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(108, this->_internal_bubble_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecStrokeArchive line_stroke = 109;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        109, _Internal::line_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional bool line_stroke_undefined = 110;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(110, this->_internal_line_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecStrokeArchive mixed_area_stroke = 111;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        111, _Internal::mixed_area_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool mixed_area_stroke_undefined = 112;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(112, this->_internal_mixed_area_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecStrokeArchive mixed_column_stroke = 113;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        113, _Internal::mixed_column_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool mixed_column_stroke_undefined = 114;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(114, this->_internal_mixed_column_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecStrokeArchive mixed_line_stroke = 115;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        115, _Internal::mixed_line_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool mixed_line_stroke_undefined = 116;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(116, this->_internal_mixed_line_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecStrokeArchive pie_stroke = 117;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        117, _Internal::pie_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool pie_stroke_undefined = 118;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(118, this->_internal_pie_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecStrokeArchive scatter_stroke = 119;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        119, _Internal::scatter_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool scatter_stroke_undefined = 120;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(120, this->_internal_scatter_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecFillArchive area_symbol_fill = 121;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        121, _Internal::area_symbol_fill(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool area_symbol_fill_undefined = 122;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(122, this->_internal_area_symbol_fill_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecFillArchive bubble_symbol_fill = 123;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        123, _Internal::bubble_symbol_fill(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool bubble_symbol_fill_undefined = 124;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(124, this->_internal_bubble_symbol_fill_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecFillArchive line_symbol_fill = 125;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        125, _Internal::line_symbol_fill(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool line_symbol_fill_undefined = 126;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(126, this->_internal_line_symbol_fill_undefined(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .TSDSOS.SpecFillArchive mixed_area_symbol_fill = 127;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        127, _Internal::mixed_area_symbol_fill(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool mixed_area_symbol_fill_undefined = 128;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(128, this->_internal_mixed_area_symbol_fill_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSDSOS.SpecFillArchive mixed_line_symbol_fill = 129;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        129, _Internal::mixed_line_symbol_fill(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool mixed_line_symbol_fill_undefined = 130;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(130, this->_internal_mixed_line_symbol_fill_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSDSOS.SpecFillArchive scatter_symbol_fill = 131;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        131, _Internal::scatter_symbol_fill(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool scatter_symbol_fill_undefined = 132;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(132, this->_internal_scatter_symbol_fill_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive area_symbol_fill_use_series_fill = 133;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        133, _Internal::area_symbol_fill_use_series_fill(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool area_symbol_fill_use_series_fill_undefined = 134;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(134, this->_internal_area_symbol_fill_use_series_fill_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive line_symbol_fill_use_series_fill = 135;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        135, _Internal::line_symbol_fill_use_series_fill(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool line_symbol_fill_use_series_fill_undefined = 136;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(136, this->_internal_line_symbol_fill_use_series_fill_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive mixed_area_symbol_fill_use_series_fill = 137;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        137, _Internal::mixed_area_symbol_fill_use_series_fill(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool mixed_area_symbol_fill_use_series_fill_undefined = 138;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(138, this->_internal_mixed_area_symbol_fill_use_series_fill_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive mixed_line_symbol_fill_use_series_fill = 139;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        139, _Internal::mixed_line_symbol_fill_use_series_fill(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool mixed_line_symbol_fill_use_series_fill_undefined = 140;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(140, this->_internal_mixed_line_symbol_fill_use_series_fill_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive area_symbol_fill_use_series_stroke = 141;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        141, _Internal::area_symbol_fill_use_series_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool area_symbol_fill_use_series_stroke_undefined = 142;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(142, this->_internal_area_symbol_fill_use_series_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive bubble_symbol_fill_use_series_stroke = 143;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        143, _Internal::bubble_symbol_fill_use_series_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool bubble_symbol_fill_use_series_stroke_undefined = 144;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(144, this->_internal_bubble_symbol_fill_use_series_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive line_symbol_fill_use_series_stroke = 145;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        145, _Internal::line_symbol_fill_use_series_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool line_symbol_fill_use_series_stroke_undefined = 146;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(146, this->_internal_line_symbol_fill_use_series_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive mixed_area_symbol_fill_use_series_stroke = 147;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        147, _Internal::mixed_area_symbol_fill_use_series_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool mixed_area_symbol_fill_use_series_stroke_undefined = 148;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(148, this->_internal_mixed_area_symbol_fill_use_series_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive mixed_line_symbol_fill_use_series_stroke = 149;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        149, _Internal::mixed_line_symbol_fill_use_series_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool mixed_line_symbol_fill_use_series_stroke_undefined = 150;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(150, this->_internal_mixed_line_symbol_fill_use_series_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive scatter_symbol_fill_use_series_stroke = 151;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        151, _Internal::scatter_symbol_fill_use_series_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool scatter_symbol_fill_use_series_stroke_undefined = 152;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(152, this->_internal_scatter_symbol_fill_use_series_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecDoubleArchive area_symbol_size = 153;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        153, _Internal::area_symbol_size(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool area_symbol_size_undefined = 154;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(154, this->_internal_area_symbol_size_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecDoubleArchive line_symbol_size = 155;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        155, _Internal::line_symbol_size(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool line_symbol_size_undefined = 156;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(156, this->_internal_line_symbol_size_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecDoubleArchive mixed_area_symbol_size = 157;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        157, _Internal::mixed_area_symbol_size(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool mixed_area_symbol_size_undefined = 158;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(158, this->_internal_mixed_area_symbol_size_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecDoubleArchive mixed_line_symbol_size = 159;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        159, _Internal::mixed_line_symbol_size(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool mixed_line_symbol_size_undefined = 160;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(160, this->_internal_mixed_line_symbol_size_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecDoubleArchive scatter_symbol_size = 161;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        161, _Internal::scatter_symbol_size(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool scatter_symbol_size_undefined = 162;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(162, this->_internal_scatter_symbol_size_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSDSOS.SpecStrokeArchive area_symbol_stroke = 163;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        163, _Internal::area_symbol_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool area_symbol_stroke_undefined = 164;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(164, this->_internal_area_symbol_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSDSOS.SpecStrokeArchive bubble_symbol_stroke = 165;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        165, _Internal::bubble_symbol_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool bubble_symbol_stroke_undefined = 166;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(166, this->_internal_bubble_symbol_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSDSOS.SpecStrokeArchive line_symbol_stroke = 167;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        167, _Internal::line_symbol_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool line_symbol_stroke_undefined = 168;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(168, this->_internal_line_symbol_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSDSOS.SpecStrokeArchive mixed_area_symbol_stroke = 169;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        169, _Internal::mixed_area_symbol_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool mixed_area_symbol_stroke_undefined = 170;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(170, this->_internal_mixed_area_symbol_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSDSOS.SpecStrokeArchive mixed_line_symbol_stroke = 171;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        171, _Internal::mixed_line_symbol_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool mixed_line_symbol_stroke_undefined = 172;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(172, this->_internal_mixed_line_symbol_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSDSOS.SpecStrokeArchive scatter_symbol_stroke = 173;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        173, _Internal::scatter_symbol_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[5];
  // optional bool scatter_symbol_stroke_undefined = 174;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(174, this->_internal_scatter_symbol_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSDSOS.SpecShadowArchive default_trend_line_shadow = 175;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        175, _Internal::default_trend_line_shadow(this), target, stream);
  }

  cached_has_bits = _has_bits_[6];
  // optional bool default_trend_line_shadow_undefined = 176;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(176, this->_internal_default_trend_line_shadow_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSDSOS.SpecStrokeArchive default_trend_line_stroke = 177;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        177, _Internal::default_trend_line_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[6];
  // optional bool default_trend_line_stroke_undefined = 178;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(178, this->_internal_default_trend_line_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecDoubleArchive default_trendline_equation_opacity = 179;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        179, _Internal::default_trendline_equation_opacity(this), target, stream);
  }

  cached_has_bits = _has_bits_[6];
  // optional bool default_trendline_equation_opacity_undefined = 180;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(180, this->_internal_default_trendline_equation_opacity_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive default_trendline_equation_paragraph_style_index = 181;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        181, _Internal::default_trendline_equation_paragraph_style_index(this), target, stream);
  }

  cached_has_bits = _has_bits_[6];
  // optional bool default_trendline_equation_paragraph_style_index_undefined = 182;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(182, this->_internal_default_trendline_equation_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecDoubleArchive default_trendline_r_squared_opacity = 183;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        183, _Internal::default_trendline_r_squared_opacity(this), target, stream);
  }

  cached_has_bits = _has_bits_[6];
  // optional bool default_trendline_r_squared_opacity_undefined = 184;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(184, this->_internal_default_trendline_r_squared_opacity_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive default_trendline_r_squared_paragraph_style_index = 185;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        185, _Internal::default_trendline_r_squared_paragraph_style_index(this), target, stream);
  }

  cached_has_bits = _has_bits_[6];
  // optional bool default_trendline_r_squared_paragraph_style_index_undefined = 186;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(186, this->_internal_default_trendline_r_squared_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive area_value_label_position = 187;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        187, _Internal::area_value_label_position(this), target, stream);
  }

  cached_has_bits = _has_bits_[6];
  // optional bool area_value_label_position_undefined = 188;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(188, this->_internal_area_value_label_position_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive bar_value_label_position = 189;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        189, _Internal::bar_value_label_position(this), target, stream);
  }

  cached_has_bits = _has_bits_[6];
  // optional bool bar_value_label_position_undefined = 190;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(190, this->_internal_bar_value_label_position_undefined(), target);
  }

  cached_has_bits = _has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive bubble_value_label_position = 191;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        191, _Internal::bubble_value_label_position(this), target, stream);
  }

  cached_has_bits = _has_bits_[6];
  // optional bool bubble_value_label_position_undefined = 192;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(192, this->_internal_bubble_value_label_position_undefined(), target);
  }

  cached_has_bits = _has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive default_value_label_position = 193;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        193, _Internal::default_value_label_position(this), target, stream);
  }

  cached_has_bits = _has_bits_[6];
  // optional bool default_value_label_position_undefined = 194;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(194, this->_internal_default_value_label_position_undefined(), target);
  }

  cached_has_bits = _has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive line_value_label_position = 195;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        195, _Internal::line_value_label_position(this), target, stream);
  }

  cached_has_bits = _has_bits_[6];
  // optional bool line_value_label_position_undefined = 196;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(196, this->_internal_line_value_label_position_undefined(), target);
  }

  cached_has_bits = _has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive mixed_area_value_label_position = 197;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        197, _Internal::mixed_area_value_label_position(this), target, stream);
  }

  cached_has_bits = _has_bits_[6];
  // optional bool mixed_area_value_label_position_undefined = 198;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(198, this->_internal_mixed_area_value_label_position_undefined(), target);
  }

  cached_has_bits = _has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive mixed_column_value_label_position = 199;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        199, _Internal::mixed_column_value_label_position(this), target, stream);
  }

  cached_has_bits = _has_bits_[6];
  // optional bool mixed_column_value_label_position_undefined = 200;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(200, this->_internal_mixed_column_value_label_position_undefined(), target);
  }

  cached_has_bits = _has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive mixed_line_value_label_position = 201;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        201, _Internal::mixed_line_value_label_position(this), target, stream);
  }

  cached_has_bits = _has_bits_[6];
  // optional bool mixed_line_value_label_position_undefined = 202;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(202, this->_internal_mixed_line_value_label_position_undefined(), target);
  }

  cached_has_bits = _has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive scatter_value_label_position = 203;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        203, _Internal::scatter_value_label_position(this), target, stream);
  }

  cached_has_bits = _has_bits_[6];
  // optional bool scatter_value_label_position_undefined = 204;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(204, this->_internal_scatter_value_label_position_undefined(), target);
  }

  cached_has_bits = _has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive stacked_area_value_label_position = 205;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        205, _Internal::stacked_area_value_label_position(this), target, stream);
  }

  cached_has_bits = _has_bits_[6];
  // optional bool stacked_area_value_label_position_undefined = 206;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(206, this->_internal_stacked_area_value_label_position_undefined(), target);
  }

  cached_has_bits = _has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive stacked_bar_value_label_position = 207;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        207, _Internal::stacked_bar_value_label_position(this), target, stream);
  }

  cached_has_bits = _has_bits_[6];
  // optional bool stacked_bar_value_label_position_undefined = 208;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(208, this->_internal_stacked_bar_value_label_position_undefined(), target);
  }

  cached_has_bits = _has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive default_value_label_spacing = 209;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        209, _Internal::default_value_label_spacing(this), target, stream);
  }

  cached_has_bits = _has_bits_[6];
  // optional bool default_value_label_spacing_undefined = 210;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(210, this->_internal_default_value_label_spacing_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.ChartSeriesStylePropertyChangeSetArchive)
  return target;
}

size_t ChartSeriesStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.ChartSeriesStylePropertyChangeSetArchive)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSDSOS.SpecLineEndArchive default_callout_line_end_line_end = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_callout_line_end_line_end_);
    }

    // optional .TSDSOS.SpecLineEndArchive default_callout_line_start_line_end = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_callout_line_start_line_end_);
    }

    // optional .TSDSOS.SpecStrokeArchive default_callout_line_stroke_style = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_callout_line_stroke_style_);
    }

    // optional .TSDSOS.SpecLineEndArchive default_error_bar_line_end = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_error_bar_line_end_);
    }

    // optional .TSDSOS.SpecLineEndArchive default_error_bar_line_end_scatter_x = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_error_bar_line_end_scatter_x_);
    }

    // optional .TSDSOS.SpecShadowArchive default_error_bar_shadow = 11;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_error_bar_shadow_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_error_bar_spacing = 13;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_error_bar_spacing_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_error_bar_spacing_scatter_x = 15;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_error_bar_spacing_scatter_x_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSDSOS.SpecStrokeArchive default_error_bar_stroke = 17;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_error_bar_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive default_error_bar_stroke_scatter_x = 19;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_error_bar_stroke_scatter_x_);
    }

    // optional .TSDSOS.SpecFillArchive area3d_fill = 21;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area3d_fill_);
    }

    // optional .TSDSOS.SpecFillArchive bar3d_fill = 23;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bar3d_fill_);
    }

    // optional .TSDSOS.SpecFillArchive column3d_fill = 25;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *column3d_fill_);
    }

    // optional .TSDSOS.SpecFillArchive line3d_fill = 27;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *line3d_fill_);
    }

    // optional .TSDSOS.SpecFillArchive pie3d_fill = 29;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pie3d_fill_);
    }

    // optional .TSDSOS.SpecFillArchive area_fill = 31;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area_fill_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSDSOS.SpecFillArchive bar_fill = 33;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bar_fill_);
    }

    // optional .TSDSOS.SpecFillArchive column_fill = 35;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *column_fill_);
    }

    // optional .TSDSOS.SpecFillArchive default_fill = 37;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_fill_);
    }

    // optional .TSDSOS.SpecFillArchive mixed_area_fill = 39;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_area_fill_);
    }

    // optional .TSDSOS.SpecFillArchive mixed_column_fill = 41;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_column_fill_);
    }

    // optional .TSDSOS.SpecFillArchive pie_fill = 43;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pie_fill_);
    }

    // optional .TSSSOS.SpecIntegerArchive area_label_paragraph_style_index = 45;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive bar_label_paragraph_style_index = 47;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bar_label_paragraph_style_index_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 49;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive donut_label_paragraph_style_index = 51;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *donut_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive line_label_paragraph_style_index = 53;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *line_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive mixed_label_paragraph_style_index = 55;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive pie_label_paragraph_style_index = 57;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pie_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_opacity = 59;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_opacity_);
    }

    // optional .TSSSOS.SpecIntegerArchive area_outside_label_paragraph_style_index = 61;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area_outside_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive bar_outside_label_paragraph_style_index = 63;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bar_outside_label_paragraph_style_index_);
    }

  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSSSOS.SpecIntegerArchive default_outside_label_paragraph_style_index = 65;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_outside_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive donut_outside_label_paragraph_style_index = 67;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *donut_outside_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive mixed_outside_label_paragraph_style_index = 69;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_outside_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive pie_outside_label_paragraph_style_index = 71;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pie_outside_label_paragraph_style_index_);
    }

    // optional .TSDSOS.SpecShadowArchive area3d_shadow = 73;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area3d_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive bar3d_shadow = 75;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bar3d_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive column3d_shadow = 77;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *column3d_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive line3d_shadow = 79;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *line3d_shadow_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSDSOS.SpecShadowArchive pie3d_shadow = 81;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pie3d_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive area_shadow = 83;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive bar_shadow = 85;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bar_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive bubble_shadow = 87;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bubble_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive default_shadow = 89;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive line_shadow = 91;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *line_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive mixed_area_shadow = 93;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_area_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive mixed_column_shadow = 95;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_column_shadow_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSDSOS.SpecShadowArchive mixed_line_shadow = 97;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_line_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive pie_shadow = 99;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pie_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive scatter_shadow = 101;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *scatter_shadow_);
    }

    // optional .TSDSOS.SpecStrokeArchive area_stroke = 103;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive bar_stroke = 105;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bar_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive bubble_stroke = 107;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bubble_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive line_stroke = 109;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *line_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive mixed_area_stroke = 111;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_area_stroke_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .TSDSOS.SpecStrokeArchive mixed_column_stroke = 113;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_column_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive mixed_line_stroke = 115;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_line_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive pie_stroke = 117;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pie_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive scatter_stroke = 119;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *scatter_stroke_);
    }

    // optional .TSDSOS.SpecFillArchive area_symbol_fill = 121;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area_symbol_fill_);
    }

    // optional .TSDSOS.SpecFillArchive bubble_symbol_fill = 123;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bubble_symbol_fill_);
    }

    // optional .TSDSOS.SpecFillArchive line_symbol_fill = 125;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *line_symbol_fill_);
    }

    // optional .TSDSOS.SpecFillArchive mixed_area_symbol_fill = 127;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_area_symbol_fill_);
    }

  }
  cached_has_bits = _has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSDSOS.SpecFillArchive mixed_line_symbol_fill = 129;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_line_symbol_fill_);
    }

    // optional .TSDSOS.SpecFillArchive scatter_symbol_fill = 131;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *scatter_symbol_fill_);
    }

    // optional .TSSSOS.SpecBoolArchive area_symbol_fill_use_series_fill = 133;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area_symbol_fill_use_series_fill_);
    }

    // optional .TSSSOS.SpecBoolArchive line_symbol_fill_use_series_fill = 135;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *line_symbol_fill_use_series_fill_);
    }

    // optional .TSSSOS.SpecBoolArchive mixed_area_symbol_fill_use_series_fill = 137;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_area_symbol_fill_use_series_fill_);
    }

    // optional .TSSSOS.SpecBoolArchive mixed_line_symbol_fill_use_series_fill = 139;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_line_symbol_fill_use_series_fill_);
    }

    // optional .TSSSOS.SpecBoolArchive area_symbol_fill_use_series_stroke = 141;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area_symbol_fill_use_series_stroke_);
    }

    // optional .TSSSOS.SpecBoolArchive bubble_symbol_fill_use_series_stroke = 143;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bubble_symbol_fill_use_series_stroke_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSSSOS.SpecBoolArchive line_symbol_fill_use_series_stroke = 145;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *line_symbol_fill_use_series_stroke_);
    }

    // optional .TSSSOS.SpecBoolArchive mixed_area_symbol_fill_use_series_stroke = 147;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_area_symbol_fill_use_series_stroke_);
    }

    // optional .TSSSOS.SpecBoolArchive mixed_line_symbol_fill_use_series_stroke = 149;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_line_symbol_fill_use_series_stroke_);
    }

    // optional .TSSSOS.SpecBoolArchive scatter_symbol_fill_use_series_stroke = 151;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *scatter_symbol_fill_use_series_stroke_);
    }

    // optional .TSSSOS.SpecDoubleArchive area_symbol_size = 153;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area_symbol_size_);
    }

    // optional .TSSSOS.SpecDoubleArchive line_symbol_size = 155;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *line_symbol_size_);
    }

    // optional .TSSSOS.SpecDoubleArchive mixed_area_symbol_size = 157;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_area_symbol_size_);
    }

    // optional .TSSSOS.SpecDoubleArchive mixed_line_symbol_size = 159;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_line_symbol_size_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSSSOS.SpecDoubleArchive scatter_symbol_size = 161;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *scatter_symbol_size_);
    }

    // optional .TSDSOS.SpecStrokeArchive area_symbol_stroke = 163;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area_symbol_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive bubble_symbol_stroke = 165;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bubble_symbol_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive line_symbol_stroke = 167;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *line_symbol_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive mixed_area_symbol_stroke = 169;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_area_symbol_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive mixed_line_symbol_stroke = 171;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_line_symbol_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive scatter_symbol_stroke = 173;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *scatter_symbol_stroke_);
    }

    // optional .TSDSOS.SpecShadowArchive default_trend_line_shadow = 175;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_trend_line_shadow_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .TSDSOS.SpecStrokeArchive default_trend_line_stroke = 177;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_trend_line_stroke_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_trendline_equation_opacity = 179;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_trendline_equation_opacity_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_trendline_equation_paragraph_style_index = 181;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_trendline_equation_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_trendline_r_squared_opacity = 183;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_trendline_r_squared_opacity_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_trendline_r_squared_paragraph_style_index = 185;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_trendline_r_squared_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive area_value_label_position = 187;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area_value_label_position_);
    }

    // optional .TSSSOS.SpecIntegerArchive bar_value_label_position = 189;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bar_value_label_position_);
    }

    // optional .TSSSOS.SpecIntegerArchive bubble_value_label_position = 191;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bubble_value_label_position_);
    }

  }
  cached_has_bits = _has_bits_[3];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSSSOS.SpecIntegerArchive default_value_label_position = 193;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_value_label_position_);
    }

    // optional .TSSSOS.SpecIntegerArchive line_value_label_position = 195;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *line_value_label_position_);
    }

    // optional .TSSSOS.SpecIntegerArchive mixed_area_value_label_position = 197;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_area_value_label_position_);
    }

    // optional .TSSSOS.SpecIntegerArchive mixed_column_value_label_position = 199;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_column_value_label_position_);
    }

    // optional .TSSSOS.SpecIntegerArchive mixed_line_value_label_position = 201;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mixed_line_value_label_position_);
    }

    // optional .TSSSOS.SpecIntegerArchive scatter_value_label_position = 203;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *scatter_value_label_position_);
    }

    // optional .TSSSOS.SpecIntegerArchive stacked_area_value_label_position = 205;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *stacked_area_value_label_position_);
    }

    // optional .TSSSOS.SpecIntegerArchive stacked_bar_value_label_position = 207;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *stacked_bar_value_label_position_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSSSOS.SpecIntegerArchive default_value_label_spacing = 209;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_value_label_spacing_);
    }

    // optional bool default_callout_line_end_line_end_undefined = 2;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 1;
    }

    // optional bool default_callout_line_start_line_end_undefined = 4;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 1;
    }

    // optional bool default_callout_line_stroke_style_undefined = 6;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 1;
    }

    // optional bool default_error_bar_line_end_undefined = 8;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 + 1;
    }

    // optional bool default_error_bar_line_end_scatter_x_undefined = 10;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 + 1;
    }

    // optional bool default_error_bar_shadow_undefined = 12;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 + 1;
    }

    // optional bool default_error_bar_spacing_undefined = 14;
    if (cached_has_bits & 0x00008000u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool default_error_bar_spacing_scatter_x_undefined = 16;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_stroke_undefined = 18;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_stroke_scatter_x_undefined = 20;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool area3d_fill_undefined = 22;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

    // optional bool bar3d_fill_undefined = 24;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

    // optional bool column3d_fill_undefined = 26;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool line3d_fill_undefined = 28;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional bool pie3d_fill_undefined = 30;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool area_fill_undefined = 32;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional bool bar_fill_undefined = 34;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + 1;
    }

    // optional bool column_fill_undefined = 36;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_fill_undefined = 38;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_area_fill_undefined = 40;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_column_fill_undefined = 42;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + 1;
    }

    // optional bool pie_fill_undefined = 44;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + 1;
    }

    // optional bool area_label_paragraph_style_index_undefined = 46;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + 1;
    }

  }
  cached_has_bits = _has_bits_[4];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool bar_label_paragraph_style_index_undefined = 48;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 1;
    }

    // optional bool default_label_paragraph_style_index_undefined = 50;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 1;
    }

    // optional bool donut_label_paragraph_style_index_undefined = 52;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool line_label_paragraph_style_index_undefined = 54;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_label_paragraph_style_index_undefined = 56;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional bool pie_label_paragraph_style_index_undefined = 58;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional bool default_opacity_undefined = 60;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool area_outside_label_paragraph_style_index_undefined = 62;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool bar_outside_label_paragraph_style_index_undefined = 64;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool default_outside_label_paragraph_style_index_undefined = 66;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool donut_outside_label_paragraph_style_index_undefined = 68;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_outside_label_paragraph_style_index_undefined = 70;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool pie_outside_label_paragraph_style_index_undefined = 72;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional bool area3d_shadow_undefined = 74;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

    // optional bool bar3d_shadow_undefined = 76;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional bool column3d_shadow_undefined = 78;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool line3d_shadow_undefined = 80;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool pie3d_shadow_undefined = 82;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional bool area_shadow_undefined = 84;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool bar_shadow_undefined = 86;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_shadow_undefined = 88;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

    // optional bool default_shadow_undefined = 90;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool line_shadow_undefined = 92;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_area_shadow_undefined = 94;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool mixed_column_shadow_undefined = 96;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_line_shadow_undefined = 98;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + 1;
    }

    // optional bool pie_shadow_undefined = 100;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_shadow_undefined = 102;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + 1;
    }

    // optional bool area_stroke_undefined = 104;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + 1;
    }

    // optional bool bar_stroke_undefined = 106;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_stroke_undefined = 108;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + 1;
    }

    // optional bool line_stroke_undefined = 110;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + 1;
    }

  }
  cached_has_bits = _has_bits_[5];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool mixed_area_stroke_undefined = 112;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_column_stroke_undefined = 114;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_line_stroke_undefined = 116;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool pie_stroke_undefined = 118;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_stroke_undefined = 120;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional bool area_symbol_fill_undefined = 122;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_symbol_fill_undefined = 124;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool line_symbol_fill_undefined = 126;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool mixed_area_symbol_fill_undefined = 128;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_line_symbol_fill_undefined = 130;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_symbol_fill_undefined = 132;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool area_symbol_fill_use_series_fill_undefined = 134;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool line_symbol_fill_use_series_fill_undefined = 136;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_area_symbol_fill_use_series_fill_undefined = 138;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_line_symbol_fill_use_series_fill_undefined = 140;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional bool area_symbol_fill_use_series_stroke_undefined = 142;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool bubble_symbol_fill_use_series_stroke_undefined = 144;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool line_symbol_fill_use_series_stroke_undefined = 146;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_area_symbol_fill_use_series_stroke_undefined = 148;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_line_symbol_fill_use_series_stroke_undefined = 150;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_symbol_fill_use_series_stroke_undefined = 152;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

    // optional bool area_symbol_size_undefined = 154;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool line_symbol_size_undefined = 156;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_area_symbol_size_undefined = 158;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool mixed_line_symbol_size_undefined = 160;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_symbol_size_undefined = 162;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + 1;
    }

    // optional bool area_symbol_stroke_undefined = 164;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_symbol_stroke_undefined = 166;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + 1;
    }

    // optional bool line_symbol_stroke_undefined = 168;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_area_symbol_stroke_undefined = 170;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_line_symbol_stroke_undefined = 172;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_symbol_stroke_undefined = 174;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + 1;
    }

  }
  cached_has_bits = _has_bits_[6];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool default_trend_line_shadow_undefined = 176;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 1;
    }

    // optional bool default_trend_line_stroke_undefined = 178;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 1;
    }

    // optional bool default_trendline_equation_opacity_undefined = 180;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool default_trendline_equation_paragraph_style_index_undefined = 182;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

    // optional bool default_trendline_r_squared_opacity_undefined = 184;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional bool default_trendline_r_squared_paragraph_style_index_undefined = 186;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional bool area_value_label_position_undefined = 188;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool bar_value_label_position_undefined = 190;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool bubble_value_label_position_undefined = 192;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool default_value_label_position_undefined = 194;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool line_value_label_position_undefined = 196;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_area_value_label_position_undefined = 198;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_column_value_label_position_undefined = 200;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_line_value_label_position_undefined = 202;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_value_label_position_undefined = 204;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional bool stacked_area_value_label_position_undefined = 206;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00030000u) {
    // optional bool stacked_bar_value_label_position_undefined = 208;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool default_value_label_spacing_undefined = 210;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChartSeriesStylePropertyChangeSetArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSCHSOS.ChartSeriesStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const ChartSeriesStylePropertyChangeSetArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChartSeriesStylePropertyChangeSetArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSCHSOS.ChartSeriesStylePropertyChangeSetArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSCHSOS.ChartSeriesStylePropertyChangeSetArchive)
    MergeFrom(*source);
  }
}

void ChartSeriesStylePropertyChangeSetArchive::MergeFrom(const ChartSeriesStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.ChartSeriesStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_default_callout_line_end_line_end()->::TSDSOS::SpecLineEndArchive::MergeFrom(from._internal_default_callout_line_end_line_end());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_default_callout_line_start_line_end()->::TSDSOS::SpecLineEndArchive::MergeFrom(from._internal_default_callout_line_start_line_end());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_default_callout_line_stroke_style()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_default_callout_line_stroke_style());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_default_error_bar_line_end()->::TSDSOS::SpecLineEndArchive::MergeFrom(from._internal_default_error_bar_line_end());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_default_error_bar_line_end_scatter_x()->::TSDSOS::SpecLineEndArchive::MergeFrom(from._internal_default_error_bar_line_end_scatter_x());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_default_error_bar_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_default_error_bar_shadow());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_default_error_bar_spacing()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_error_bar_spacing());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_default_error_bar_spacing_scatter_x()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_error_bar_spacing_scatter_x());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_default_error_bar_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_default_error_bar_stroke());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_default_error_bar_stroke_scatter_x()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_default_error_bar_stroke_scatter_x());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_area3d_fill()->::TSDSOS::SpecFillArchive::MergeFrom(from._internal_area3d_fill());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_bar3d_fill()->::TSDSOS::SpecFillArchive::MergeFrom(from._internal_bar3d_fill());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_column3d_fill()->::TSDSOS::SpecFillArchive::MergeFrom(from._internal_column3d_fill());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_line3d_fill()->::TSDSOS::SpecFillArchive::MergeFrom(from._internal_line3d_fill());
    }
    if (cached_has_bits & 0x00004000u) {
      _internal_mutable_pie3d_fill()->::TSDSOS::SpecFillArchive::MergeFrom(from._internal_pie3d_fill());
    }
    if (cached_has_bits & 0x00008000u) {
      _internal_mutable_area_fill()->::TSDSOS::SpecFillArchive::MergeFrom(from._internal_area_fill());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _internal_mutable_bar_fill()->::TSDSOS::SpecFillArchive::MergeFrom(from._internal_bar_fill());
    }
    if (cached_has_bits & 0x00020000u) {
      _internal_mutable_column_fill()->::TSDSOS::SpecFillArchive::MergeFrom(from._internal_column_fill());
    }
    if (cached_has_bits & 0x00040000u) {
      _internal_mutable_default_fill()->::TSDSOS::SpecFillArchive::MergeFrom(from._internal_default_fill());
    }
    if (cached_has_bits & 0x00080000u) {
      _internal_mutable_mixed_area_fill()->::TSDSOS::SpecFillArchive::MergeFrom(from._internal_mixed_area_fill());
    }
    if (cached_has_bits & 0x00100000u) {
      _internal_mutable_mixed_column_fill()->::TSDSOS::SpecFillArchive::MergeFrom(from._internal_mixed_column_fill());
    }
    if (cached_has_bits & 0x00200000u) {
      _internal_mutable_pie_fill()->::TSDSOS::SpecFillArchive::MergeFrom(from._internal_pie_fill());
    }
    if (cached_has_bits & 0x00400000u) {
      _internal_mutable_area_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_area_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x00800000u) {
      _internal_mutable_bar_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_bar_label_paragraph_style_index());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _internal_mutable_default_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x02000000u) {
      _internal_mutable_donut_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_donut_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x04000000u) {
      _internal_mutable_line_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_line_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x08000000u) {
      _internal_mutable_mixed_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_mixed_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x10000000u) {
      _internal_mutable_pie_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_pie_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x20000000u) {
      _internal_mutable_default_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default_opacity());
    }
    if (cached_has_bits & 0x40000000u) {
      _internal_mutable_area_outside_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_area_outside_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x80000000u) {
      _internal_mutable_bar_outside_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_bar_outside_label_paragraph_style_index());
    }
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_default_outside_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_outside_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_donut_outside_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_donut_outside_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_mixed_outside_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_mixed_outside_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_pie_outside_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_pie_outside_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_area3d_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_area3d_shadow());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_bar3d_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_bar3d_shadow());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_column3d_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_column3d_shadow());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_line3d_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_line3d_shadow());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_pie3d_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_pie3d_shadow());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_area_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_area_shadow());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_bar_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_bar_shadow());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_bubble_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_bubble_shadow());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_default_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_default_shadow());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_line_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_line_shadow());
    }
    if (cached_has_bits & 0x00004000u) {
      _internal_mutable_mixed_area_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_mixed_area_shadow());
    }
    if (cached_has_bits & 0x00008000u) {
      _internal_mutable_mixed_column_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_mixed_column_shadow());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _internal_mutable_mixed_line_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_mixed_line_shadow());
    }
    if (cached_has_bits & 0x00020000u) {
      _internal_mutable_pie_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_pie_shadow());
    }
    if (cached_has_bits & 0x00040000u) {
      _internal_mutable_scatter_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_scatter_shadow());
    }
    if (cached_has_bits & 0x00080000u) {
      _internal_mutable_area_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_area_stroke());
    }
    if (cached_has_bits & 0x00100000u) {
      _internal_mutable_bar_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_bar_stroke());
    }
    if (cached_has_bits & 0x00200000u) {
      _internal_mutable_bubble_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_bubble_stroke());
    }
    if (cached_has_bits & 0x00400000u) {
      _internal_mutable_line_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_line_stroke());
    }
    if (cached_has_bits & 0x00800000u) {
      _internal_mutable_mixed_area_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_mixed_area_stroke());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _internal_mutable_mixed_column_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_mixed_column_stroke());
    }
    if (cached_has_bits & 0x02000000u) {
      _internal_mutable_mixed_line_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_mixed_line_stroke());
    }
    if (cached_has_bits & 0x04000000u) {
      _internal_mutable_pie_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_pie_stroke());
    }
    if (cached_has_bits & 0x08000000u) {
      _internal_mutable_scatter_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_scatter_stroke());
    }
    if (cached_has_bits & 0x10000000u) {
      _internal_mutable_area_symbol_fill()->::TSDSOS::SpecFillArchive::MergeFrom(from._internal_area_symbol_fill());
    }
    if (cached_has_bits & 0x20000000u) {
      _internal_mutable_bubble_symbol_fill()->::TSDSOS::SpecFillArchive::MergeFrom(from._internal_bubble_symbol_fill());
    }
    if (cached_has_bits & 0x40000000u) {
      _internal_mutable_line_symbol_fill()->::TSDSOS::SpecFillArchive::MergeFrom(from._internal_line_symbol_fill());
    }
    if (cached_has_bits & 0x80000000u) {
      _internal_mutable_mixed_area_symbol_fill()->::TSDSOS::SpecFillArchive::MergeFrom(from._internal_mixed_area_symbol_fill());
    }
  }
  cached_has_bits = from._has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_mixed_line_symbol_fill()->::TSDSOS::SpecFillArchive::MergeFrom(from._internal_mixed_line_symbol_fill());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_scatter_symbol_fill()->::TSDSOS::SpecFillArchive::MergeFrom(from._internal_scatter_symbol_fill());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_area_symbol_fill_use_series_fill()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_area_symbol_fill_use_series_fill());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_line_symbol_fill_use_series_fill()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_line_symbol_fill_use_series_fill());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_mixed_area_symbol_fill_use_series_fill()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_mixed_area_symbol_fill_use_series_fill());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_mixed_line_symbol_fill_use_series_fill()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_mixed_line_symbol_fill_use_series_fill());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_area_symbol_fill_use_series_stroke()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_area_symbol_fill_use_series_stroke());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_bubble_symbol_fill_use_series_stroke()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_bubble_symbol_fill_use_series_stroke());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_line_symbol_fill_use_series_stroke()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_line_symbol_fill_use_series_stroke());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_mixed_area_symbol_fill_use_series_stroke()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_mixed_area_symbol_fill_use_series_stroke());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_mixed_line_symbol_fill_use_series_stroke()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_mixed_line_symbol_fill_use_series_stroke());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_scatter_symbol_fill_use_series_stroke()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_scatter_symbol_fill_use_series_stroke());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_area_symbol_size()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_area_symbol_size());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_line_symbol_size()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_line_symbol_size());
    }
    if (cached_has_bits & 0x00004000u) {
      _internal_mutable_mixed_area_symbol_size()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_mixed_area_symbol_size());
    }
    if (cached_has_bits & 0x00008000u) {
      _internal_mutable_mixed_line_symbol_size()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_mixed_line_symbol_size());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _internal_mutable_scatter_symbol_size()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_scatter_symbol_size());
    }
    if (cached_has_bits & 0x00020000u) {
      _internal_mutable_area_symbol_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_area_symbol_stroke());
    }
    if (cached_has_bits & 0x00040000u) {
      _internal_mutable_bubble_symbol_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_bubble_symbol_stroke());
    }
    if (cached_has_bits & 0x00080000u) {
      _internal_mutable_line_symbol_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_line_symbol_stroke());
    }
    if (cached_has_bits & 0x00100000u) {
      _internal_mutable_mixed_area_symbol_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_mixed_area_symbol_stroke());
    }
    if (cached_has_bits & 0x00200000u) {
      _internal_mutable_mixed_line_symbol_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_mixed_line_symbol_stroke());
    }
    if (cached_has_bits & 0x00400000u) {
      _internal_mutable_scatter_symbol_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_scatter_symbol_stroke());
    }
    if (cached_has_bits & 0x00800000u) {
      _internal_mutable_default_trend_line_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_default_trend_line_shadow());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _internal_mutable_default_trend_line_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_default_trend_line_stroke());
    }
    if (cached_has_bits & 0x02000000u) {
      _internal_mutable_default_trendline_equation_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default_trendline_equation_opacity());
    }
    if (cached_has_bits & 0x04000000u) {
      _internal_mutable_default_trendline_equation_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_trendline_equation_paragraph_style_index());
    }
    if (cached_has_bits & 0x08000000u) {
      _internal_mutable_default_trendline_r_squared_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default_trendline_r_squared_opacity());
    }
    if (cached_has_bits & 0x10000000u) {
      _internal_mutable_default_trendline_r_squared_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_trendline_r_squared_paragraph_style_index());
    }
    if (cached_has_bits & 0x20000000u) {
      _internal_mutable_area_value_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_area_value_label_position());
    }
    if (cached_has_bits & 0x40000000u) {
      _internal_mutable_bar_value_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_bar_value_label_position());
    }
    if (cached_has_bits & 0x80000000u) {
      _internal_mutable_bubble_value_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_bubble_value_label_position());
    }
  }
  cached_has_bits = from._has_bits_[3];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_default_value_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_value_label_position());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_line_value_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_line_value_label_position());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_mixed_area_value_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_mixed_area_value_label_position());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_mixed_column_value_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_mixed_column_value_label_position());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_mixed_line_value_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_mixed_line_value_label_position());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_scatter_value_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_scatter_value_label_position());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_stacked_area_value_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_stacked_area_value_label_position());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_stacked_bar_value_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_stacked_bar_value_label_position());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_default_value_label_spacing()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_value_label_spacing());
    }
    if (cached_has_bits & 0x00000200u) {
      default_callout_line_end_line_end_undefined_ = from.default_callout_line_end_line_end_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      default_callout_line_start_line_end_undefined_ = from.default_callout_line_start_line_end_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      default_callout_line_stroke_style_undefined_ = from.default_callout_line_stroke_style_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      default_error_bar_line_end_undefined_ = from.default_error_bar_line_end_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      default_error_bar_line_end_scatter_x_undefined_ = from.default_error_bar_line_end_scatter_x_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      default_error_bar_shadow_undefined_ = from.default_error_bar_shadow_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      default_error_bar_spacing_undefined_ = from.default_error_bar_spacing_undefined_;
    }
    _has_bits_[3] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      default_error_bar_spacing_scatter_x_undefined_ = from.default_error_bar_spacing_scatter_x_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      default_error_bar_stroke_undefined_ = from.default_error_bar_stroke_undefined_;
    }
    if (cached_has_bits & 0x00040000u) {
      default_error_bar_stroke_scatter_x_undefined_ = from.default_error_bar_stroke_scatter_x_undefined_;
    }
    if (cached_has_bits & 0x00080000u) {
      area3d_fill_undefined_ = from.area3d_fill_undefined_;
    }
    if (cached_has_bits & 0x00100000u) {
      bar3d_fill_undefined_ = from.bar3d_fill_undefined_;
    }
    if (cached_has_bits & 0x00200000u) {
      column3d_fill_undefined_ = from.column3d_fill_undefined_;
    }
    if (cached_has_bits & 0x00400000u) {
      line3d_fill_undefined_ = from.line3d_fill_undefined_;
    }
    if (cached_has_bits & 0x00800000u) {
      pie3d_fill_undefined_ = from.pie3d_fill_undefined_;
    }
    _has_bits_[3] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      area_fill_undefined_ = from.area_fill_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      bar_fill_undefined_ = from.bar_fill_undefined_;
    }
    if (cached_has_bits & 0x04000000u) {
      column_fill_undefined_ = from.column_fill_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      default_fill_undefined_ = from.default_fill_undefined_;
    }
    if (cached_has_bits & 0x10000000u) {
      mixed_area_fill_undefined_ = from.mixed_area_fill_undefined_;
    }
    if (cached_has_bits & 0x20000000u) {
      mixed_column_fill_undefined_ = from.mixed_column_fill_undefined_;
    }
    if (cached_has_bits & 0x40000000u) {
      pie_fill_undefined_ = from.pie_fill_undefined_;
    }
    if (cached_has_bits & 0x80000000u) {
      area_label_paragraph_style_index_undefined_ = from.area_label_paragraph_style_index_undefined_;
    }
    _has_bits_[3] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[4];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      bar_label_paragraph_style_index_undefined_ = from.bar_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      default_label_paragraph_style_index_undefined_ = from.default_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      donut_label_paragraph_style_index_undefined_ = from.donut_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      line_label_paragraph_style_index_undefined_ = from.line_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      mixed_label_paragraph_style_index_undefined_ = from.mixed_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      pie_label_paragraph_style_index_undefined_ = from.pie_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      default_opacity_undefined_ = from.default_opacity_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      area_outside_label_paragraph_style_index_undefined_ = from.area_outside_label_paragraph_style_index_undefined_;
    }
    _has_bits_[4] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      bar_outside_label_paragraph_style_index_undefined_ = from.bar_outside_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      default_outside_label_paragraph_style_index_undefined_ = from.default_outside_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      donut_outside_label_paragraph_style_index_undefined_ = from.donut_outside_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      mixed_outside_label_paragraph_style_index_undefined_ = from.mixed_outside_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      pie_outside_label_paragraph_style_index_undefined_ = from.pie_outside_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      area3d_shadow_undefined_ = from.area3d_shadow_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      bar3d_shadow_undefined_ = from.bar3d_shadow_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      column3d_shadow_undefined_ = from.column3d_shadow_undefined_;
    }
    _has_bits_[4] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      line3d_shadow_undefined_ = from.line3d_shadow_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      pie3d_shadow_undefined_ = from.pie3d_shadow_undefined_;
    }
    if (cached_has_bits & 0x00040000u) {
      area_shadow_undefined_ = from.area_shadow_undefined_;
    }
    if (cached_has_bits & 0x00080000u) {
      bar_shadow_undefined_ = from.bar_shadow_undefined_;
    }
    if (cached_has_bits & 0x00100000u) {
      bubble_shadow_undefined_ = from.bubble_shadow_undefined_;
    }
    if (cached_has_bits & 0x00200000u) {
      default_shadow_undefined_ = from.default_shadow_undefined_;
    }
    if (cached_has_bits & 0x00400000u) {
      line_shadow_undefined_ = from.line_shadow_undefined_;
    }
    if (cached_has_bits & 0x00800000u) {
      mixed_area_shadow_undefined_ = from.mixed_area_shadow_undefined_;
    }
    _has_bits_[4] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      mixed_column_shadow_undefined_ = from.mixed_column_shadow_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      mixed_line_shadow_undefined_ = from.mixed_line_shadow_undefined_;
    }
    if (cached_has_bits & 0x04000000u) {
      pie_shadow_undefined_ = from.pie_shadow_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      scatter_shadow_undefined_ = from.scatter_shadow_undefined_;
    }
    if (cached_has_bits & 0x10000000u) {
      area_stroke_undefined_ = from.area_stroke_undefined_;
    }
    if (cached_has_bits & 0x20000000u) {
      bar_stroke_undefined_ = from.bar_stroke_undefined_;
    }
    if (cached_has_bits & 0x40000000u) {
      bubble_stroke_undefined_ = from.bubble_stroke_undefined_;
    }
    if (cached_has_bits & 0x80000000u) {
      line_stroke_undefined_ = from.line_stroke_undefined_;
    }
    _has_bits_[4] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[5];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      mixed_area_stroke_undefined_ = from.mixed_area_stroke_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      mixed_column_stroke_undefined_ = from.mixed_column_stroke_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      mixed_line_stroke_undefined_ = from.mixed_line_stroke_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      pie_stroke_undefined_ = from.pie_stroke_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      scatter_stroke_undefined_ = from.scatter_stroke_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      area_symbol_fill_undefined_ = from.area_symbol_fill_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      bubble_symbol_fill_undefined_ = from.bubble_symbol_fill_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      line_symbol_fill_undefined_ = from.line_symbol_fill_undefined_;
    }
    _has_bits_[5] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      mixed_area_symbol_fill_undefined_ = from.mixed_area_symbol_fill_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      mixed_line_symbol_fill_undefined_ = from.mixed_line_symbol_fill_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      scatter_symbol_fill_undefined_ = from.scatter_symbol_fill_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      area_symbol_fill_use_series_fill_undefined_ = from.area_symbol_fill_use_series_fill_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      line_symbol_fill_use_series_fill_undefined_ = from.line_symbol_fill_use_series_fill_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      mixed_area_symbol_fill_use_series_fill_undefined_ = from.mixed_area_symbol_fill_use_series_fill_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      mixed_line_symbol_fill_use_series_fill_undefined_ = from.mixed_line_symbol_fill_use_series_fill_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      area_symbol_fill_use_series_stroke_undefined_ = from.area_symbol_fill_use_series_stroke_undefined_;
    }
    _has_bits_[5] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      bubble_symbol_fill_use_series_stroke_undefined_ = from.bubble_symbol_fill_use_series_stroke_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      line_symbol_fill_use_series_stroke_undefined_ = from.line_symbol_fill_use_series_stroke_undefined_;
    }
    if (cached_has_bits & 0x00040000u) {
      mixed_area_symbol_fill_use_series_stroke_undefined_ = from.mixed_area_symbol_fill_use_series_stroke_undefined_;
    }
    if (cached_has_bits & 0x00080000u) {
      mixed_line_symbol_fill_use_series_stroke_undefined_ = from.mixed_line_symbol_fill_use_series_stroke_undefined_;
    }
    if (cached_has_bits & 0x00100000u) {
      scatter_symbol_fill_use_series_stroke_undefined_ = from.scatter_symbol_fill_use_series_stroke_undefined_;
    }
    if (cached_has_bits & 0x00200000u) {
      area_symbol_size_undefined_ = from.area_symbol_size_undefined_;
    }
    if (cached_has_bits & 0x00400000u) {
      line_symbol_size_undefined_ = from.line_symbol_size_undefined_;
    }
    if (cached_has_bits & 0x00800000u) {
      mixed_area_symbol_size_undefined_ = from.mixed_area_symbol_size_undefined_;
    }
    _has_bits_[5] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      mixed_line_symbol_size_undefined_ = from.mixed_line_symbol_size_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      scatter_symbol_size_undefined_ = from.scatter_symbol_size_undefined_;
    }
    if (cached_has_bits & 0x04000000u) {
      area_symbol_stroke_undefined_ = from.area_symbol_stroke_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      bubble_symbol_stroke_undefined_ = from.bubble_symbol_stroke_undefined_;
    }
    if (cached_has_bits & 0x10000000u) {
      line_symbol_stroke_undefined_ = from.line_symbol_stroke_undefined_;
    }
    if (cached_has_bits & 0x20000000u) {
      mixed_area_symbol_stroke_undefined_ = from.mixed_area_symbol_stroke_undefined_;
    }
    if (cached_has_bits & 0x40000000u) {
      mixed_line_symbol_stroke_undefined_ = from.mixed_line_symbol_stroke_undefined_;
    }
    if (cached_has_bits & 0x80000000u) {
      scatter_symbol_stroke_undefined_ = from.scatter_symbol_stroke_undefined_;
    }
    _has_bits_[5] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[6];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      default_trend_line_shadow_undefined_ = from.default_trend_line_shadow_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      default_trend_line_stroke_undefined_ = from.default_trend_line_stroke_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      default_trendline_equation_opacity_undefined_ = from.default_trendline_equation_opacity_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      default_trendline_equation_paragraph_style_index_undefined_ = from.default_trendline_equation_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      default_trendline_r_squared_opacity_undefined_ = from.default_trendline_r_squared_opacity_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      default_trendline_r_squared_paragraph_style_index_undefined_ = from.default_trendline_r_squared_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      area_value_label_position_undefined_ = from.area_value_label_position_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      bar_value_label_position_undefined_ = from.bar_value_label_position_undefined_;
    }
    _has_bits_[6] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      bubble_value_label_position_undefined_ = from.bubble_value_label_position_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      default_value_label_position_undefined_ = from.default_value_label_position_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      line_value_label_position_undefined_ = from.line_value_label_position_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      mixed_area_value_label_position_undefined_ = from.mixed_area_value_label_position_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      mixed_column_value_label_position_undefined_ = from.mixed_column_value_label_position_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      mixed_line_value_label_position_undefined_ = from.mixed_line_value_label_position_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      scatter_value_label_position_undefined_ = from.scatter_value_label_position_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      stacked_area_value_label_position_undefined_ = from.stacked_area_value_label_position_undefined_;
    }
    _has_bits_[6] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00030000u) {
    if (cached_has_bits & 0x00010000u) {
      stacked_bar_value_label_position_undefined_ = from.stacked_bar_value_label_position_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      default_value_label_spacing_undefined_ = from.default_value_label_spacing_undefined_;
    }
    _has_bits_[6] |= cached_has_bits;
  }
}

void ChartSeriesStylePropertyChangeSetArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSCHSOS.ChartSeriesStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChartSeriesStylePropertyChangeSetArchive::CopyFrom(const ChartSeriesStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.ChartSeriesStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChartSeriesStylePropertyChangeSetArchive::IsInitialized() const {
  if (_internal_has_default_callout_line_end_line_end()) {
    if (!default_callout_line_end_line_end_->IsInitialized()) return false;
  }
  if (_internal_has_default_callout_line_start_line_end()) {
    if (!default_callout_line_start_line_end_->IsInitialized()) return false;
  }
  if (_internal_has_default_callout_line_stroke_style()) {
    if (!default_callout_line_stroke_style_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_line_end()) {
    if (!default_error_bar_line_end_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_line_end_scatter_x()) {
    if (!default_error_bar_line_end_scatter_x_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_shadow()) {
    if (!default_error_bar_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_spacing()) {
    if (!default_error_bar_spacing_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_spacing_scatter_x()) {
    if (!default_error_bar_spacing_scatter_x_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_stroke()) {
    if (!default_error_bar_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_stroke_scatter_x()) {
    if (!default_error_bar_stroke_scatter_x_->IsInitialized()) return false;
  }
  if (_internal_has_area3d_fill()) {
    if (!area3d_fill_->IsInitialized()) return false;
  }
  if (_internal_has_bar3d_fill()) {
    if (!bar3d_fill_->IsInitialized()) return false;
  }
  if (_internal_has_column3d_fill()) {
    if (!column3d_fill_->IsInitialized()) return false;
  }
  if (_internal_has_line3d_fill()) {
    if (!line3d_fill_->IsInitialized()) return false;
  }
  if (_internal_has_pie3d_fill()) {
    if (!pie3d_fill_->IsInitialized()) return false;
  }
  if (_internal_has_area_fill()) {
    if (!area_fill_->IsInitialized()) return false;
  }
  if (_internal_has_bar_fill()) {
    if (!bar_fill_->IsInitialized()) return false;
  }
  if (_internal_has_column_fill()) {
    if (!column_fill_->IsInitialized()) return false;
  }
  if (_internal_has_default_fill()) {
    if (!default_fill_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_area_fill()) {
    if (!mixed_area_fill_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_column_fill()) {
    if (!mixed_column_fill_->IsInitialized()) return false;
  }
  if (_internal_has_pie_fill()) {
    if (!pie_fill_->IsInitialized()) return false;
  }
  if (_internal_has_area_label_paragraph_style_index()) {
    if (!area_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_bar_label_paragraph_style_index()) {
    if (!bar_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_default_label_paragraph_style_index()) {
    if (!default_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_donut_label_paragraph_style_index()) {
    if (!donut_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_line_label_paragraph_style_index()) {
    if (!line_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_label_paragraph_style_index()) {
    if (!mixed_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_pie_label_paragraph_style_index()) {
    if (!pie_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_default_opacity()) {
    if (!default_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_area_outside_label_paragraph_style_index()) {
    if (!area_outside_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_bar_outside_label_paragraph_style_index()) {
    if (!bar_outside_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_default_outside_label_paragraph_style_index()) {
    if (!default_outside_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_donut_outside_label_paragraph_style_index()) {
    if (!donut_outside_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_outside_label_paragraph_style_index()) {
    if (!mixed_outside_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_pie_outside_label_paragraph_style_index()) {
    if (!pie_outside_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_area3d_shadow()) {
    if (!area3d_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_bar3d_shadow()) {
    if (!bar3d_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_column3d_shadow()) {
    if (!column3d_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_line3d_shadow()) {
    if (!line3d_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_pie3d_shadow()) {
    if (!pie3d_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_area_shadow()) {
    if (!area_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_bar_shadow()) {
    if (!bar_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_shadow()) {
    if (!bubble_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_default_shadow()) {
    if (!default_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_line_shadow()) {
    if (!line_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_area_shadow()) {
    if (!mixed_area_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_column_shadow()) {
    if (!mixed_column_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_line_shadow()) {
    if (!mixed_line_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_pie_shadow()) {
    if (!pie_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_shadow()) {
    if (!scatter_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_area_stroke()) {
    if (!area_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_bar_stroke()) {
    if (!bar_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_stroke()) {
    if (!bubble_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_line_stroke()) {
    if (!line_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_area_stroke()) {
    if (!mixed_area_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_column_stroke()) {
    if (!mixed_column_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_line_stroke()) {
    if (!mixed_line_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_pie_stroke()) {
    if (!pie_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_stroke()) {
    if (!scatter_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_area_symbol_fill()) {
    if (!area_symbol_fill_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_symbol_fill()) {
    if (!bubble_symbol_fill_->IsInitialized()) return false;
  }
  if (_internal_has_line_symbol_fill()) {
    if (!line_symbol_fill_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_area_symbol_fill()) {
    if (!mixed_area_symbol_fill_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_line_symbol_fill()) {
    if (!mixed_line_symbol_fill_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_symbol_fill()) {
    if (!scatter_symbol_fill_->IsInitialized()) return false;
  }
  if (_internal_has_area_symbol_fill_use_series_fill()) {
    if (!area_symbol_fill_use_series_fill_->IsInitialized()) return false;
  }
  if (_internal_has_line_symbol_fill_use_series_fill()) {
    if (!line_symbol_fill_use_series_fill_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_area_symbol_fill_use_series_fill()) {
    if (!mixed_area_symbol_fill_use_series_fill_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_line_symbol_fill_use_series_fill()) {
    if (!mixed_line_symbol_fill_use_series_fill_->IsInitialized()) return false;
  }
  if (_internal_has_area_symbol_fill_use_series_stroke()) {
    if (!area_symbol_fill_use_series_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_symbol_fill_use_series_stroke()) {
    if (!bubble_symbol_fill_use_series_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_line_symbol_fill_use_series_stroke()) {
    if (!line_symbol_fill_use_series_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_area_symbol_fill_use_series_stroke()) {
    if (!mixed_area_symbol_fill_use_series_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_line_symbol_fill_use_series_stroke()) {
    if (!mixed_line_symbol_fill_use_series_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_symbol_fill_use_series_stroke()) {
    if (!scatter_symbol_fill_use_series_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_area_symbol_size()) {
    if (!area_symbol_size_->IsInitialized()) return false;
  }
  if (_internal_has_line_symbol_size()) {
    if (!line_symbol_size_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_area_symbol_size()) {
    if (!mixed_area_symbol_size_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_line_symbol_size()) {
    if (!mixed_line_symbol_size_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_symbol_size()) {
    if (!scatter_symbol_size_->IsInitialized()) return false;
  }
  if (_internal_has_area_symbol_stroke()) {
    if (!area_symbol_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_symbol_stroke()) {
    if (!bubble_symbol_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_line_symbol_stroke()) {
    if (!line_symbol_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_area_symbol_stroke()) {
    if (!mixed_area_symbol_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_line_symbol_stroke()) {
    if (!mixed_line_symbol_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_symbol_stroke()) {
    if (!scatter_symbol_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_shadow()) {
    if (!default_trend_line_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_stroke()) {
    if (!default_trend_line_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_default_trendline_equation_opacity()) {
    if (!default_trendline_equation_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_default_trendline_equation_paragraph_style_index()) {
    if (!default_trendline_equation_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_default_trendline_r_squared_opacity()) {
    if (!default_trendline_r_squared_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_default_trendline_r_squared_paragraph_style_index()) {
    if (!default_trendline_r_squared_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_area_value_label_position()) {
    if (!area_value_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_bar_value_label_position()) {
    if (!bar_value_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_value_label_position()) {
    if (!bubble_value_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_default_value_label_position()) {
    if (!default_value_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_line_value_label_position()) {
    if (!line_value_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_area_value_label_position()) {
    if (!mixed_area_value_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_column_value_label_position()) {
    if (!mixed_column_value_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_line_value_label_position()) {
    if (!mixed_line_value_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_value_label_position()) {
    if (!scatter_value_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_stacked_area_value_label_position()) {
    if (!stacked_area_value_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_stacked_bar_value_label_position()) {
    if (!stacked_bar_value_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_default_value_label_spacing()) {
    if (!default_value_label_spacing_->IsInitialized()) return false;
  }
  return true;
}

void ChartSeriesStylePropertyChangeSetArchive::InternalSwap(ChartSeriesStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  swap(_has_bits_[2], other->_has_bits_[2]);
  swap(_has_bits_[3], other->_has_bits_[3]);
  swap(_has_bits_[4], other->_has_bits_[4]);
  swap(_has_bits_[5], other->_has_bits_[5]);
  swap(_has_bits_[6], other->_has_bits_[6]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChartSeriesStylePropertyChangeSetArchive, default_value_label_spacing_undefined_)
      + sizeof(ChartSeriesStylePropertyChangeSetArchive::default_value_label_spacing_undefined_)
      - PROTOBUF_FIELD_OFFSET(ChartSeriesStylePropertyChangeSetArchive, default_callout_line_end_line_end_)>(
          reinterpret_cast<char*>(&default_callout_line_end_line_end_),
          reinterpret_cast<char*>(&other->default_callout_line_end_line_end_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChartSeriesStylePropertyChangeSetArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[20]);
}

// ===================================================================

class ChartStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<ChartStylePropertyChangeSetArchive>()._has_bits_);
  static const ::TSSSOS::SpecDoubleArchive& default3d_chart_opacity(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default3d_chart_opacity(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_default3d_chart_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static const ::TSCHSOS::SpecChart3dLightingPackageArchive& area3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_area3d_lighting_package(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_area3d_lighting_package_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static const ::TSCHSOS::SpecChart3dLightingPackageArchive& bar3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_bar3d_lighting_package(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_bar3d_lighting_package_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static const ::TSCHSOS::SpecChart3dLightingPackageArchive& column3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_column3d_lighting_package(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_column3d_lighting_package_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static const ::TSCHSOS::SpecChart3dLightingPackageArchive& default3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default3d_lighting_package(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_default3d_lighting_package_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static const ::TSCHSOS::SpecChart3dLightingPackageArchive& line3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_line3d_lighting_package(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_line3d_lighting_package_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static const ::TSCHSOS::SpecChart3dLightingPackageArchive& pie3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_pie3d_lighting_package(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_pie3d_lighting_package_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static const ::TSDSOS::SpecFillArchive& default_background_fill(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_background_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_default_background_fill_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static const ::TSDSOS::SpecStrokeArchive& default_background_stroke(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_background_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_default_background_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_border_opacity(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_border_opacity(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_default_border_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static const ::TSDSOS::SpecShadowArchive& default_border_shadow(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_border_shadow(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_default_border_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static const ::TSDSOS::SpecStrokeArchive& default_border_stroke(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_border_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_default_border_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_combine_layers(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_combine_layers(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_default_combine_layers_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_data_set_name_paragraph_style_index(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_data_set_name_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_default_data_set_name_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static const ::TSDSOS::SpecFillArchive& default_grid_background_fill(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_grid_background_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_default_grid_background_fill_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_grid_background_opacity(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_grid_background_opacity(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_default_grid_background_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_inter_bar_gap(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_inter_bar_gap(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_default_inter_bar_gap_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_inter_set_gap(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_inter_set_gap(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_default_inter_set_gap_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 256u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_rounded_corner_outer_end_only(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_rounded_corner_outer_end_only(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_default_rounded_corner_outer_end_only_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 512u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_rounded_corner_radius(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_rounded_corner_radius(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_default_rounded_corner_radius_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1024u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_border(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_border(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_default_show_border_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2048u;
  }
  static const ::TSSSOS::SpecColorArchive& default_title_color(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_title_color(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_default_title_color_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4096u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_title_paragraph_style_index(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_title_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_default_title_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8192u;
  }
};

const ::TSSSOS::SpecDoubleArchive&
ChartStylePropertyChangeSetArchive::_Internal::default3d_chart_opacity(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->default3d_chart_opacity_;
}
const ::TSCHSOS::SpecChart3dLightingPackageArchive&
ChartStylePropertyChangeSetArchive::_Internal::area3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->area3d_lighting_package_;
}
const ::TSCHSOS::SpecChart3dLightingPackageArchive&
ChartStylePropertyChangeSetArchive::_Internal::bar3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->bar3d_lighting_package_;
}
const ::TSCHSOS::SpecChart3dLightingPackageArchive&
ChartStylePropertyChangeSetArchive::_Internal::column3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->column3d_lighting_package_;
}
const ::TSCHSOS::SpecChart3dLightingPackageArchive&
ChartStylePropertyChangeSetArchive::_Internal::default3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->default3d_lighting_package_;
}
const ::TSCHSOS::SpecChart3dLightingPackageArchive&
ChartStylePropertyChangeSetArchive::_Internal::line3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->line3d_lighting_package_;
}
const ::TSCHSOS::SpecChart3dLightingPackageArchive&
ChartStylePropertyChangeSetArchive::_Internal::pie3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->pie3d_lighting_package_;
}
const ::TSDSOS::SpecFillArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_background_fill(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->default_background_fill_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_background_stroke(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->default_background_stroke_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_border_opacity(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->default_border_opacity_;
}
const ::TSDSOS::SpecShadowArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_border_shadow(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->default_border_shadow_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_border_stroke(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->default_border_stroke_;
}
const ::TSSSOS::SpecBoolArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_combine_layers(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->default_combine_layers_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_data_set_name_paragraph_style_index(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->default_data_set_name_paragraph_style_index_;
}
const ::TSDSOS::SpecFillArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_grid_background_fill(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->default_grid_background_fill_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_grid_background_opacity(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->default_grid_background_opacity_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_inter_bar_gap(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->default_inter_bar_gap_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_inter_set_gap(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->default_inter_set_gap_;
}
const ::TSSSOS::SpecBoolArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_rounded_corner_outer_end_only(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->default_rounded_corner_outer_end_only_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_rounded_corner_radius(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->default_rounded_corner_radius_;
}
const ::TSSSOS::SpecBoolArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_show_border(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->default_show_border_;
}
const ::TSSSOS::SpecColorArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_title_color(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->default_title_color_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_title_paragraph_style_index(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->default_title_paragraph_style_index_;
}
void ChartStylePropertyChangeSetArchive::clear_default3d_chart_opacity() {
  if (default3d_chart_opacity_ != nullptr) default3d_chart_opacity_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void ChartStylePropertyChangeSetArchive::clear_default_background_fill() {
  if (default_background_fill_ != nullptr) default_background_fill_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
void ChartStylePropertyChangeSetArchive::clear_default_background_stroke() {
  if (default_background_stroke_ != nullptr) default_background_stroke_->Clear();
  _has_bits_[0] &= ~0x00000100u;
}
void ChartStylePropertyChangeSetArchive::clear_default_border_opacity() {
  if (default_border_opacity_ != nullptr) default_border_opacity_->Clear();
  _has_bits_[0] &= ~0x00000200u;
}
void ChartStylePropertyChangeSetArchive::clear_default_border_shadow() {
  if (default_border_shadow_ != nullptr) default_border_shadow_->Clear();
  _has_bits_[0] &= ~0x00000400u;
}
void ChartStylePropertyChangeSetArchive::clear_default_border_stroke() {
  if (default_border_stroke_ != nullptr) default_border_stroke_->Clear();
  _has_bits_[0] &= ~0x00000800u;
}
void ChartStylePropertyChangeSetArchive::clear_default_combine_layers() {
  if (default_combine_layers_ != nullptr) default_combine_layers_->Clear();
  _has_bits_[0] &= ~0x00001000u;
}
void ChartStylePropertyChangeSetArchive::clear_default_data_set_name_paragraph_style_index() {
  if (default_data_set_name_paragraph_style_index_ != nullptr) default_data_set_name_paragraph_style_index_->Clear();
  _has_bits_[0] &= ~0x00002000u;
}
void ChartStylePropertyChangeSetArchive::clear_default_grid_background_fill() {
  if (default_grid_background_fill_ != nullptr) default_grid_background_fill_->Clear();
  _has_bits_[0] &= ~0x00004000u;
}
void ChartStylePropertyChangeSetArchive::clear_default_grid_background_opacity() {
  if (default_grid_background_opacity_ != nullptr) default_grid_background_opacity_->Clear();
  _has_bits_[0] &= ~0x00008000u;
}
void ChartStylePropertyChangeSetArchive::clear_default_inter_bar_gap() {
  if (default_inter_bar_gap_ != nullptr) default_inter_bar_gap_->Clear();
  _has_bits_[0] &= ~0x00010000u;
}
void ChartStylePropertyChangeSetArchive::clear_default_inter_set_gap() {
  if (default_inter_set_gap_ != nullptr) default_inter_set_gap_->Clear();
  _has_bits_[0] &= ~0x00020000u;
}
void ChartStylePropertyChangeSetArchive::clear_default_rounded_corner_outer_end_only() {
  if (default_rounded_corner_outer_end_only_ != nullptr) default_rounded_corner_outer_end_only_->Clear();
  _has_bits_[0] &= ~0x00040000u;
}
void ChartStylePropertyChangeSetArchive::clear_default_rounded_corner_radius() {
  if (default_rounded_corner_radius_ != nullptr) default_rounded_corner_radius_->Clear();
  _has_bits_[0] &= ~0x00080000u;
}
void ChartStylePropertyChangeSetArchive::clear_default_show_border() {
  if (default_show_border_ != nullptr) default_show_border_->Clear();
  _has_bits_[0] &= ~0x00100000u;
}
void ChartStylePropertyChangeSetArchive::clear_default_title_color() {
  if (default_title_color_ != nullptr) default_title_color_->Clear();
  _has_bits_[0] &= ~0x00200000u;
}
void ChartStylePropertyChangeSetArchive::clear_default_title_paragraph_style_index() {
  if (default_title_paragraph_style_index_ != nullptr) default_title_paragraph_style_index_->Clear();
  _has_bits_[0] &= ~0x00400000u;
}
ChartStylePropertyChangeSetArchive::ChartStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.ChartStylePropertyChangeSetArchive)
}
ChartStylePropertyChangeSetArchive::ChartStylePropertyChangeSetArchive(const ChartStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_default3d_chart_opacity()) {
    default3d_chart_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from.default3d_chart_opacity_);
  } else {
    default3d_chart_opacity_ = nullptr;
  }
  if (from._internal_has_area3d_lighting_package()) {
    area3d_lighting_package_ = new ::TSCHSOS::SpecChart3dLightingPackageArchive(*from.area3d_lighting_package_);
  } else {
    area3d_lighting_package_ = nullptr;
  }
  if (from._internal_has_bar3d_lighting_package()) {
    bar3d_lighting_package_ = new ::TSCHSOS::SpecChart3dLightingPackageArchive(*from.bar3d_lighting_package_);
  } else {
    bar3d_lighting_package_ = nullptr;
  }
  if (from._internal_has_column3d_lighting_package()) {
    column3d_lighting_package_ = new ::TSCHSOS::SpecChart3dLightingPackageArchive(*from.column3d_lighting_package_);
  } else {
    column3d_lighting_package_ = nullptr;
  }
  if (from._internal_has_default3d_lighting_package()) {
    default3d_lighting_package_ = new ::TSCHSOS::SpecChart3dLightingPackageArchive(*from.default3d_lighting_package_);
  } else {
    default3d_lighting_package_ = nullptr;
  }
  if (from._internal_has_line3d_lighting_package()) {
    line3d_lighting_package_ = new ::TSCHSOS::SpecChart3dLightingPackageArchive(*from.line3d_lighting_package_);
  } else {
    line3d_lighting_package_ = nullptr;
  }
  if (from._internal_has_pie3d_lighting_package()) {
    pie3d_lighting_package_ = new ::TSCHSOS::SpecChart3dLightingPackageArchive(*from.pie3d_lighting_package_);
  } else {
    pie3d_lighting_package_ = nullptr;
  }
  if (from._internal_has_default_background_fill()) {
    default_background_fill_ = new ::TSDSOS::SpecFillArchive(*from.default_background_fill_);
  } else {
    default_background_fill_ = nullptr;
  }
  if (from._internal_has_default_background_stroke()) {
    default_background_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.default_background_stroke_);
  } else {
    default_background_stroke_ = nullptr;
  }
  if (from._internal_has_default_border_opacity()) {
    default_border_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from.default_border_opacity_);
  } else {
    default_border_opacity_ = nullptr;
  }
  if (from._internal_has_default_border_shadow()) {
    default_border_shadow_ = new ::TSDSOS::SpecShadowArchive(*from.default_border_shadow_);
  } else {
    default_border_shadow_ = nullptr;
  }
  if (from._internal_has_default_border_stroke()) {
    default_border_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from.default_border_stroke_);
  } else {
    default_border_stroke_ = nullptr;
  }
  if (from._internal_has_default_combine_layers()) {
    default_combine_layers_ = new ::TSSSOS::SpecBoolArchive(*from.default_combine_layers_);
  } else {
    default_combine_layers_ = nullptr;
  }
  if (from._internal_has_default_data_set_name_paragraph_style_index()) {
    default_data_set_name_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.default_data_set_name_paragraph_style_index_);
  } else {
    default_data_set_name_paragraph_style_index_ = nullptr;
  }
  if (from._internal_has_default_grid_background_fill()) {
    default_grid_background_fill_ = new ::TSDSOS::SpecFillArchive(*from.default_grid_background_fill_);
  } else {
    default_grid_background_fill_ = nullptr;
  }
  if (from._internal_has_default_grid_background_opacity()) {
    default_grid_background_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from.default_grid_background_opacity_);
  } else {
    default_grid_background_opacity_ = nullptr;
  }
  if (from._internal_has_default_inter_bar_gap()) {
    default_inter_bar_gap_ = new ::TSSSOS::SpecDoubleArchive(*from.default_inter_bar_gap_);
  } else {
    default_inter_bar_gap_ = nullptr;
  }
  if (from._internal_has_default_inter_set_gap()) {
    default_inter_set_gap_ = new ::TSSSOS::SpecDoubleArchive(*from.default_inter_set_gap_);
  } else {
    default_inter_set_gap_ = nullptr;
  }
  if (from._internal_has_default_rounded_corner_outer_end_only()) {
    default_rounded_corner_outer_end_only_ = new ::TSSSOS::SpecBoolArchive(*from.default_rounded_corner_outer_end_only_);
  } else {
    default_rounded_corner_outer_end_only_ = nullptr;
  }
  if (from._internal_has_default_rounded_corner_radius()) {
    default_rounded_corner_radius_ = new ::TSSSOS::SpecDoubleArchive(*from.default_rounded_corner_radius_);
  } else {
    default_rounded_corner_radius_ = nullptr;
  }
  if (from._internal_has_default_show_border()) {
    default_show_border_ = new ::TSSSOS::SpecBoolArchive(*from.default_show_border_);
  } else {
    default_show_border_ = nullptr;
  }
  if (from._internal_has_default_title_color()) {
    default_title_color_ = new ::TSSSOS::SpecColorArchive(*from.default_title_color_);
  } else {
    default_title_color_ = nullptr;
  }
  if (from._internal_has_default_title_paragraph_style_index()) {
    default_title_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from.default_title_paragraph_style_index_);
  } else {
    default_title_paragraph_style_index_ = nullptr;
  }
  ::memcpy(&default3d_chart_opacity_undefined_, &from.default3d_chart_opacity_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&default_title_paragraph_style_index_undefined_) -
    reinterpret_cast<char*>(&default3d_chart_opacity_undefined_)) + sizeof(default_title_paragraph_style_index_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.ChartStylePropertyChangeSetArchive)
}

void ChartStylePropertyChangeSetArchive::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&default3d_chart_opacity_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&default_title_paragraph_style_index_undefined_) -
    reinterpret_cast<char*>(&default3d_chart_opacity_)) + sizeof(default_title_paragraph_style_index_undefined_));
}

ChartStylePropertyChangeSetArchive::~ChartStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.ChartStylePropertyChangeSetArchive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChartStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete default3d_chart_opacity_;
  if (this != internal_default_instance()) delete area3d_lighting_package_;
  if (this != internal_default_instance()) delete bar3d_lighting_package_;
  if (this != internal_default_instance()) delete column3d_lighting_package_;
  if (this != internal_default_instance()) delete default3d_lighting_package_;
  if (this != internal_default_instance()) delete line3d_lighting_package_;
  if (this != internal_default_instance()) delete pie3d_lighting_package_;
  if (this != internal_default_instance()) delete default_background_fill_;
  if (this != internal_default_instance()) delete default_background_stroke_;
  if (this != internal_default_instance()) delete default_border_opacity_;
  if (this != internal_default_instance()) delete default_border_shadow_;
  if (this != internal_default_instance()) delete default_border_stroke_;
  if (this != internal_default_instance()) delete default_combine_layers_;
  if (this != internal_default_instance()) delete default_data_set_name_paragraph_style_index_;
  if (this != internal_default_instance()) delete default_grid_background_fill_;
  if (this != internal_default_instance()) delete default_grid_background_opacity_;
  if (this != internal_default_instance()) delete default_inter_bar_gap_;
  if (this != internal_default_instance()) delete default_inter_set_gap_;
  if (this != internal_default_instance()) delete default_rounded_corner_outer_end_only_;
  if (this != internal_default_instance()) delete default_rounded_corner_radius_;
  if (this != internal_default_instance()) delete default_show_border_;
  if (this != internal_default_instance()) delete default_title_color_;
  if (this != internal_default_instance()) delete default_title_paragraph_style_index_;
}

void ChartStylePropertyChangeSetArchive::ArenaDtor(void* object) {
  ChartStylePropertyChangeSetArchive* _this = reinterpret_cast< ChartStylePropertyChangeSetArchive* >(object);
  (void)_this;
}
void ChartStylePropertyChangeSetArchive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChartStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ChartStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.ChartStylePropertyChangeSetArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(default3d_chart_opacity_ != nullptr);
      default3d_chart_opacity_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(area3d_lighting_package_ != nullptr);
      area3d_lighting_package_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(bar3d_lighting_package_ != nullptr);
      bar3d_lighting_package_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(column3d_lighting_package_ != nullptr);
      column3d_lighting_package_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(default3d_lighting_package_ != nullptr);
      default3d_lighting_package_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(line3d_lighting_package_ != nullptr);
      line3d_lighting_package_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(pie3d_lighting_package_ != nullptr);
      pie3d_lighting_package_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(default_background_fill_ != nullptr);
      default_background_fill_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(default_background_stroke_ != nullptr);
      default_background_stroke_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(default_border_opacity_ != nullptr);
      default_border_opacity_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(default_border_shadow_ != nullptr);
      default_border_shadow_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(default_border_stroke_ != nullptr);
      default_border_stroke_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(default_combine_layers_ != nullptr);
      default_combine_layers_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(default_data_set_name_paragraph_style_index_ != nullptr);
      default_data_set_name_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(default_grid_background_fill_ != nullptr);
      default_grid_background_fill_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(default_grid_background_opacity_ != nullptr);
      default_grid_background_opacity_->Clear();
    }
  }
  if (cached_has_bits & 0x007f0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(default_inter_bar_gap_ != nullptr);
      default_inter_bar_gap_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(default_inter_set_gap_ != nullptr);
      default_inter_set_gap_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(default_rounded_corner_outer_end_only_ != nullptr);
      default_rounded_corner_outer_end_only_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(default_rounded_corner_radius_ != nullptr);
      default_rounded_corner_radius_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(default_show_border_ != nullptr);
      default_show_border_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(default_title_color_ != nullptr);
      default_title_color_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(default_title_paragraph_style_index_ != nullptr);
      default_title_paragraph_style_index_->Clear();
    }
  }
  default3d_chart_opacity_undefined_ = false;
  if (cached_has_bits & 0xff000000u) {
    ::memset(&area3d_lighting_package_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_background_stroke_undefined_) -
        reinterpret_cast<char*>(&area3d_lighting_package_undefined_)) + sizeof(default_background_stroke_undefined_));
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&default_border_opacity_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_inter_bar_gap_undefined_) -
        reinterpret_cast<char*>(&default_border_opacity_undefined_)) + sizeof(default_inter_bar_gap_undefined_));
  }
  if (cached_has_bits & 0x00003f00u) {
    ::memset(&default_inter_set_gap_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_title_paragraph_style_index_undefined_) -
        reinterpret_cast<char*>(&default_inter_set_gap_undefined_)) + sizeof(default_title_paragraph_style_index_undefined_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChartStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSSSOS.SpecDoubleArchive default3d_chart_opacity = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default3d_chart_opacity(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default3d_chart_opacity_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_default3d_chart_opacity_undefined(&_has_bits_);
          default3d_chart_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dLightingPackageArchive area3d_lighting_package = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_area3d_lighting_package(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool area3d_lighting_package_undefined = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_area3d_lighting_package_undefined(&_has_bits_);
          area3d_lighting_package_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dLightingPackageArchive bar3d_lighting_package = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar3d_lighting_package(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool bar3d_lighting_package_undefined = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_bar3d_lighting_package_undefined(&_has_bits_);
          bar3d_lighting_package_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dLightingPackageArchive column3d_lighting_package = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_column3d_lighting_package(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool column3d_lighting_package_undefined = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_column3d_lighting_package_undefined(&_has_bits_);
          column3d_lighting_package_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dLightingPackageArchive default3d_lighting_package = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_default3d_lighting_package(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default3d_lighting_package_undefined = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_default3d_lighting_package_undefined(&_has_bits_);
          default3d_lighting_package_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dLightingPackageArchive line3d_lighting_package = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_line3d_lighting_package(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool line3d_lighting_package_undefined = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_line3d_lighting_package_undefined(&_has_bits_);
          line3d_lighting_package_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dLightingPackageArchive pie3d_lighting_package = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie3d_lighting_package(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pie3d_lighting_package_undefined = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_pie3d_lighting_package_undefined(&_has_bits_);
          pie3d_lighting_package_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive default_background_fill = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_background_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_background_fill_undefined = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_default_background_fill_undefined(&_has_bits_);
          default_background_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive default_background_stroke = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_background_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_background_stroke_undefined = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_default_background_stroke_undefined(&_has_bits_);
          default_background_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_border_opacity = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_border_opacity(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_border_opacity_undefined = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_default_border_opacity_undefined(&_has_bits_);
          default_border_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive default_border_shadow = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_border_shadow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_border_shadow_undefined = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_default_border_shadow_undefined(&_has_bits_);
          default_border_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive default_border_stroke = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_border_stroke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_border_stroke_undefined = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_default_border_stroke_undefined(&_has_bits_);
          default_border_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_combine_layers = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_combine_layers(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_combine_layers_undefined = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_default_combine_layers_undefined(&_has_bits_);
          default_combine_layers_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_data_set_name_paragraph_style_index = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_data_set_name_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_data_set_name_paragraph_style_index_undefined = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_default_data_set_name_paragraph_style_index_undefined(&_has_bits_);
          default_data_set_name_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive default_grid_background_fill = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_grid_background_fill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_grid_background_fill_undefined = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_default_grid_background_fill_undefined(&_has_bits_);
          default_grid_background_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_grid_background_opacity = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_grid_background_opacity(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_grid_background_opacity_undefined = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          _Internal::set_has_default_grid_background_opacity_undefined(&_has_bits_);
          default_grid_background_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_inter_bar_gap = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_inter_bar_gap(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_inter_bar_gap_undefined = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_default_inter_bar_gap_undefined(&_has_bits_);
          default_inter_bar_gap_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_inter_set_gap = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_inter_set_gap(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_inter_set_gap_undefined = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_default_inter_set_gap_undefined(&_has_bits_);
          default_inter_set_gap_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_rounded_corner_outer_end_only = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_rounded_corner_outer_end_only(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_rounded_corner_outer_end_only_undefined = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_default_rounded_corner_outer_end_only_undefined(&_has_bits_);
          default_rounded_corner_outer_end_only_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_rounded_corner_radius = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_rounded_corner_radius(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_rounded_corner_radius_undefined = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_default_rounded_corner_radius_undefined(&_has_bits_);
          default_rounded_corner_radius_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_border = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_border(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_show_border_undefined = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_default_show_border_undefined(&_has_bits_);
          default_show_border_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecColorArchive default_title_color = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_title_color(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_title_color_undefined = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_default_title_color_undefined(&_has_bits_);
          default_title_color_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_title_paragraph_style_index = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_title_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool default_title_paragraph_style_index_undefined = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_default_title_paragraph_style_index_undefined(&_has_bits_);
          default_title_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChartStylePropertyChangeSetArchive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.ChartStylePropertyChangeSetArchive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default3d_chart_opacity = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::default3d_chart_opacity(this), target, stream);
  }

  // optional bool default3d_chart_opacity_undefined = 2;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_default3d_chart_opacity_undefined(), target);
  }

  // optional .TSCHSOS.SpecChart3dLightingPackageArchive area3d_lighting_package = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::area3d_lighting_package(this), target, stream);
  }

  // optional bool area3d_lighting_package_undefined = 4;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_area3d_lighting_package_undefined(), target);
  }

  // optional .TSCHSOS.SpecChart3dLightingPackageArchive bar3d_lighting_package = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::bar3d_lighting_package(this), target, stream);
  }

  // optional bool bar3d_lighting_package_undefined = 6;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_bar3d_lighting_package_undefined(), target);
  }

  // optional .TSCHSOS.SpecChart3dLightingPackageArchive column3d_lighting_package = 7;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::column3d_lighting_package(this), target, stream);
  }

  // optional bool column3d_lighting_package_undefined = 8;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_column3d_lighting_package_undefined(), target);
  }

  // optional .TSCHSOS.SpecChart3dLightingPackageArchive default3d_lighting_package = 9;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::default3d_lighting_package(this), target, stream);
  }

  // optional bool default3d_lighting_package_undefined = 10;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_default3d_lighting_package_undefined(), target);
  }

  // optional .TSCHSOS.SpecChart3dLightingPackageArchive line3d_lighting_package = 11;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::line3d_lighting_package(this), target, stream);
  }

  // optional bool line3d_lighting_package_undefined = 12;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->_internal_line3d_lighting_package_undefined(), target);
  }

  // optional .TSCHSOS.SpecChart3dLightingPackageArchive pie3d_lighting_package = 13;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::pie3d_lighting_package(this), target, stream);
  }

  // optional bool pie3d_lighting_package_undefined = 14;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(14, this->_internal_pie3d_lighting_package_undefined(), target);
  }

  // optional .TSDSOS.SpecFillArchive default_background_fill = 15;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        15, _Internal::default_background_fill(this), target, stream);
  }

  // optional bool default_background_fill_undefined = 16;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(16, this->_internal_default_background_fill_undefined(), target);
  }

  // optional .TSDSOS.SpecStrokeArchive default_background_stroke = 17;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        17, _Internal::default_background_stroke(this), target, stream);
  }

  // optional bool default_background_stroke_undefined = 18;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(18, this->_internal_default_background_stroke_undefined(), target);
  }

  // optional .TSSSOS.SpecDoubleArchive default_border_opacity = 19;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        19, _Internal::default_border_opacity(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_border_opacity_undefined = 20;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(20, this->_internal_default_border_opacity_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecShadowArchive default_border_shadow = 21;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        21, _Internal::default_border_shadow(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_border_shadow_undefined = 22;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(22, this->_internal_default_border_shadow_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecStrokeArchive default_border_stroke = 23;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        23, _Internal::default_border_stroke(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_border_stroke_undefined = 24;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(24, this->_internal_default_border_stroke_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive default_combine_layers = 25;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        25, _Internal::default_combine_layers(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_combine_layers_undefined = 26;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(26, this->_internal_default_combine_layers_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_data_set_name_paragraph_style_index = 27;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        27, _Internal::default_data_set_name_paragraph_style_index(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_data_set_name_paragraph_style_index_undefined = 28;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(28, this->_internal_default_data_set_name_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSDSOS.SpecFillArchive default_grid_background_fill = 29;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        29, _Internal::default_grid_background_fill(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_grid_background_fill_undefined = 30;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(30, this->_internal_default_grid_background_fill_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_grid_background_opacity = 31;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        31, _Internal::default_grid_background_opacity(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_grid_background_opacity_undefined = 32;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(32, this->_internal_default_grid_background_opacity_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_inter_bar_gap = 33;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        33, _Internal::default_inter_bar_gap(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_inter_bar_gap_undefined = 34;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(34, this->_internal_default_inter_bar_gap_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_inter_set_gap = 35;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        35, _Internal::default_inter_set_gap(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_inter_set_gap_undefined = 36;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(36, this->_internal_default_inter_set_gap_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive default_rounded_corner_outer_end_only = 37;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        37, _Internal::default_rounded_corner_outer_end_only(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_rounded_corner_outer_end_only_undefined = 38;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(38, this->_internal_default_rounded_corner_outer_end_only_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_rounded_corner_radius = 39;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        39, _Internal::default_rounded_corner_radius(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_rounded_corner_radius_undefined = 40;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(40, this->_internal_default_rounded_corner_radius_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive default_show_border = 41;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        41, _Internal::default_show_border(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_show_border_undefined = 42;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(42, this->_internal_default_show_border_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecColorArchive default_title_color = 43;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        43, _Internal::default_title_color(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_title_color_undefined = 44;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(44, this->_internal_default_title_color_undefined(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_title_paragraph_style_index = 45;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        45, _Internal::default_title_paragraph_style_index(this), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool default_title_paragraph_style_index_undefined = 46;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(46, this->_internal_default_title_paragraph_style_index_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.ChartStylePropertyChangeSetArchive)
  return target;
}

size_t ChartStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.ChartStylePropertyChangeSetArchive)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSSSOS.SpecDoubleArchive default3d_chart_opacity = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default3d_chart_opacity_);
    }

    // optional .TSCHSOS.SpecChart3dLightingPackageArchive area3d_lighting_package = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area3d_lighting_package_);
    }

    // optional .TSCHSOS.SpecChart3dLightingPackageArchive bar3d_lighting_package = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bar3d_lighting_package_);
    }

    // optional .TSCHSOS.SpecChart3dLightingPackageArchive column3d_lighting_package = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *column3d_lighting_package_);
    }

    // optional .TSCHSOS.SpecChart3dLightingPackageArchive default3d_lighting_package = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default3d_lighting_package_);
    }

    // optional .TSCHSOS.SpecChart3dLightingPackageArchive line3d_lighting_package = 11;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *line3d_lighting_package_);
    }

    // optional .TSCHSOS.SpecChart3dLightingPackageArchive pie3d_lighting_package = 13;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pie3d_lighting_package_);
    }

    // optional .TSDSOS.SpecFillArchive default_background_fill = 15;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_background_fill_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSDSOS.SpecStrokeArchive default_background_stroke = 17;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_background_stroke_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_border_opacity = 19;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_border_opacity_);
    }

    // optional .TSDSOS.SpecShadowArchive default_border_shadow = 21;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_border_shadow_);
    }

    // optional .TSDSOS.SpecStrokeArchive default_border_stroke = 23;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_border_stroke_);
    }

    // optional .TSSSOS.SpecBoolArchive default_combine_layers = 25;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_combine_layers_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_data_set_name_paragraph_style_index = 27;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_data_set_name_paragraph_style_index_);
    }

    // optional .TSDSOS.SpecFillArchive default_grid_background_fill = 29;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_grid_background_fill_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_grid_background_opacity = 31;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_grid_background_opacity_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSSSOS.SpecDoubleArchive default_inter_bar_gap = 33;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_inter_bar_gap_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_inter_set_gap = 35;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_inter_set_gap_);
    }

    // optional .TSSSOS.SpecBoolArchive default_rounded_corner_outer_end_only = 37;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_rounded_corner_outer_end_only_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_rounded_corner_radius = 39;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_rounded_corner_radius_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_border = 41;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_show_border_);
    }

    // optional .TSSSOS.SpecColorArchive default_title_color = 43;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_title_color_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_title_paragraph_style_index = 45;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_title_paragraph_style_index_);
    }

    // optional bool default3d_chart_opacity_undefined = 2;
    if (cached_has_bits & 0x00800000u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool area3d_lighting_package_undefined = 4;
    if (cached_has_bits & 0x01000000u) {
      total_size += 1 + 1;
    }

    // optional bool bar3d_lighting_package_undefined = 6;
    if (cached_has_bits & 0x02000000u) {
      total_size += 1 + 1;
    }

    // optional bool column3d_lighting_package_undefined = 8;
    if (cached_has_bits & 0x04000000u) {
      total_size += 1 + 1;
    }

    // optional bool default3d_lighting_package_undefined = 10;
    if (cached_has_bits & 0x08000000u) {
      total_size += 1 + 1;
    }

    // optional bool line3d_lighting_package_undefined = 12;
    if (cached_has_bits & 0x10000000u) {
      total_size += 1 + 1;
    }

    // optional bool pie3d_lighting_package_undefined = 14;
    if (cached_has_bits & 0x20000000u) {
      total_size += 1 + 1;
    }

    // optional bool default_background_fill_undefined = 16;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_background_stroke_undefined = 18;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + 1;
    }

  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool default_border_opacity_undefined = 20;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 1;
    }

    // optional bool default_border_shadow_undefined = 22;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 1;
    }

    // optional bool default_border_stroke_undefined = 24;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool default_combine_layers_undefined = 26;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

    // optional bool default_data_set_name_paragraph_style_index_undefined = 28;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional bool default_grid_background_fill_undefined = 30;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional bool default_grid_background_opacity_undefined = 32;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool default_inter_bar_gap_undefined = 34;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00003f00u) {
    // optional bool default_inter_set_gap_undefined = 36;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool default_rounded_corner_outer_end_only_undefined = 38;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool default_rounded_corner_radius_undefined = 40;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool default_show_border_undefined = 42;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool default_title_color_undefined = 44;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional bool default_title_paragraph_style_index_undefined = 46;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChartStylePropertyChangeSetArchive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSCHSOS.ChartStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, this);
  const ChartStylePropertyChangeSetArchive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChartStylePropertyChangeSetArchive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSCHSOS.ChartStylePropertyChangeSetArchive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSCHSOS.ChartStylePropertyChangeSetArchive)
    MergeFrom(*source);
  }
}

void ChartStylePropertyChangeSetArchive::MergeFrom(const ChartStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.ChartStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_default3d_chart_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default3d_chart_opacity());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_area3d_lighting_package()->::TSCHSOS::SpecChart3dLightingPackageArchive::MergeFrom(from._internal_area3d_lighting_package());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_bar3d_lighting_package()->::TSCHSOS::SpecChart3dLightingPackageArchive::MergeFrom(from._internal_bar3d_lighting_package());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_column3d_lighting_package()->::TSCHSOS::SpecChart3dLightingPackageArchive::MergeFrom(from._internal_column3d_lighting_package());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_default3d_lighting_package()->::TSCHSOS::SpecChart3dLightingPackageArchive::MergeFrom(from._internal_default3d_lighting_package());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_line3d_lighting_package()->::TSCHSOS::SpecChart3dLightingPackageArchive::MergeFrom(from._internal_line3d_lighting_package());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_pie3d_lighting_package()->::TSCHSOS::SpecChart3dLightingPackageArchive::MergeFrom(from._internal_pie3d_lighting_package());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_default_background_fill()->::TSDSOS::SpecFillArchive::MergeFrom(from._internal_default_background_fill());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_default_background_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_default_background_stroke());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_default_border_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default_border_opacity());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_default_border_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(from._internal_default_border_shadow());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_default_border_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(from._internal_default_border_stroke());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_default_combine_layers()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_default_combine_layers());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_default_data_set_name_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_data_set_name_paragraph_style_index());
    }
    if (cached_has_bits & 0x00004000u) {
      _internal_mutable_default_grid_background_fill()->::TSDSOS::SpecFillArchive::MergeFrom(from._internal_default_grid_background_fill());
    }
    if (cached_has_bits & 0x00008000u) {
      _internal_mutable_default_grid_background_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default_grid_background_opacity());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _internal_mutable_default_inter_bar_gap()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default_inter_bar_gap());
    }
    if (cached_has_bits & 0x00020000u) {
      _internal_mutable_default_inter_set_gap()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default_inter_set_gap());
    }
    if (cached_has_bits & 0x00040000u) {
      _internal_mutable_default_rounded_corner_outer_end_only()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_default_rounded_corner_outer_end_only());
    }
    if (cached_has_bits & 0x00080000u) {
      _internal_mutable_default_rounded_corner_radius()->::TSSSOS::SpecDoubleArchive::MergeFrom(from._internal_default_rounded_corner_radius());
    }
    if (cached_has_bits & 0x00100000u) {
      _internal_mutable_default_show_border()->::TSSSOS::SpecBoolArchive::MergeFrom(from._internal_default_show_border());
    }
    if (cached_has_bits & 0x00200000u) {
      _internal_mutable_default_title_color()->::TSSSOS::SpecColorArchive::MergeFrom(from._internal_default_title_color());
    }
    if (cached_has_bits & 0x00400000u) {
      _internal_mutable_default_title_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(from._internal_default_title_paragraph_style_index());
    }
    if (cached_has_bits & 0x00800000u) {
      default3d_chart_opacity_undefined_ = from.default3d_chart_opacity_undefined_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      area3d_lighting_package_undefined_ = from.area3d_lighting_package_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      bar3d_lighting_package_undefined_ = from.bar3d_lighting_package_undefined_;
    }
    if (cached_has_bits & 0x04000000u) {
      column3d_lighting_package_undefined_ = from.column3d_lighting_package_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      default3d_lighting_package_undefined_ = from.default3d_lighting_package_undefined_;
    }
    if (cached_has_bits & 0x10000000u) {
      line3d_lighting_package_undefined_ = from.line3d_lighting_package_undefined_;
    }
    if (cached_has_bits & 0x20000000u) {
      pie3d_lighting_package_undefined_ = from.pie3d_lighting_package_undefined_;
    }
    if (cached_has_bits & 0x40000000u) {
      default_background_fill_undefined_ = from.default_background_fill_undefined_;
    }
    if (cached_has_bits & 0x80000000u) {
      default_background_stroke_undefined_ = from.default_background_stroke_undefined_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      default_border_opacity_undefined_ = from.default_border_opacity_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      default_border_shadow_undefined_ = from.default_border_shadow_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      default_border_stroke_undefined_ = from.default_border_stroke_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      default_combine_layers_undefined_ = from.default_combine_layers_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      default_data_set_name_paragraph_style_index_undefined_ = from.default_data_set_name_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      default_grid_background_fill_undefined_ = from.default_grid_background_fill_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      default_grid_background_opacity_undefined_ = from.default_grid_background_opacity_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      default_inter_bar_gap_undefined_ = from.default_inter_bar_gap_undefined_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00003f00u) {
    if (cached_has_bits & 0x00000100u) {
      default_inter_set_gap_undefined_ = from.default_inter_set_gap_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      default_rounded_corner_outer_end_only_undefined_ = from.default_rounded_corner_outer_end_only_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      default_rounded_corner_radius_undefined_ = from.default_rounded_corner_radius_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      default_show_border_undefined_ = from.default_show_border_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      default_title_color_undefined_ = from.default_title_color_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      default_title_paragraph_style_index_undefined_ = from.default_title_paragraph_style_index_undefined_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
}

void ChartStylePropertyChangeSetArchive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSCHSOS.ChartStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChartStylePropertyChangeSetArchive::CopyFrom(const ChartStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.ChartStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChartStylePropertyChangeSetArchive::IsInitialized() const {
  if (_internal_has_default3d_chart_opacity()) {
    if (!default3d_chart_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_area3d_lighting_package()) {
    if (!area3d_lighting_package_->IsInitialized()) return false;
  }
  if (_internal_has_bar3d_lighting_package()) {
    if (!bar3d_lighting_package_->IsInitialized()) return false;
  }
  if (_internal_has_column3d_lighting_package()) {
    if (!column3d_lighting_package_->IsInitialized()) return false;
  }
  if (_internal_has_default3d_lighting_package()) {
    if (!default3d_lighting_package_->IsInitialized()) return false;
  }
  if (_internal_has_line3d_lighting_package()) {
    if (!line3d_lighting_package_->IsInitialized()) return false;
  }
  if (_internal_has_pie3d_lighting_package()) {
    if (!pie3d_lighting_package_->IsInitialized()) return false;
  }
  if (_internal_has_default_background_fill()) {
    if (!default_background_fill_->IsInitialized()) return false;
  }
  if (_internal_has_default_background_stroke()) {
    if (!default_background_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_default_border_opacity()) {
    if (!default_border_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_default_border_shadow()) {
    if (!default_border_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_default_border_stroke()) {
    if (!default_border_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_default_combine_layers()) {
    if (!default_combine_layers_->IsInitialized()) return false;
  }
  if (_internal_has_default_data_set_name_paragraph_style_index()) {
    if (!default_data_set_name_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_default_grid_background_fill()) {
    if (!default_grid_background_fill_->IsInitialized()) return false;
  }
  if (_internal_has_default_grid_background_opacity()) {
    if (!default_grid_background_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_default_inter_bar_gap()) {
    if (!default_inter_bar_gap_->IsInitialized()) return false;
  }
  if (_internal_has_default_inter_set_gap()) {
    if (!default_inter_set_gap_->IsInitialized()) return false;
  }
  if (_internal_has_default_rounded_corner_outer_end_only()) {
    if (!default_rounded_corner_outer_end_only_->IsInitialized()) return false;
  }
  if (_internal_has_default_rounded_corner_radius()) {
    if (!default_rounded_corner_radius_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_border()) {
    if (!default_show_border_->IsInitialized()) return false;
  }
  if (_internal_has_default_title_color()) {
    if (!default_title_color_->IsInitialized()) return false;
  }
  if (_internal_has_default_title_paragraph_style_index()) {
    if (!default_title_paragraph_style_index_->IsInitialized()) return false;
  }
  return true;
}

void ChartStylePropertyChangeSetArchive::InternalSwap(ChartStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChartStylePropertyChangeSetArchive, default_title_paragraph_style_index_undefined_)
      + sizeof(ChartStylePropertyChangeSetArchive::default_title_paragraph_style_index_undefined_)
      - PROTOBUF_FIELD_OFFSET(ChartStylePropertyChangeSetArchive, default3d_chart_opacity_)>(
          reinterpret_cast<char*>(&default3d_chart_opacity_),
          reinterpret_cast<char*>(&other->default3d_chart_opacity_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChartStylePropertyChangeSetArchive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[21]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace TSCHSOS
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecSetChart3dLightingPackageArchive* Arena::CreateMaybeMessage< ::TSCHSOS::SpecSetChart3dLightingPackageArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecSetChart3dLightingPackageArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecSetChart3dVectorArchive* Arena::CreateMaybeMessage< ::TSCHSOS::SpecSetChart3dVectorArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecSetChart3dVectorArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecSetChartErrorBarCustomDataArchive* Arena::CreateMaybeMessage< ::TSCHSOS::SpecSetChartErrorBarCustomDataArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecSetChartErrorBarCustomDataArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive* Arena::CreateMaybeMessage< ::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecSetFormatObjectArchive* Arena::CreateMaybeMessage< ::TSCHSOS::SpecSetFormatObjectArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecSetFormatObjectArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecSetNumberFormatArchive* Arena::CreateMaybeMessage< ::TSCHSOS::SpecSetNumberFormatArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecSetNumberFormatArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecChart3dLightingPackageArchive* Arena::CreateMaybeMessage< ::TSCHSOS::SpecChart3dLightingPackageArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecChart3dLightingPackageArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecChart3dVectorArchive* Arena::CreateMaybeMessage< ::TSCHSOS::SpecChart3dVectorArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecChart3dVectorArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecChartErrorBarCustomDataArchive* Arena::CreateMaybeMessage< ::TSCHSOS::SpecChartErrorBarCustomDataArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecChartErrorBarCustomDataArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive* Arena::CreateMaybeMessage< ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecFormatObjectArchive* Arena::CreateMaybeMessage< ::TSCHSOS::SpecFormatObjectArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecFormatObjectArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecNumberFormatArchive* Arena::CreateMaybeMessage< ::TSCHSOS::SpecNumberFormatArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecNumberFormatArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive* Arena::CreateMaybeMessage< ::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::ChartAxisStylePropertyChangeSetArchive* Arena::CreateMaybeMessage< ::TSCHSOS::ChartAxisStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::ChartAxisStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::ChartLegendNonStylePropertyChangeSetArchive* Arena::CreateMaybeMessage< ::TSCHSOS::ChartLegendNonStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::ChartLegendNonStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::ChartLegendStylePropertyChangeSetArchive* Arena::CreateMaybeMessage< ::TSCHSOS::ChartLegendStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::ChartLegendStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::ChartNonStylePropertyChangeSetArchive* Arena::CreateMaybeMessage< ::TSCHSOS::ChartNonStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::ChartNonStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive* Arena::CreateMaybeMessage< ::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive* Arena::CreateMaybeMessage< ::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive* Arena::CreateMaybeMessage< ::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive* Arena::CreateMaybeMessage< ::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::ChartStylePropertyChangeSetArchive* Arena::CreateMaybeMessage< ::TSCHSOS::ChartStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::ChartStylePropertyChangeSetArchive >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
