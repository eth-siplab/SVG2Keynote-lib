// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TSACommandArchives.sos.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_TSACommandArchives_2esos_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_TSACommandArchives_2esos_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "TSAArchives.sos.pb.h"
#include "TSKArchives.pb.h"
#include "TSPMessages.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_TSACommandArchives_2esos_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_TSACommandArchives_2esos_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_TSACommandArchives_2esos_2eproto;
namespace TSASOS {
class CommandReapplyMasterArchive;
struct CommandReapplyMasterArchiveDefaultTypeInternal;
extern CommandReapplyMasterArchiveDefaultTypeInternal _CommandReapplyMasterArchive_default_instance_;
class InducedVerifyDrawableZOrdersWithServerCommandArchive;
struct InducedVerifyDrawableZOrdersWithServerCommandArchiveDefaultTypeInternal;
extern InducedVerifyDrawableZOrdersWithServerCommandArchiveDefaultTypeInternal _InducedVerifyDrawableZOrdersWithServerCommandArchive_default_instance_;
class PropagateMasterChangeCommandArchive;
struct PropagateMasterChangeCommandArchiveDefaultTypeInternal;
extern PropagateMasterChangeCommandArchiveDefaultTypeInternal _PropagateMasterChangeCommandArchive_default_instance_;
class VerifyDocumentWithServerCommandArchive;
struct VerifyDocumentWithServerCommandArchiveDefaultTypeInternal;
extern VerifyDocumentWithServerCommandArchiveDefaultTypeInternal _VerifyDocumentWithServerCommandArchive_default_instance_;
class VerifyDrawableZOrdersWithServerCommandArchive;
struct VerifyDrawableZOrdersWithServerCommandArchiveDefaultTypeInternal;
extern VerifyDrawableZOrdersWithServerCommandArchiveDefaultTypeInternal _VerifyDrawableZOrdersWithServerCommandArchive_default_instance_;
class VerifyObjectsWithServerCommandArchive;
struct VerifyObjectsWithServerCommandArchiveDefaultTypeInternal;
extern VerifyObjectsWithServerCommandArchiveDefaultTypeInternal _VerifyObjectsWithServerCommandArchive_default_instance_;
class VerifyTransformHistoryWithServerCommandArchive;
struct VerifyTransformHistoryWithServerCommandArchiveDefaultTypeInternal;
extern VerifyTransformHistoryWithServerCommandArchiveDefaultTypeInternal _VerifyTransformHistoryWithServerCommandArchive_default_instance_;
}  // namespace TSASOS
PROTOBUF_NAMESPACE_OPEN
template<> ::TSASOS::CommandReapplyMasterArchive* Arena::CreateMaybeMessage<::TSASOS::CommandReapplyMasterArchive>(Arena*);
template<> ::TSASOS::InducedVerifyDrawableZOrdersWithServerCommandArchive* Arena::CreateMaybeMessage<::TSASOS::InducedVerifyDrawableZOrdersWithServerCommandArchive>(Arena*);
template<> ::TSASOS::PropagateMasterChangeCommandArchive* Arena::CreateMaybeMessage<::TSASOS::PropagateMasterChangeCommandArchive>(Arena*);
template<> ::TSASOS::VerifyDocumentWithServerCommandArchive* Arena::CreateMaybeMessage<::TSASOS::VerifyDocumentWithServerCommandArchive>(Arena*);
template<> ::TSASOS::VerifyDrawableZOrdersWithServerCommandArchive* Arena::CreateMaybeMessage<::TSASOS::VerifyDrawableZOrdersWithServerCommandArchive>(Arena*);
template<> ::TSASOS::VerifyObjectsWithServerCommandArchive* Arena::CreateMaybeMessage<::TSASOS::VerifyObjectsWithServerCommandArchive>(Arena*);
template<> ::TSASOS::VerifyTransformHistoryWithServerCommandArchive* Arena::CreateMaybeMessage<::TSASOS::VerifyTransformHistoryWithServerCommandArchive>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace TSASOS {

// ===================================================================

class InducedVerifyDrawableZOrdersWithServerCommandArchive PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSASOS.InducedVerifyDrawableZOrdersWithServerCommandArchive) */ {
 public:
  inline InducedVerifyDrawableZOrdersWithServerCommandArchive() : InducedVerifyDrawableZOrdersWithServerCommandArchive(nullptr) {}
  ~InducedVerifyDrawableZOrdersWithServerCommandArchive() override;
  explicit constexpr InducedVerifyDrawableZOrdersWithServerCommandArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InducedVerifyDrawableZOrdersWithServerCommandArchive(const InducedVerifyDrawableZOrdersWithServerCommandArchive& from);
  InducedVerifyDrawableZOrdersWithServerCommandArchive(InducedVerifyDrawableZOrdersWithServerCommandArchive&& from) noexcept
    : InducedVerifyDrawableZOrdersWithServerCommandArchive() {
    *this = ::std::move(from);
  }

  inline InducedVerifyDrawableZOrdersWithServerCommandArchive& operator=(const InducedVerifyDrawableZOrdersWithServerCommandArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline InducedVerifyDrawableZOrdersWithServerCommandArchive& operator=(InducedVerifyDrawableZOrdersWithServerCommandArchive&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InducedVerifyDrawableZOrdersWithServerCommandArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const InducedVerifyDrawableZOrdersWithServerCommandArchive* internal_default_instance() {
    return reinterpret_cast<const InducedVerifyDrawableZOrdersWithServerCommandArchive*>(
               &_InducedVerifyDrawableZOrdersWithServerCommandArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(InducedVerifyDrawableZOrdersWithServerCommandArchive& a, InducedVerifyDrawableZOrdersWithServerCommandArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(InducedVerifyDrawableZOrdersWithServerCommandArchive* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InducedVerifyDrawableZOrdersWithServerCommandArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InducedVerifyDrawableZOrdersWithServerCommandArchive* New() const final {
    return CreateMaybeMessage<InducedVerifyDrawableZOrdersWithServerCommandArchive>(nullptr);
  }

  InducedVerifyDrawableZOrdersWithServerCommandArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InducedVerifyDrawableZOrdersWithServerCommandArchive>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InducedVerifyDrawableZOrdersWithServerCommandArchive& from);
  void MergeFrom(const InducedVerifyDrawableZOrdersWithServerCommandArchive& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InducedVerifyDrawableZOrdersWithServerCommandArchive* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSASOS.InducedVerifyDrawableZOrdersWithServerCommandArchive";
  }
  protected:
  explicit InducedVerifyDrawableZOrdersWithServerCommandArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerDrawableZOrderListsFieldNumber = 2,
    kSuperFieldNumber = 1,
    kServerDrawableZOrderListsUndefinedFieldNumber = 3,
  };
  // repeated .TSASOS.DrawableZOrderListArchive server_drawable_z_order_lists = 2;
  int server_drawable_z_order_lists_size() const;
  private:
  int _internal_server_drawable_z_order_lists_size() const;
  public:
  void clear_server_drawable_z_order_lists();
  ::TSASOS::DrawableZOrderListArchive* mutable_server_drawable_z_order_lists(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSASOS::DrawableZOrderListArchive >*
      mutable_server_drawable_z_order_lists();
  private:
  const ::TSASOS::DrawableZOrderListArchive& _internal_server_drawable_z_order_lists(int index) const;
  ::TSASOS::DrawableZOrderListArchive* _internal_add_server_drawable_z_order_lists();
  public:
  const ::TSASOS::DrawableZOrderListArchive& server_drawable_z_order_lists(int index) const;
  ::TSASOS::DrawableZOrderListArchive* add_server_drawable_z_order_lists();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSASOS::DrawableZOrderListArchive >&
      server_drawable_z_order_lists() const;

  // required .TSK.CommandArchive super = 1;
  bool has_super() const;
  private:
  bool _internal_has_super() const;
  public:
  void clear_super();
  const ::TSK::CommandArchive& super() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::TSK::CommandArchive* release_super();
  ::TSK::CommandArchive* mutable_super();
  void set_allocated_super(::TSK::CommandArchive* super);
  private:
  const ::TSK::CommandArchive& _internal_super() const;
  ::TSK::CommandArchive* _internal_mutable_super();
  public:
  void unsafe_arena_set_allocated_super(
      ::TSK::CommandArchive* super);
  ::TSK::CommandArchive* unsafe_arena_release_super();

  // optional bool server_drawable_z_order_lists_undefined = 3;
  bool has_server_drawable_z_order_lists_undefined() const;
  private:
  bool _internal_has_server_drawable_z_order_lists_undefined() const;
  public:
  void clear_server_drawable_z_order_lists_undefined();
  bool server_drawable_z_order_lists_undefined() const;
  void set_server_drawable_z_order_lists_undefined(bool value);
  private:
  bool _internal_server_drawable_z_order_lists_undefined() const;
  void _internal_set_server_drawable_z_order_lists_undefined(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TSASOS.InducedVerifyDrawableZOrdersWithServerCommandArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSASOS::DrawableZOrderListArchive > server_drawable_z_order_lists_;
  ::TSK::CommandArchive* super_;
  bool server_drawable_z_order_lists_undefined_;
  friend struct ::TableStruct_TSACommandArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class PropagateMasterChangeCommandArchive PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSASOS.PropagateMasterChangeCommandArchive) */ {
 public:
  inline PropagateMasterChangeCommandArchive() : PropagateMasterChangeCommandArchive(nullptr) {}
  ~PropagateMasterChangeCommandArchive() override;
  explicit constexpr PropagateMasterChangeCommandArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PropagateMasterChangeCommandArchive(const PropagateMasterChangeCommandArchive& from);
  PropagateMasterChangeCommandArchive(PropagateMasterChangeCommandArchive&& from) noexcept
    : PropagateMasterChangeCommandArchive() {
    *this = ::std::move(from);
  }

  inline PropagateMasterChangeCommandArchive& operator=(const PropagateMasterChangeCommandArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline PropagateMasterChangeCommandArchive& operator=(PropagateMasterChangeCommandArchive&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PropagateMasterChangeCommandArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const PropagateMasterChangeCommandArchive* internal_default_instance() {
    return reinterpret_cast<const PropagateMasterChangeCommandArchive*>(
               &_PropagateMasterChangeCommandArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PropagateMasterChangeCommandArchive& a, PropagateMasterChangeCommandArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(PropagateMasterChangeCommandArchive* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PropagateMasterChangeCommandArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PropagateMasterChangeCommandArchive* New() const final {
    return CreateMaybeMessage<PropagateMasterChangeCommandArchive>(nullptr);
  }

  PropagateMasterChangeCommandArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PropagateMasterChangeCommandArchive>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PropagateMasterChangeCommandArchive& from);
  void MergeFrom(const PropagateMasterChangeCommandArchive& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PropagateMasterChangeCommandArchive* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSASOS.PropagateMasterChangeCommandArchive";
  }
  protected:
  explicit PropagateMasterChangeCommandArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUuidsOfPreviouslyVisitedObjectsFieldNumber = 2,
    kSuperFieldNumber = 1,
    kUuidsOfPreviouslyVisitedObjectsUndefinedFieldNumber = 3,
  };
  // repeated .TSP.UUID uuids_of_previously_visited_objects = 2;
  int uuids_of_previously_visited_objects_size() const;
  private:
  int _internal_uuids_of_previously_visited_objects_size() const;
  public:
  void clear_uuids_of_previously_visited_objects();
  ::TSP::UUID* mutable_uuids_of_previously_visited_objects(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::UUID >*
      mutable_uuids_of_previously_visited_objects();
  private:
  const ::TSP::UUID& _internal_uuids_of_previously_visited_objects(int index) const;
  ::TSP::UUID* _internal_add_uuids_of_previously_visited_objects();
  public:
  const ::TSP::UUID& uuids_of_previously_visited_objects(int index) const;
  ::TSP::UUID* add_uuids_of_previously_visited_objects();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::UUID >&
      uuids_of_previously_visited_objects() const;

  // required .TSK.CommandArchive super = 1;
  bool has_super() const;
  private:
  bool _internal_has_super() const;
  public:
  void clear_super();
  const ::TSK::CommandArchive& super() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::TSK::CommandArchive* release_super();
  ::TSK::CommandArchive* mutable_super();
  void set_allocated_super(::TSK::CommandArchive* super);
  private:
  const ::TSK::CommandArchive& _internal_super() const;
  ::TSK::CommandArchive* _internal_mutable_super();
  public:
  void unsafe_arena_set_allocated_super(
      ::TSK::CommandArchive* super);
  ::TSK::CommandArchive* unsafe_arena_release_super();

  // optional bool uuids_of_previously_visited_objects_undefined = 3;
  bool has_uuids_of_previously_visited_objects_undefined() const;
  private:
  bool _internal_has_uuids_of_previously_visited_objects_undefined() const;
  public:
  void clear_uuids_of_previously_visited_objects_undefined();
  bool uuids_of_previously_visited_objects_undefined() const;
  void set_uuids_of_previously_visited_objects_undefined(bool value);
  private:
  bool _internal_uuids_of_previously_visited_objects_undefined() const;
  void _internal_set_uuids_of_previously_visited_objects_undefined(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TSASOS.PropagateMasterChangeCommandArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::UUID > uuids_of_previously_visited_objects_;
  ::TSK::CommandArchive* super_;
  bool uuids_of_previously_visited_objects_undefined_;
  friend struct ::TableStruct_TSACommandArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class CommandReapplyMasterArchive PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSASOS.CommandReapplyMasterArchive) */ {
 public:
  inline CommandReapplyMasterArchive() : CommandReapplyMasterArchive(nullptr) {}
  ~CommandReapplyMasterArchive() override;
  explicit constexpr CommandReapplyMasterArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CommandReapplyMasterArchive(const CommandReapplyMasterArchive& from);
  CommandReapplyMasterArchive(CommandReapplyMasterArchive&& from) noexcept
    : CommandReapplyMasterArchive() {
    *this = ::std::move(from);
  }

  inline CommandReapplyMasterArchive& operator=(const CommandReapplyMasterArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommandReapplyMasterArchive& operator=(CommandReapplyMasterArchive&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CommandReapplyMasterArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const CommandReapplyMasterArchive* internal_default_instance() {
    return reinterpret_cast<const CommandReapplyMasterArchive*>(
               &_CommandReapplyMasterArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CommandReapplyMasterArchive& a, CommandReapplyMasterArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(CommandReapplyMasterArchive* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommandReapplyMasterArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CommandReapplyMasterArchive* New() const final {
    return CreateMaybeMessage<CommandReapplyMasterArchive>(nullptr);
  }

  CommandReapplyMasterArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CommandReapplyMasterArchive>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CommandReapplyMasterArchive& from);
  void MergeFrom(const CommandReapplyMasterArchive& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommandReapplyMasterArchive* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSASOS.CommandReapplyMasterArchive";
  }
  protected:
  explicit CommandReapplyMasterArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsToVisitFieldNumber = 2,
    kSuperFieldNumber = 1,
    kItemsToVisitUndefinedFieldNumber = 3,
    kIsUndoFieldNumber = 4,
  };
  // repeated .TSP.UUID items_to_visit = 2;
  int items_to_visit_size() const;
  private:
  int _internal_items_to_visit_size() const;
  public:
  void clear_items_to_visit();
  ::TSP::UUID* mutable_items_to_visit(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::UUID >*
      mutable_items_to_visit();
  private:
  const ::TSP::UUID& _internal_items_to_visit(int index) const;
  ::TSP::UUID* _internal_add_items_to_visit();
  public:
  const ::TSP::UUID& items_to_visit(int index) const;
  ::TSP::UUID* add_items_to_visit();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::UUID >&
      items_to_visit() const;

  // required .TSK.CommandArchive super = 1;
  bool has_super() const;
  private:
  bool _internal_has_super() const;
  public:
  void clear_super();
  const ::TSK::CommandArchive& super() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::TSK::CommandArchive* release_super();
  ::TSK::CommandArchive* mutable_super();
  void set_allocated_super(::TSK::CommandArchive* super);
  private:
  const ::TSK::CommandArchive& _internal_super() const;
  ::TSK::CommandArchive* _internal_mutable_super();
  public:
  void unsafe_arena_set_allocated_super(
      ::TSK::CommandArchive* super);
  ::TSK::CommandArchive* unsafe_arena_release_super();

  // optional bool items_to_visit_undefined = 3;
  bool has_items_to_visit_undefined() const;
  private:
  bool _internal_has_items_to_visit_undefined() const;
  public:
  void clear_items_to_visit_undefined();
  bool items_to_visit_undefined() const;
  void set_items_to_visit_undefined(bool value);
  private:
  bool _internal_items_to_visit_undefined() const;
  void _internal_set_items_to_visit_undefined(bool value);
  public:

  // required bool is_undo = 4;
  bool has_is_undo() const;
  private:
  bool _internal_has_is_undo() const;
  public:
  void clear_is_undo();
  bool is_undo() const;
  void set_is_undo(bool value);
  private:
  bool _internal_is_undo() const;
  void _internal_set_is_undo(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TSASOS.CommandReapplyMasterArchive)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::UUID > items_to_visit_;
  ::TSK::CommandArchive* super_;
  bool items_to_visit_undefined_;
  bool is_undo_;
  friend struct ::TableStruct_TSACommandArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class VerifyDocumentWithServerCommandArchive PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSASOS.VerifyDocumentWithServerCommandArchive) */ {
 public:
  inline VerifyDocumentWithServerCommandArchive() : VerifyDocumentWithServerCommandArchive(nullptr) {}
  ~VerifyDocumentWithServerCommandArchive() override;
  explicit constexpr VerifyDocumentWithServerCommandArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  VerifyDocumentWithServerCommandArchive(const VerifyDocumentWithServerCommandArchive& from);
  VerifyDocumentWithServerCommandArchive(VerifyDocumentWithServerCommandArchive&& from) noexcept
    : VerifyDocumentWithServerCommandArchive() {
    *this = ::std::move(from);
  }

  inline VerifyDocumentWithServerCommandArchive& operator=(const VerifyDocumentWithServerCommandArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline VerifyDocumentWithServerCommandArchive& operator=(VerifyDocumentWithServerCommandArchive&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VerifyDocumentWithServerCommandArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const VerifyDocumentWithServerCommandArchive* internal_default_instance() {
    return reinterpret_cast<const VerifyDocumentWithServerCommandArchive*>(
               &_VerifyDocumentWithServerCommandArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(VerifyDocumentWithServerCommandArchive& a, VerifyDocumentWithServerCommandArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(VerifyDocumentWithServerCommandArchive* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VerifyDocumentWithServerCommandArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VerifyDocumentWithServerCommandArchive* New() const final {
    return CreateMaybeMessage<VerifyDocumentWithServerCommandArchive>(nullptr);
  }

  VerifyDocumentWithServerCommandArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VerifyDocumentWithServerCommandArchive>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VerifyDocumentWithServerCommandArchive& from);
  void MergeFrom(const VerifyDocumentWithServerCommandArchive& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VerifyDocumentWithServerCommandArchive* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSASOS.VerifyDocumentWithServerCommandArchive";
  }
  protected:
  explicit VerifyDocumentWithServerCommandArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuperFieldNumber = 1,
  };
  // required .TSK.CommandArchive super = 1;
  bool has_super() const;
  private:
  bool _internal_has_super() const;
  public:
  void clear_super();
  const ::TSK::CommandArchive& super() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::TSK::CommandArchive* release_super();
  ::TSK::CommandArchive* mutable_super();
  void set_allocated_super(::TSK::CommandArchive* super);
  private:
  const ::TSK::CommandArchive& _internal_super() const;
  ::TSK::CommandArchive* _internal_mutable_super();
  public:
  void unsafe_arena_set_allocated_super(
      ::TSK::CommandArchive* super);
  ::TSK::CommandArchive* unsafe_arena_release_super();

  // @@protoc_insertion_point(class_scope:TSASOS.VerifyDocumentWithServerCommandArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::TSK::CommandArchive* super_;
  friend struct ::TableStruct_TSACommandArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class VerifyDrawableZOrdersWithServerCommandArchive PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSASOS.VerifyDrawableZOrdersWithServerCommandArchive) */ {
 public:
  inline VerifyDrawableZOrdersWithServerCommandArchive() : VerifyDrawableZOrdersWithServerCommandArchive(nullptr) {}
  ~VerifyDrawableZOrdersWithServerCommandArchive() override;
  explicit constexpr VerifyDrawableZOrdersWithServerCommandArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  VerifyDrawableZOrdersWithServerCommandArchive(const VerifyDrawableZOrdersWithServerCommandArchive& from);
  VerifyDrawableZOrdersWithServerCommandArchive(VerifyDrawableZOrdersWithServerCommandArchive&& from) noexcept
    : VerifyDrawableZOrdersWithServerCommandArchive() {
    *this = ::std::move(from);
  }

  inline VerifyDrawableZOrdersWithServerCommandArchive& operator=(const VerifyDrawableZOrdersWithServerCommandArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline VerifyDrawableZOrdersWithServerCommandArchive& operator=(VerifyDrawableZOrdersWithServerCommandArchive&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VerifyDrawableZOrdersWithServerCommandArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const VerifyDrawableZOrdersWithServerCommandArchive* internal_default_instance() {
    return reinterpret_cast<const VerifyDrawableZOrdersWithServerCommandArchive*>(
               &_VerifyDrawableZOrdersWithServerCommandArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(VerifyDrawableZOrdersWithServerCommandArchive& a, VerifyDrawableZOrdersWithServerCommandArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(VerifyDrawableZOrdersWithServerCommandArchive* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VerifyDrawableZOrdersWithServerCommandArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VerifyDrawableZOrdersWithServerCommandArchive* New() const final {
    return CreateMaybeMessage<VerifyDrawableZOrdersWithServerCommandArchive>(nullptr);
  }

  VerifyDrawableZOrdersWithServerCommandArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VerifyDrawableZOrdersWithServerCommandArchive>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VerifyDrawableZOrdersWithServerCommandArchive& from);
  void MergeFrom(const VerifyDrawableZOrdersWithServerCommandArchive& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VerifyDrawableZOrdersWithServerCommandArchive* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSASOS.VerifyDrawableZOrdersWithServerCommandArchive";
  }
  protected:
  explicit VerifyDrawableZOrdersWithServerCommandArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDrawableIdListFieldNumber = 2,
    kSuperFieldNumber = 1,
    kDrawableIdListUndefinedFieldNumber = 3,
  };
  // repeated .TSP.UUID drawable_id_list = 2;
  int drawable_id_list_size() const;
  private:
  int _internal_drawable_id_list_size() const;
  public:
  void clear_drawable_id_list();
  ::TSP::UUID* mutable_drawable_id_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::UUID >*
      mutable_drawable_id_list();
  private:
  const ::TSP::UUID& _internal_drawable_id_list(int index) const;
  ::TSP::UUID* _internal_add_drawable_id_list();
  public:
  const ::TSP::UUID& drawable_id_list(int index) const;
  ::TSP::UUID* add_drawable_id_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::UUID >&
      drawable_id_list() const;

  // required .TSK.CommandArchive super = 1;
  bool has_super() const;
  private:
  bool _internal_has_super() const;
  public:
  void clear_super();
  const ::TSK::CommandArchive& super() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::TSK::CommandArchive* release_super();
  ::TSK::CommandArchive* mutable_super();
  void set_allocated_super(::TSK::CommandArchive* super);
  private:
  const ::TSK::CommandArchive& _internal_super() const;
  ::TSK::CommandArchive* _internal_mutable_super();
  public:
  void unsafe_arena_set_allocated_super(
      ::TSK::CommandArchive* super);
  ::TSK::CommandArchive* unsafe_arena_release_super();

  // optional bool drawable_id_list_undefined = 3;
  bool has_drawable_id_list_undefined() const;
  private:
  bool _internal_has_drawable_id_list_undefined() const;
  public:
  void clear_drawable_id_list_undefined();
  bool drawable_id_list_undefined() const;
  void set_drawable_id_list_undefined(bool value);
  private:
  bool _internal_drawable_id_list_undefined() const;
  void _internal_set_drawable_id_list_undefined(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TSASOS.VerifyDrawableZOrdersWithServerCommandArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::UUID > drawable_id_list_;
  ::TSK::CommandArchive* super_;
  bool drawable_id_list_undefined_;
  friend struct ::TableStruct_TSACommandArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class VerifyObjectsWithServerCommandArchive PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSASOS.VerifyObjectsWithServerCommandArchive) */ {
 public:
  inline VerifyObjectsWithServerCommandArchive() : VerifyObjectsWithServerCommandArchive(nullptr) {}
  ~VerifyObjectsWithServerCommandArchive() override;
  explicit constexpr VerifyObjectsWithServerCommandArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  VerifyObjectsWithServerCommandArchive(const VerifyObjectsWithServerCommandArchive& from);
  VerifyObjectsWithServerCommandArchive(VerifyObjectsWithServerCommandArchive&& from) noexcept
    : VerifyObjectsWithServerCommandArchive() {
    *this = ::std::move(from);
  }

  inline VerifyObjectsWithServerCommandArchive& operator=(const VerifyObjectsWithServerCommandArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline VerifyObjectsWithServerCommandArchive& operator=(VerifyObjectsWithServerCommandArchive&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VerifyObjectsWithServerCommandArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const VerifyObjectsWithServerCommandArchive* internal_default_instance() {
    return reinterpret_cast<const VerifyObjectsWithServerCommandArchive*>(
               &_VerifyObjectsWithServerCommandArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(VerifyObjectsWithServerCommandArchive& a, VerifyObjectsWithServerCommandArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(VerifyObjectsWithServerCommandArchive* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VerifyObjectsWithServerCommandArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VerifyObjectsWithServerCommandArchive* New() const final {
    return CreateMaybeMessage<VerifyObjectsWithServerCommandArchive>(nullptr);
  }

  VerifyObjectsWithServerCommandArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VerifyObjectsWithServerCommandArchive>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VerifyObjectsWithServerCommandArchive& from);
  void MergeFrom(const VerifyObjectsWithServerCommandArchive& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VerifyObjectsWithServerCommandArchive* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSASOS.VerifyObjectsWithServerCommandArchive";
  }
  protected:
  explicit VerifyObjectsWithServerCommandArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdListFieldNumber = 2,
    kSuperFieldNumber = 1,
    kObjectIdListUndefinedFieldNumber = 3,
  };
  // repeated .TSP.UUID object_id_list = 2;
  int object_id_list_size() const;
  private:
  int _internal_object_id_list_size() const;
  public:
  void clear_object_id_list();
  ::TSP::UUID* mutable_object_id_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::UUID >*
      mutable_object_id_list();
  private:
  const ::TSP::UUID& _internal_object_id_list(int index) const;
  ::TSP::UUID* _internal_add_object_id_list();
  public:
  const ::TSP::UUID& object_id_list(int index) const;
  ::TSP::UUID* add_object_id_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::UUID >&
      object_id_list() const;

  // required .TSK.CommandArchive super = 1;
  bool has_super() const;
  private:
  bool _internal_has_super() const;
  public:
  void clear_super();
  const ::TSK::CommandArchive& super() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::TSK::CommandArchive* release_super();
  ::TSK::CommandArchive* mutable_super();
  void set_allocated_super(::TSK::CommandArchive* super);
  private:
  const ::TSK::CommandArchive& _internal_super() const;
  ::TSK::CommandArchive* _internal_mutable_super();
  public:
  void unsafe_arena_set_allocated_super(
      ::TSK::CommandArchive* super);
  ::TSK::CommandArchive* unsafe_arena_release_super();

  // optional bool object_id_list_undefined = 3;
  bool has_object_id_list_undefined() const;
  private:
  bool _internal_has_object_id_list_undefined() const;
  public:
  void clear_object_id_list_undefined();
  bool object_id_list_undefined() const;
  void set_object_id_list_undefined(bool value);
  private:
  bool _internal_object_id_list_undefined() const;
  void _internal_set_object_id_list_undefined(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TSASOS.VerifyObjectsWithServerCommandArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::UUID > object_id_list_;
  ::TSK::CommandArchive* super_;
  bool object_id_list_undefined_;
  friend struct ::TableStruct_TSACommandArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class VerifyTransformHistoryWithServerCommandArchive PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSASOS.VerifyTransformHistoryWithServerCommandArchive) */ {
 public:
  inline VerifyTransformHistoryWithServerCommandArchive() : VerifyTransformHistoryWithServerCommandArchive(nullptr) {}
  ~VerifyTransformHistoryWithServerCommandArchive() override;
  explicit constexpr VerifyTransformHistoryWithServerCommandArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  VerifyTransformHistoryWithServerCommandArchive(const VerifyTransformHistoryWithServerCommandArchive& from);
  VerifyTransformHistoryWithServerCommandArchive(VerifyTransformHistoryWithServerCommandArchive&& from) noexcept
    : VerifyTransformHistoryWithServerCommandArchive() {
    *this = ::std::move(from);
  }

  inline VerifyTransformHistoryWithServerCommandArchive& operator=(const VerifyTransformHistoryWithServerCommandArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline VerifyTransformHistoryWithServerCommandArchive& operator=(VerifyTransformHistoryWithServerCommandArchive&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VerifyTransformHistoryWithServerCommandArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const VerifyTransformHistoryWithServerCommandArchive* internal_default_instance() {
    return reinterpret_cast<const VerifyTransformHistoryWithServerCommandArchive*>(
               &_VerifyTransformHistoryWithServerCommandArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(VerifyTransformHistoryWithServerCommandArchive& a, VerifyTransformHistoryWithServerCommandArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(VerifyTransformHistoryWithServerCommandArchive* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VerifyTransformHistoryWithServerCommandArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VerifyTransformHistoryWithServerCommandArchive* New() const final {
    return CreateMaybeMessage<VerifyTransformHistoryWithServerCommandArchive>(nullptr);
  }

  VerifyTransformHistoryWithServerCommandArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VerifyTransformHistoryWithServerCommandArchive>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VerifyTransformHistoryWithServerCommandArchive& from);
  void MergeFrom(const VerifyTransformHistoryWithServerCommandArchive& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VerifyTransformHistoryWithServerCommandArchive* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSASOS.VerifyTransformHistoryWithServerCommandArchive";
  }
  protected:
  explicit VerifyTransformHistoryWithServerCommandArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuperFieldNumber = 1,
    kSequenceStartFieldNumber = 2,
    kSequenceEndFieldNumber = 3,
  };
  // required .TSK.CommandArchive super = 1;
  bool has_super() const;
  private:
  bool _internal_has_super() const;
  public:
  void clear_super();
  const ::TSK::CommandArchive& super() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::TSK::CommandArchive* release_super();
  ::TSK::CommandArchive* mutable_super();
  void set_allocated_super(::TSK::CommandArchive* super);
  private:
  const ::TSK::CommandArchive& _internal_super() const;
  ::TSK::CommandArchive* _internal_mutable_super();
  public:
  void unsafe_arena_set_allocated_super(
      ::TSK::CommandArchive* super);
  ::TSK::CommandArchive* unsafe_arena_release_super();

  // required int32 sequence_start = 2;
  bool has_sequence_start() const;
  private:
  bool _internal_has_sequence_start() const;
  public:
  void clear_sequence_start();
  ::PROTOBUF_NAMESPACE_ID::int32 sequence_start() const;
  void set_sequence_start(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sequence_start() const;
  void _internal_set_sequence_start(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 sequence_end = 3;
  bool has_sequence_end() const;
  private:
  bool _internal_has_sequence_end() const;
  public:
  void clear_sequence_end();
  ::PROTOBUF_NAMESPACE_ID::int32 sequence_end() const;
  void set_sequence_end(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sequence_end() const;
  void _internal_set_sequence_end(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:TSASOS.VerifyTransformHistoryWithServerCommandArchive)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::TSK::CommandArchive* super_;
  ::PROTOBUF_NAMESPACE_ID::int32 sequence_start_;
  ::PROTOBUF_NAMESPACE_ID::int32 sequence_end_;
  friend struct ::TableStruct_TSACommandArchives_2esos_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InducedVerifyDrawableZOrdersWithServerCommandArchive

// required .TSK.CommandArchive super = 1;
inline bool InducedVerifyDrawableZOrdersWithServerCommandArchive::_internal_has_super() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || super_ != nullptr);
  return value;
}
inline bool InducedVerifyDrawableZOrdersWithServerCommandArchive::has_super() const {
  return _internal_has_super();
}
inline const ::TSK::CommandArchive& InducedVerifyDrawableZOrdersWithServerCommandArchive::_internal_super() const {
  const ::TSK::CommandArchive* p = super_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSK::CommandArchive&>(
      ::TSK::_CommandArchive_default_instance_);
}
inline const ::TSK::CommandArchive& InducedVerifyDrawableZOrdersWithServerCommandArchive::super() const {
  // @@protoc_insertion_point(field_get:TSASOS.InducedVerifyDrawableZOrdersWithServerCommandArchive.super)
  return _internal_super();
}
inline void InducedVerifyDrawableZOrdersWithServerCommandArchive::unsafe_arena_set_allocated_super(
    ::TSK::CommandArchive* super) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(super_);
  }
  super_ = super;
  if (super) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSASOS.InducedVerifyDrawableZOrdersWithServerCommandArchive.super)
}
inline ::TSK::CommandArchive* InducedVerifyDrawableZOrdersWithServerCommandArchive::release_super() {
  _has_bits_[0] &= ~0x00000001u;
  ::TSK::CommandArchive* temp = super_;
  super_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::TSK::CommandArchive* InducedVerifyDrawableZOrdersWithServerCommandArchive::unsafe_arena_release_super() {
  // @@protoc_insertion_point(field_release:TSASOS.InducedVerifyDrawableZOrdersWithServerCommandArchive.super)
  _has_bits_[0] &= ~0x00000001u;
  ::TSK::CommandArchive* temp = super_;
  super_ = nullptr;
  return temp;
}
inline ::TSK::CommandArchive* InducedVerifyDrawableZOrdersWithServerCommandArchive::_internal_mutable_super() {
  _has_bits_[0] |= 0x00000001u;
  if (super_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSK::CommandArchive>(GetArena());
    super_ = p;
  }
  return super_;
}
inline ::TSK::CommandArchive* InducedVerifyDrawableZOrdersWithServerCommandArchive::mutable_super() {
  // @@protoc_insertion_point(field_mutable:TSASOS.InducedVerifyDrawableZOrdersWithServerCommandArchive.super)
  return _internal_mutable_super();
}
inline void InducedVerifyDrawableZOrdersWithServerCommandArchive::set_allocated_super(::TSK::CommandArchive* super) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(super_);
  }
  if (super) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(super)->GetArena();
    if (message_arena != submessage_arena) {
      super = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, super, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  super_ = super;
  // @@protoc_insertion_point(field_set_allocated:TSASOS.InducedVerifyDrawableZOrdersWithServerCommandArchive.super)
}

// repeated .TSASOS.DrawableZOrderListArchive server_drawable_z_order_lists = 2;
inline int InducedVerifyDrawableZOrdersWithServerCommandArchive::_internal_server_drawable_z_order_lists_size() const {
  return server_drawable_z_order_lists_.size();
}
inline int InducedVerifyDrawableZOrdersWithServerCommandArchive::server_drawable_z_order_lists_size() const {
  return _internal_server_drawable_z_order_lists_size();
}
inline ::TSASOS::DrawableZOrderListArchive* InducedVerifyDrawableZOrdersWithServerCommandArchive::mutable_server_drawable_z_order_lists(int index) {
  // @@protoc_insertion_point(field_mutable:TSASOS.InducedVerifyDrawableZOrdersWithServerCommandArchive.server_drawable_z_order_lists)
  return server_drawable_z_order_lists_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSASOS::DrawableZOrderListArchive >*
InducedVerifyDrawableZOrdersWithServerCommandArchive::mutable_server_drawable_z_order_lists() {
  // @@protoc_insertion_point(field_mutable_list:TSASOS.InducedVerifyDrawableZOrdersWithServerCommandArchive.server_drawable_z_order_lists)
  return &server_drawable_z_order_lists_;
}
inline const ::TSASOS::DrawableZOrderListArchive& InducedVerifyDrawableZOrdersWithServerCommandArchive::_internal_server_drawable_z_order_lists(int index) const {
  return server_drawable_z_order_lists_.Get(index);
}
inline const ::TSASOS::DrawableZOrderListArchive& InducedVerifyDrawableZOrdersWithServerCommandArchive::server_drawable_z_order_lists(int index) const {
  // @@protoc_insertion_point(field_get:TSASOS.InducedVerifyDrawableZOrdersWithServerCommandArchive.server_drawable_z_order_lists)
  return _internal_server_drawable_z_order_lists(index);
}
inline ::TSASOS::DrawableZOrderListArchive* InducedVerifyDrawableZOrdersWithServerCommandArchive::_internal_add_server_drawable_z_order_lists() {
  return server_drawable_z_order_lists_.Add();
}
inline ::TSASOS::DrawableZOrderListArchive* InducedVerifyDrawableZOrdersWithServerCommandArchive::add_server_drawable_z_order_lists() {
  // @@protoc_insertion_point(field_add:TSASOS.InducedVerifyDrawableZOrdersWithServerCommandArchive.server_drawable_z_order_lists)
  return _internal_add_server_drawable_z_order_lists();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSASOS::DrawableZOrderListArchive >&
InducedVerifyDrawableZOrdersWithServerCommandArchive::server_drawable_z_order_lists() const {
  // @@protoc_insertion_point(field_list:TSASOS.InducedVerifyDrawableZOrdersWithServerCommandArchive.server_drawable_z_order_lists)
  return server_drawable_z_order_lists_;
}

// optional bool server_drawable_z_order_lists_undefined = 3;
inline bool InducedVerifyDrawableZOrdersWithServerCommandArchive::_internal_has_server_drawable_z_order_lists_undefined() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool InducedVerifyDrawableZOrdersWithServerCommandArchive::has_server_drawable_z_order_lists_undefined() const {
  return _internal_has_server_drawable_z_order_lists_undefined();
}
inline void InducedVerifyDrawableZOrdersWithServerCommandArchive::clear_server_drawable_z_order_lists_undefined() {
  server_drawable_z_order_lists_undefined_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool InducedVerifyDrawableZOrdersWithServerCommandArchive::_internal_server_drawable_z_order_lists_undefined() const {
  return server_drawable_z_order_lists_undefined_;
}
inline bool InducedVerifyDrawableZOrdersWithServerCommandArchive::server_drawable_z_order_lists_undefined() const {
  // @@protoc_insertion_point(field_get:TSASOS.InducedVerifyDrawableZOrdersWithServerCommandArchive.server_drawable_z_order_lists_undefined)
  return _internal_server_drawable_z_order_lists_undefined();
}
inline void InducedVerifyDrawableZOrdersWithServerCommandArchive::_internal_set_server_drawable_z_order_lists_undefined(bool value) {
  _has_bits_[0] |= 0x00000002u;
  server_drawable_z_order_lists_undefined_ = value;
}
inline void InducedVerifyDrawableZOrdersWithServerCommandArchive::set_server_drawable_z_order_lists_undefined(bool value) {
  _internal_set_server_drawable_z_order_lists_undefined(value);
  // @@protoc_insertion_point(field_set:TSASOS.InducedVerifyDrawableZOrdersWithServerCommandArchive.server_drawable_z_order_lists_undefined)
}

// -------------------------------------------------------------------

// PropagateMasterChangeCommandArchive

// required .TSK.CommandArchive super = 1;
inline bool PropagateMasterChangeCommandArchive::_internal_has_super() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || super_ != nullptr);
  return value;
}
inline bool PropagateMasterChangeCommandArchive::has_super() const {
  return _internal_has_super();
}
inline const ::TSK::CommandArchive& PropagateMasterChangeCommandArchive::_internal_super() const {
  const ::TSK::CommandArchive* p = super_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSK::CommandArchive&>(
      ::TSK::_CommandArchive_default_instance_);
}
inline const ::TSK::CommandArchive& PropagateMasterChangeCommandArchive::super() const {
  // @@protoc_insertion_point(field_get:TSASOS.PropagateMasterChangeCommandArchive.super)
  return _internal_super();
}
inline void PropagateMasterChangeCommandArchive::unsafe_arena_set_allocated_super(
    ::TSK::CommandArchive* super) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(super_);
  }
  super_ = super;
  if (super) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSASOS.PropagateMasterChangeCommandArchive.super)
}
inline ::TSK::CommandArchive* PropagateMasterChangeCommandArchive::release_super() {
  _has_bits_[0] &= ~0x00000001u;
  ::TSK::CommandArchive* temp = super_;
  super_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::TSK::CommandArchive* PropagateMasterChangeCommandArchive::unsafe_arena_release_super() {
  // @@protoc_insertion_point(field_release:TSASOS.PropagateMasterChangeCommandArchive.super)
  _has_bits_[0] &= ~0x00000001u;
  ::TSK::CommandArchive* temp = super_;
  super_ = nullptr;
  return temp;
}
inline ::TSK::CommandArchive* PropagateMasterChangeCommandArchive::_internal_mutable_super() {
  _has_bits_[0] |= 0x00000001u;
  if (super_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSK::CommandArchive>(GetArena());
    super_ = p;
  }
  return super_;
}
inline ::TSK::CommandArchive* PropagateMasterChangeCommandArchive::mutable_super() {
  // @@protoc_insertion_point(field_mutable:TSASOS.PropagateMasterChangeCommandArchive.super)
  return _internal_mutable_super();
}
inline void PropagateMasterChangeCommandArchive::set_allocated_super(::TSK::CommandArchive* super) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(super_);
  }
  if (super) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(super)->GetArena();
    if (message_arena != submessage_arena) {
      super = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, super, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  super_ = super;
  // @@protoc_insertion_point(field_set_allocated:TSASOS.PropagateMasterChangeCommandArchive.super)
}

// repeated .TSP.UUID uuids_of_previously_visited_objects = 2;
inline int PropagateMasterChangeCommandArchive::_internal_uuids_of_previously_visited_objects_size() const {
  return uuids_of_previously_visited_objects_.size();
}
inline int PropagateMasterChangeCommandArchive::uuids_of_previously_visited_objects_size() const {
  return _internal_uuids_of_previously_visited_objects_size();
}
inline ::TSP::UUID* PropagateMasterChangeCommandArchive::mutable_uuids_of_previously_visited_objects(int index) {
  // @@protoc_insertion_point(field_mutable:TSASOS.PropagateMasterChangeCommandArchive.uuids_of_previously_visited_objects)
  return uuids_of_previously_visited_objects_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::UUID >*
PropagateMasterChangeCommandArchive::mutable_uuids_of_previously_visited_objects() {
  // @@protoc_insertion_point(field_mutable_list:TSASOS.PropagateMasterChangeCommandArchive.uuids_of_previously_visited_objects)
  return &uuids_of_previously_visited_objects_;
}
inline const ::TSP::UUID& PropagateMasterChangeCommandArchive::_internal_uuids_of_previously_visited_objects(int index) const {
  return uuids_of_previously_visited_objects_.Get(index);
}
inline const ::TSP::UUID& PropagateMasterChangeCommandArchive::uuids_of_previously_visited_objects(int index) const {
  // @@protoc_insertion_point(field_get:TSASOS.PropagateMasterChangeCommandArchive.uuids_of_previously_visited_objects)
  return _internal_uuids_of_previously_visited_objects(index);
}
inline ::TSP::UUID* PropagateMasterChangeCommandArchive::_internal_add_uuids_of_previously_visited_objects() {
  return uuids_of_previously_visited_objects_.Add();
}
inline ::TSP::UUID* PropagateMasterChangeCommandArchive::add_uuids_of_previously_visited_objects() {
  // @@protoc_insertion_point(field_add:TSASOS.PropagateMasterChangeCommandArchive.uuids_of_previously_visited_objects)
  return _internal_add_uuids_of_previously_visited_objects();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::UUID >&
PropagateMasterChangeCommandArchive::uuids_of_previously_visited_objects() const {
  // @@protoc_insertion_point(field_list:TSASOS.PropagateMasterChangeCommandArchive.uuids_of_previously_visited_objects)
  return uuids_of_previously_visited_objects_;
}

// optional bool uuids_of_previously_visited_objects_undefined = 3;
inline bool PropagateMasterChangeCommandArchive::_internal_has_uuids_of_previously_visited_objects_undefined() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PropagateMasterChangeCommandArchive::has_uuids_of_previously_visited_objects_undefined() const {
  return _internal_has_uuids_of_previously_visited_objects_undefined();
}
inline void PropagateMasterChangeCommandArchive::clear_uuids_of_previously_visited_objects_undefined() {
  uuids_of_previously_visited_objects_undefined_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool PropagateMasterChangeCommandArchive::_internal_uuids_of_previously_visited_objects_undefined() const {
  return uuids_of_previously_visited_objects_undefined_;
}
inline bool PropagateMasterChangeCommandArchive::uuids_of_previously_visited_objects_undefined() const {
  // @@protoc_insertion_point(field_get:TSASOS.PropagateMasterChangeCommandArchive.uuids_of_previously_visited_objects_undefined)
  return _internal_uuids_of_previously_visited_objects_undefined();
}
inline void PropagateMasterChangeCommandArchive::_internal_set_uuids_of_previously_visited_objects_undefined(bool value) {
  _has_bits_[0] |= 0x00000002u;
  uuids_of_previously_visited_objects_undefined_ = value;
}
inline void PropagateMasterChangeCommandArchive::set_uuids_of_previously_visited_objects_undefined(bool value) {
  _internal_set_uuids_of_previously_visited_objects_undefined(value);
  // @@protoc_insertion_point(field_set:TSASOS.PropagateMasterChangeCommandArchive.uuids_of_previously_visited_objects_undefined)
}

// -------------------------------------------------------------------

// CommandReapplyMasterArchive

// required .TSK.CommandArchive super = 1;
inline bool CommandReapplyMasterArchive::_internal_has_super() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || super_ != nullptr);
  return value;
}
inline bool CommandReapplyMasterArchive::has_super() const {
  return _internal_has_super();
}
inline const ::TSK::CommandArchive& CommandReapplyMasterArchive::_internal_super() const {
  const ::TSK::CommandArchive* p = super_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSK::CommandArchive&>(
      ::TSK::_CommandArchive_default_instance_);
}
inline const ::TSK::CommandArchive& CommandReapplyMasterArchive::super() const {
  // @@protoc_insertion_point(field_get:TSASOS.CommandReapplyMasterArchive.super)
  return _internal_super();
}
inline void CommandReapplyMasterArchive::unsafe_arena_set_allocated_super(
    ::TSK::CommandArchive* super) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(super_);
  }
  super_ = super;
  if (super) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSASOS.CommandReapplyMasterArchive.super)
}
inline ::TSK::CommandArchive* CommandReapplyMasterArchive::release_super() {
  _has_bits_[0] &= ~0x00000001u;
  ::TSK::CommandArchive* temp = super_;
  super_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::TSK::CommandArchive* CommandReapplyMasterArchive::unsafe_arena_release_super() {
  // @@protoc_insertion_point(field_release:TSASOS.CommandReapplyMasterArchive.super)
  _has_bits_[0] &= ~0x00000001u;
  ::TSK::CommandArchive* temp = super_;
  super_ = nullptr;
  return temp;
}
inline ::TSK::CommandArchive* CommandReapplyMasterArchive::_internal_mutable_super() {
  _has_bits_[0] |= 0x00000001u;
  if (super_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSK::CommandArchive>(GetArena());
    super_ = p;
  }
  return super_;
}
inline ::TSK::CommandArchive* CommandReapplyMasterArchive::mutable_super() {
  // @@protoc_insertion_point(field_mutable:TSASOS.CommandReapplyMasterArchive.super)
  return _internal_mutable_super();
}
inline void CommandReapplyMasterArchive::set_allocated_super(::TSK::CommandArchive* super) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(super_);
  }
  if (super) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(super)->GetArena();
    if (message_arena != submessage_arena) {
      super = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, super, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  super_ = super;
  // @@protoc_insertion_point(field_set_allocated:TSASOS.CommandReapplyMasterArchive.super)
}

// repeated .TSP.UUID items_to_visit = 2;
inline int CommandReapplyMasterArchive::_internal_items_to_visit_size() const {
  return items_to_visit_.size();
}
inline int CommandReapplyMasterArchive::items_to_visit_size() const {
  return _internal_items_to_visit_size();
}
inline ::TSP::UUID* CommandReapplyMasterArchive::mutable_items_to_visit(int index) {
  // @@protoc_insertion_point(field_mutable:TSASOS.CommandReapplyMasterArchive.items_to_visit)
  return items_to_visit_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::UUID >*
CommandReapplyMasterArchive::mutable_items_to_visit() {
  // @@protoc_insertion_point(field_mutable_list:TSASOS.CommandReapplyMasterArchive.items_to_visit)
  return &items_to_visit_;
}
inline const ::TSP::UUID& CommandReapplyMasterArchive::_internal_items_to_visit(int index) const {
  return items_to_visit_.Get(index);
}
inline const ::TSP::UUID& CommandReapplyMasterArchive::items_to_visit(int index) const {
  // @@protoc_insertion_point(field_get:TSASOS.CommandReapplyMasterArchive.items_to_visit)
  return _internal_items_to_visit(index);
}
inline ::TSP::UUID* CommandReapplyMasterArchive::_internal_add_items_to_visit() {
  return items_to_visit_.Add();
}
inline ::TSP::UUID* CommandReapplyMasterArchive::add_items_to_visit() {
  // @@protoc_insertion_point(field_add:TSASOS.CommandReapplyMasterArchive.items_to_visit)
  return _internal_add_items_to_visit();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::UUID >&
CommandReapplyMasterArchive::items_to_visit() const {
  // @@protoc_insertion_point(field_list:TSASOS.CommandReapplyMasterArchive.items_to_visit)
  return items_to_visit_;
}

// optional bool items_to_visit_undefined = 3;
inline bool CommandReapplyMasterArchive::_internal_has_items_to_visit_undefined() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CommandReapplyMasterArchive::has_items_to_visit_undefined() const {
  return _internal_has_items_to_visit_undefined();
}
inline void CommandReapplyMasterArchive::clear_items_to_visit_undefined() {
  items_to_visit_undefined_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CommandReapplyMasterArchive::_internal_items_to_visit_undefined() const {
  return items_to_visit_undefined_;
}
inline bool CommandReapplyMasterArchive::items_to_visit_undefined() const {
  // @@protoc_insertion_point(field_get:TSASOS.CommandReapplyMasterArchive.items_to_visit_undefined)
  return _internal_items_to_visit_undefined();
}
inline void CommandReapplyMasterArchive::_internal_set_items_to_visit_undefined(bool value) {
  _has_bits_[0] |= 0x00000002u;
  items_to_visit_undefined_ = value;
}
inline void CommandReapplyMasterArchive::set_items_to_visit_undefined(bool value) {
  _internal_set_items_to_visit_undefined(value);
  // @@protoc_insertion_point(field_set:TSASOS.CommandReapplyMasterArchive.items_to_visit_undefined)
}

// required bool is_undo = 4;
inline bool CommandReapplyMasterArchive::_internal_has_is_undo() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CommandReapplyMasterArchive::has_is_undo() const {
  return _internal_has_is_undo();
}
inline void CommandReapplyMasterArchive::clear_is_undo() {
  is_undo_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CommandReapplyMasterArchive::_internal_is_undo() const {
  return is_undo_;
}
inline bool CommandReapplyMasterArchive::is_undo() const {
  // @@protoc_insertion_point(field_get:TSASOS.CommandReapplyMasterArchive.is_undo)
  return _internal_is_undo();
}
inline void CommandReapplyMasterArchive::_internal_set_is_undo(bool value) {
  _has_bits_[0] |= 0x00000004u;
  is_undo_ = value;
}
inline void CommandReapplyMasterArchive::set_is_undo(bool value) {
  _internal_set_is_undo(value);
  // @@protoc_insertion_point(field_set:TSASOS.CommandReapplyMasterArchive.is_undo)
}

// -------------------------------------------------------------------

// VerifyDocumentWithServerCommandArchive

// required .TSK.CommandArchive super = 1;
inline bool VerifyDocumentWithServerCommandArchive::_internal_has_super() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || super_ != nullptr);
  return value;
}
inline bool VerifyDocumentWithServerCommandArchive::has_super() const {
  return _internal_has_super();
}
inline const ::TSK::CommandArchive& VerifyDocumentWithServerCommandArchive::_internal_super() const {
  const ::TSK::CommandArchive* p = super_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSK::CommandArchive&>(
      ::TSK::_CommandArchive_default_instance_);
}
inline const ::TSK::CommandArchive& VerifyDocumentWithServerCommandArchive::super() const {
  // @@protoc_insertion_point(field_get:TSASOS.VerifyDocumentWithServerCommandArchive.super)
  return _internal_super();
}
inline void VerifyDocumentWithServerCommandArchive::unsafe_arena_set_allocated_super(
    ::TSK::CommandArchive* super) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(super_);
  }
  super_ = super;
  if (super) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSASOS.VerifyDocumentWithServerCommandArchive.super)
}
inline ::TSK::CommandArchive* VerifyDocumentWithServerCommandArchive::release_super() {
  _has_bits_[0] &= ~0x00000001u;
  ::TSK::CommandArchive* temp = super_;
  super_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::TSK::CommandArchive* VerifyDocumentWithServerCommandArchive::unsafe_arena_release_super() {
  // @@protoc_insertion_point(field_release:TSASOS.VerifyDocumentWithServerCommandArchive.super)
  _has_bits_[0] &= ~0x00000001u;
  ::TSK::CommandArchive* temp = super_;
  super_ = nullptr;
  return temp;
}
inline ::TSK::CommandArchive* VerifyDocumentWithServerCommandArchive::_internal_mutable_super() {
  _has_bits_[0] |= 0x00000001u;
  if (super_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSK::CommandArchive>(GetArena());
    super_ = p;
  }
  return super_;
}
inline ::TSK::CommandArchive* VerifyDocumentWithServerCommandArchive::mutable_super() {
  // @@protoc_insertion_point(field_mutable:TSASOS.VerifyDocumentWithServerCommandArchive.super)
  return _internal_mutable_super();
}
inline void VerifyDocumentWithServerCommandArchive::set_allocated_super(::TSK::CommandArchive* super) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(super_);
  }
  if (super) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(super)->GetArena();
    if (message_arena != submessage_arena) {
      super = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, super, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  super_ = super;
  // @@protoc_insertion_point(field_set_allocated:TSASOS.VerifyDocumentWithServerCommandArchive.super)
}

// -------------------------------------------------------------------

// VerifyDrawableZOrdersWithServerCommandArchive

// required .TSK.CommandArchive super = 1;
inline bool VerifyDrawableZOrdersWithServerCommandArchive::_internal_has_super() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || super_ != nullptr);
  return value;
}
inline bool VerifyDrawableZOrdersWithServerCommandArchive::has_super() const {
  return _internal_has_super();
}
inline const ::TSK::CommandArchive& VerifyDrawableZOrdersWithServerCommandArchive::_internal_super() const {
  const ::TSK::CommandArchive* p = super_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSK::CommandArchive&>(
      ::TSK::_CommandArchive_default_instance_);
}
inline const ::TSK::CommandArchive& VerifyDrawableZOrdersWithServerCommandArchive::super() const {
  // @@protoc_insertion_point(field_get:TSASOS.VerifyDrawableZOrdersWithServerCommandArchive.super)
  return _internal_super();
}
inline void VerifyDrawableZOrdersWithServerCommandArchive::unsafe_arena_set_allocated_super(
    ::TSK::CommandArchive* super) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(super_);
  }
  super_ = super;
  if (super) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSASOS.VerifyDrawableZOrdersWithServerCommandArchive.super)
}
inline ::TSK::CommandArchive* VerifyDrawableZOrdersWithServerCommandArchive::release_super() {
  _has_bits_[0] &= ~0x00000001u;
  ::TSK::CommandArchive* temp = super_;
  super_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::TSK::CommandArchive* VerifyDrawableZOrdersWithServerCommandArchive::unsafe_arena_release_super() {
  // @@protoc_insertion_point(field_release:TSASOS.VerifyDrawableZOrdersWithServerCommandArchive.super)
  _has_bits_[0] &= ~0x00000001u;
  ::TSK::CommandArchive* temp = super_;
  super_ = nullptr;
  return temp;
}
inline ::TSK::CommandArchive* VerifyDrawableZOrdersWithServerCommandArchive::_internal_mutable_super() {
  _has_bits_[0] |= 0x00000001u;
  if (super_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSK::CommandArchive>(GetArena());
    super_ = p;
  }
  return super_;
}
inline ::TSK::CommandArchive* VerifyDrawableZOrdersWithServerCommandArchive::mutable_super() {
  // @@protoc_insertion_point(field_mutable:TSASOS.VerifyDrawableZOrdersWithServerCommandArchive.super)
  return _internal_mutable_super();
}
inline void VerifyDrawableZOrdersWithServerCommandArchive::set_allocated_super(::TSK::CommandArchive* super) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(super_);
  }
  if (super) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(super)->GetArena();
    if (message_arena != submessage_arena) {
      super = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, super, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  super_ = super;
  // @@protoc_insertion_point(field_set_allocated:TSASOS.VerifyDrawableZOrdersWithServerCommandArchive.super)
}

// repeated .TSP.UUID drawable_id_list = 2;
inline int VerifyDrawableZOrdersWithServerCommandArchive::_internal_drawable_id_list_size() const {
  return drawable_id_list_.size();
}
inline int VerifyDrawableZOrdersWithServerCommandArchive::drawable_id_list_size() const {
  return _internal_drawable_id_list_size();
}
inline ::TSP::UUID* VerifyDrawableZOrdersWithServerCommandArchive::mutable_drawable_id_list(int index) {
  // @@protoc_insertion_point(field_mutable:TSASOS.VerifyDrawableZOrdersWithServerCommandArchive.drawable_id_list)
  return drawable_id_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::UUID >*
VerifyDrawableZOrdersWithServerCommandArchive::mutable_drawable_id_list() {
  // @@protoc_insertion_point(field_mutable_list:TSASOS.VerifyDrawableZOrdersWithServerCommandArchive.drawable_id_list)
  return &drawable_id_list_;
}
inline const ::TSP::UUID& VerifyDrawableZOrdersWithServerCommandArchive::_internal_drawable_id_list(int index) const {
  return drawable_id_list_.Get(index);
}
inline const ::TSP::UUID& VerifyDrawableZOrdersWithServerCommandArchive::drawable_id_list(int index) const {
  // @@protoc_insertion_point(field_get:TSASOS.VerifyDrawableZOrdersWithServerCommandArchive.drawable_id_list)
  return _internal_drawable_id_list(index);
}
inline ::TSP::UUID* VerifyDrawableZOrdersWithServerCommandArchive::_internal_add_drawable_id_list() {
  return drawable_id_list_.Add();
}
inline ::TSP::UUID* VerifyDrawableZOrdersWithServerCommandArchive::add_drawable_id_list() {
  // @@protoc_insertion_point(field_add:TSASOS.VerifyDrawableZOrdersWithServerCommandArchive.drawable_id_list)
  return _internal_add_drawable_id_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::UUID >&
VerifyDrawableZOrdersWithServerCommandArchive::drawable_id_list() const {
  // @@protoc_insertion_point(field_list:TSASOS.VerifyDrawableZOrdersWithServerCommandArchive.drawable_id_list)
  return drawable_id_list_;
}

// optional bool drawable_id_list_undefined = 3;
inline bool VerifyDrawableZOrdersWithServerCommandArchive::_internal_has_drawable_id_list_undefined() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool VerifyDrawableZOrdersWithServerCommandArchive::has_drawable_id_list_undefined() const {
  return _internal_has_drawable_id_list_undefined();
}
inline void VerifyDrawableZOrdersWithServerCommandArchive::clear_drawable_id_list_undefined() {
  drawable_id_list_undefined_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool VerifyDrawableZOrdersWithServerCommandArchive::_internal_drawable_id_list_undefined() const {
  return drawable_id_list_undefined_;
}
inline bool VerifyDrawableZOrdersWithServerCommandArchive::drawable_id_list_undefined() const {
  // @@protoc_insertion_point(field_get:TSASOS.VerifyDrawableZOrdersWithServerCommandArchive.drawable_id_list_undefined)
  return _internal_drawable_id_list_undefined();
}
inline void VerifyDrawableZOrdersWithServerCommandArchive::_internal_set_drawable_id_list_undefined(bool value) {
  _has_bits_[0] |= 0x00000002u;
  drawable_id_list_undefined_ = value;
}
inline void VerifyDrawableZOrdersWithServerCommandArchive::set_drawable_id_list_undefined(bool value) {
  _internal_set_drawable_id_list_undefined(value);
  // @@protoc_insertion_point(field_set:TSASOS.VerifyDrawableZOrdersWithServerCommandArchive.drawable_id_list_undefined)
}

// -------------------------------------------------------------------

// VerifyObjectsWithServerCommandArchive

// required .TSK.CommandArchive super = 1;
inline bool VerifyObjectsWithServerCommandArchive::_internal_has_super() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || super_ != nullptr);
  return value;
}
inline bool VerifyObjectsWithServerCommandArchive::has_super() const {
  return _internal_has_super();
}
inline const ::TSK::CommandArchive& VerifyObjectsWithServerCommandArchive::_internal_super() const {
  const ::TSK::CommandArchive* p = super_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSK::CommandArchive&>(
      ::TSK::_CommandArchive_default_instance_);
}
inline const ::TSK::CommandArchive& VerifyObjectsWithServerCommandArchive::super() const {
  // @@protoc_insertion_point(field_get:TSASOS.VerifyObjectsWithServerCommandArchive.super)
  return _internal_super();
}
inline void VerifyObjectsWithServerCommandArchive::unsafe_arena_set_allocated_super(
    ::TSK::CommandArchive* super) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(super_);
  }
  super_ = super;
  if (super) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSASOS.VerifyObjectsWithServerCommandArchive.super)
}
inline ::TSK::CommandArchive* VerifyObjectsWithServerCommandArchive::release_super() {
  _has_bits_[0] &= ~0x00000001u;
  ::TSK::CommandArchive* temp = super_;
  super_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::TSK::CommandArchive* VerifyObjectsWithServerCommandArchive::unsafe_arena_release_super() {
  // @@protoc_insertion_point(field_release:TSASOS.VerifyObjectsWithServerCommandArchive.super)
  _has_bits_[0] &= ~0x00000001u;
  ::TSK::CommandArchive* temp = super_;
  super_ = nullptr;
  return temp;
}
inline ::TSK::CommandArchive* VerifyObjectsWithServerCommandArchive::_internal_mutable_super() {
  _has_bits_[0] |= 0x00000001u;
  if (super_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSK::CommandArchive>(GetArena());
    super_ = p;
  }
  return super_;
}
inline ::TSK::CommandArchive* VerifyObjectsWithServerCommandArchive::mutable_super() {
  // @@protoc_insertion_point(field_mutable:TSASOS.VerifyObjectsWithServerCommandArchive.super)
  return _internal_mutable_super();
}
inline void VerifyObjectsWithServerCommandArchive::set_allocated_super(::TSK::CommandArchive* super) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(super_);
  }
  if (super) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(super)->GetArena();
    if (message_arena != submessage_arena) {
      super = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, super, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  super_ = super;
  // @@protoc_insertion_point(field_set_allocated:TSASOS.VerifyObjectsWithServerCommandArchive.super)
}

// repeated .TSP.UUID object_id_list = 2;
inline int VerifyObjectsWithServerCommandArchive::_internal_object_id_list_size() const {
  return object_id_list_.size();
}
inline int VerifyObjectsWithServerCommandArchive::object_id_list_size() const {
  return _internal_object_id_list_size();
}
inline ::TSP::UUID* VerifyObjectsWithServerCommandArchive::mutable_object_id_list(int index) {
  // @@protoc_insertion_point(field_mutable:TSASOS.VerifyObjectsWithServerCommandArchive.object_id_list)
  return object_id_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::UUID >*
VerifyObjectsWithServerCommandArchive::mutable_object_id_list() {
  // @@protoc_insertion_point(field_mutable_list:TSASOS.VerifyObjectsWithServerCommandArchive.object_id_list)
  return &object_id_list_;
}
inline const ::TSP::UUID& VerifyObjectsWithServerCommandArchive::_internal_object_id_list(int index) const {
  return object_id_list_.Get(index);
}
inline const ::TSP::UUID& VerifyObjectsWithServerCommandArchive::object_id_list(int index) const {
  // @@protoc_insertion_point(field_get:TSASOS.VerifyObjectsWithServerCommandArchive.object_id_list)
  return _internal_object_id_list(index);
}
inline ::TSP::UUID* VerifyObjectsWithServerCommandArchive::_internal_add_object_id_list() {
  return object_id_list_.Add();
}
inline ::TSP::UUID* VerifyObjectsWithServerCommandArchive::add_object_id_list() {
  // @@protoc_insertion_point(field_add:TSASOS.VerifyObjectsWithServerCommandArchive.object_id_list)
  return _internal_add_object_id_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::UUID >&
VerifyObjectsWithServerCommandArchive::object_id_list() const {
  // @@protoc_insertion_point(field_list:TSASOS.VerifyObjectsWithServerCommandArchive.object_id_list)
  return object_id_list_;
}

// optional bool object_id_list_undefined = 3;
inline bool VerifyObjectsWithServerCommandArchive::_internal_has_object_id_list_undefined() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool VerifyObjectsWithServerCommandArchive::has_object_id_list_undefined() const {
  return _internal_has_object_id_list_undefined();
}
inline void VerifyObjectsWithServerCommandArchive::clear_object_id_list_undefined() {
  object_id_list_undefined_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool VerifyObjectsWithServerCommandArchive::_internal_object_id_list_undefined() const {
  return object_id_list_undefined_;
}
inline bool VerifyObjectsWithServerCommandArchive::object_id_list_undefined() const {
  // @@protoc_insertion_point(field_get:TSASOS.VerifyObjectsWithServerCommandArchive.object_id_list_undefined)
  return _internal_object_id_list_undefined();
}
inline void VerifyObjectsWithServerCommandArchive::_internal_set_object_id_list_undefined(bool value) {
  _has_bits_[0] |= 0x00000002u;
  object_id_list_undefined_ = value;
}
inline void VerifyObjectsWithServerCommandArchive::set_object_id_list_undefined(bool value) {
  _internal_set_object_id_list_undefined(value);
  // @@protoc_insertion_point(field_set:TSASOS.VerifyObjectsWithServerCommandArchive.object_id_list_undefined)
}

// -------------------------------------------------------------------

// VerifyTransformHistoryWithServerCommandArchive

// required .TSK.CommandArchive super = 1;
inline bool VerifyTransformHistoryWithServerCommandArchive::_internal_has_super() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || super_ != nullptr);
  return value;
}
inline bool VerifyTransformHistoryWithServerCommandArchive::has_super() const {
  return _internal_has_super();
}
inline const ::TSK::CommandArchive& VerifyTransformHistoryWithServerCommandArchive::_internal_super() const {
  const ::TSK::CommandArchive* p = super_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSK::CommandArchive&>(
      ::TSK::_CommandArchive_default_instance_);
}
inline const ::TSK::CommandArchive& VerifyTransformHistoryWithServerCommandArchive::super() const {
  // @@protoc_insertion_point(field_get:TSASOS.VerifyTransformHistoryWithServerCommandArchive.super)
  return _internal_super();
}
inline void VerifyTransformHistoryWithServerCommandArchive::unsafe_arena_set_allocated_super(
    ::TSK::CommandArchive* super) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(super_);
  }
  super_ = super;
  if (super) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSASOS.VerifyTransformHistoryWithServerCommandArchive.super)
}
inline ::TSK::CommandArchive* VerifyTransformHistoryWithServerCommandArchive::release_super() {
  _has_bits_[0] &= ~0x00000001u;
  ::TSK::CommandArchive* temp = super_;
  super_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::TSK::CommandArchive* VerifyTransformHistoryWithServerCommandArchive::unsafe_arena_release_super() {
  // @@protoc_insertion_point(field_release:TSASOS.VerifyTransformHistoryWithServerCommandArchive.super)
  _has_bits_[0] &= ~0x00000001u;
  ::TSK::CommandArchive* temp = super_;
  super_ = nullptr;
  return temp;
}
inline ::TSK::CommandArchive* VerifyTransformHistoryWithServerCommandArchive::_internal_mutable_super() {
  _has_bits_[0] |= 0x00000001u;
  if (super_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSK::CommandArchive>(GetArena());
    super_ = p;
  }
  return super_;
}
inline ::TSK::CommandArchive* VerifyTransformHistoryWithServerCommandArchive::mutable_super() {
  // @@protoc_insertion_point(field_mutable:TSASOS.VerifyTransformHistoryWithServerCommandArchive.super)
  return _internal_mutable_super();
}
inline void VerifyTransformHistoryWithServerCommandArchive::set_allocated_super(::TSK::CommandArchive* super) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(super_);
  }
  if (super) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(super)->GetArena();
    if (message_arena != submessage_arena) {
      super = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, super, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  super_ = super;
  // @@protoc_insertion_point(field_set_allocated:TSASOS.VerifyTransformHistoryWithServerCommandArchive.super)
}

// required int32 sequence_start = 2;
inline bool VerifyTransformHistoryWithServerCommandArchive::_internal_has_sequence_start() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool VerifyTransformHistoryWithServerCommandArchive::has_sequence_start() const {
  return _internal_has_sequence_start();
}
inline void VerifyTransformHistoryWithServerCommandArchive::clear_sequence_start() {
  sequence_start_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 VerifyTransformHistoryWithServerCommandArchive::_internal_sequence_start() const {
  return sequence_start_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 VerifyTransformHistoryWithServerCommandArchive::sequence_start() const {
  // @@protoc_insertion_point(field_get:TSASOS.VerifyTransformHistoryWithServerCommandArchive.sequence_start)
  return _internal_sequence_start();
}
inline void VerifyTransformHistoryWithServerCommandArchive::_internal_set_sequence_start(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  sequence_start_ = value;
}
inline void VerifyTransformHistoryWithServerCommandArchive::set_sequence_start(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_sequence_start(value);
  // @@protoc_insertion_point(field_set:TSASOS.VerifyTransformHistoryWithServerCommandArchive.sequence_start)
}

// required int32 sequence_end = 3;
inline bool VerifyTransformHistoryWithServerCommandArchive::_internal_has_sequence_end() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool VerifyTransformHistoryWithServerCommandArchive::has_sequence_end() const {
  return _internal_has_sequence_end();
}
inline void VerifyTransformHistoryWithServerCommandArchive::clear_sequence_end() {
  sequence_end_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 VerifyTransformHistoryWithServerCommandArchive::_internal_sequence_end() const {
  return sequence_end_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 VerifyTransformHistoryWithServerCommandArchive::sequence_end() const {
  // @@protoc_insertion_point(field_get:TSASOS.VerifyTransformHistoryWithServerCommandArchive.sequence_end)
  return _internal_sequence_end();
}
inline void VerifyTransformHistoryWithServerCommandArchive::_internal_set_sequence_end(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  sequence_end_ = value;
}
inline void VerifyTransformHistoryWithServerCommandArchive::set_sequence_end(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_sequence_end(value);
  // @@protoc_insertion_point(field_set:TSASOS.VerifyTransformHistoryWithServerCommandArchive.sequence_end)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace TSASOS

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_TSACommandArchives_2esos_2eproto
