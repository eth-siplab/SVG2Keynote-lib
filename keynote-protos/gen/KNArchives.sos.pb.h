// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KNArchives.sos.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_KNArchives_2esos_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_KNArchives_2esos_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3017000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3017003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "KNArchives.pb.h"
#include "TSDArchives.sos.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_KNArchives_2esos_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_KNArchives_2esos_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_KNArchives_2esos_2eproto;
namespace KNSOS {
class SlideStylePropertyChangeSetArchive;
struct SlideStylePropertyChangeSetArchiveDefaultTypeInternal;
extern SlideStylePropertyChangeSetArchiveDefaultTypeInternal _SlideStylePropertyChangeSetArchive_default_instance_;
class SpecSetTransitionAttributesArchive;
struct SpecSetTransitionAttributesArchiveDefaultTypeInternal;
extern SpecSetTransitionAttributesArchiveDefaultTypeInternal _SpecSetTransitionAttributesArchive_default_instance_;
class SpecTransitionAttributesArchive;
struct SpecTransitionAttributesArchiveDefaultTypeInternal;
extern SpecTransitionAttributesArchiveDefaultTypeInternal _SpecTransitionAttributesArchive_default_instance_;
}  // namespace KNSOS
PROTOBUF_NAMESPACE_OPEN
template<> ::KNSOS::SlideStylePropertyChangeSetArchive* Arena::CreateMaybeMessage<::KNSOS::SlideStylePropertyChangeSetArchive>(Arena*);
template<> ::KNSOS::SpecSetTransitionAttributesArchive* Arena::CreateMaybeMessage<::KNSOS::SpecSetTransitionAttributesArchive>(Arena*);
template<> ::KNSOS::SpecTransitionAttributesArchive* Arena::CreateMaybeMessage<::KNSOS::SpecTransitionAttributesArchive>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace KNSOS {

// ===================================================================

class SpecSetTransitionAttributesArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:KNSOS.SpecSetTransitionAttributesArchive) */ {
 public:
  inline SpecSetTransitionAttributesArchive() : SpecSetTransitionAttributesArchive(nullptr) {}
  ~SpecSetTransitionAttributesArchive() override;
  explicit constexpr SpecSetTransitionAttributesArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecSetTransitionAttributesArchive(const SpecSetTransitionAttributesArchive& from);
  SpecSetTransitionAttributesArchive(SpecSetTransitionAttributesArchive&& from) noexcept
    : SpecSetTransitionAttributesArchive() {
    *this = ::std::move(from);
  }

  inline SpecSetTransitionAttributesArchive& operator=(const SpecSetTransitionAttributesArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecSetTransitionAttributesArchive& operator=(SpecSetTransitionAttributesArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecSetTransitionAttributesArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecSetTransitionAttributesArchive* internal_default_instance() {
    return reinterpret_cast<const SpecSetTransitionAttributesArchive*>(
               &_SpecSetTransitionAttributesArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SpecSetTransitionAttributesArchive& a, SpecSetTransitionAttributesArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecSetTransitionAttributesArchive* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecSetTransitionAttributesArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SpecSetTransitionAttributesArchive* New() const final {
    return new SpecSetTransitionAttributesArchive();
  }

  SpecSetTransitionAttributesArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SpecSetTransitionAttributesArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecSetTransitionAttributesArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SpecSetTransitionAttributesArchive& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecSetTransitionAttributesArchive* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "KNSOS.SpecSetTransitionAttributesArchive";
  }
  protected:
  explicit SpecSetTransitionAttributesArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransitionAttributesFieldNumber = 1,
    kUnsetFieldNumber = 2,
  };
  // optional .KN.TransitionAttributesArchive transition_attributes = 1;
  bool has_transition_attributes() const;
  private:
  bool _internal_has_transition_attributes() const;
  public:
  void clear_transition_attributes();
  const ::KN::TransitionAttributesArchive& transition_attributes() const;
  PROTOBUF_MUST_USE_RESULT ::KN::TransitionAttributesArchive* release_transition_attributes();
  ::KN::TransitionAttributesArchive* mutable_transition_attributes();
  void set_allocated_transition_attributes(::KN::TransitionAttributesArchive* transition_attributes);
  private:
  const ::KN::TransitionAttributesArchive& _internal_transition_attributes() const;
  ::KN::TransitionAttributesArchive* _internal_mutable_transition_attributes();
  public:
  void unsafe_arena_set_allocated_transition_attributes(
      ::KN::TransitionAttributesArchive* transition_attributes);
  ::KN::TransitionAttributesArchive* unsafe_arena_release_transition_attributes();

  // required bool unset = 2;
  bool has_unset() const;
  private:
  bool _internal_has_unset() const;
  public:
  void clear_unset();
  bool unset() const;
  void set_unset(bool value);
  private:
  bool _internal_unset() const;
  void _internal_set_unset(bool value);
  public:

  // @@protoc_insertion_point(class_scope:KNSOS.SpecSetTransitionAttributesArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::KN::TransitionAttributesArchive* transition_attributes_;
  bool unset_;
  friend struct ::TableStruct_KNArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class SpecTransitionAttributesArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:KNSOS.SpecTransitionAttributesArchive) */ {
 public:
  inline SpecTransitionAttributesArchive() : SpecTransitionAttributesArchive(nullptr) {}
  ~SpecTransitionAttributesArchive() override;
  explicit constexpr SpecTransitionAttributesArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecTransitionAttributesArchive(const SpecTransitionAttributesArchive& from);
  SpecTransitionAttributesArchive(SpecTransitionAttributesArchive&& from) noexcept
    : SpecTransitionAttributesArchive() {
    *this = ::std::move(from);
  }

  inline SpecTransitionAttributesArchive& operator=(const SpecTransitionAttributesArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecTransitionAttributesArchive& operator=(SpecTransitionAttributesArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecTransitionAttributesArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecTransitionAttributesArchive* internal_default_instance() {
    return reinterpret_cast<const SpecTransitionAttributesArchive*>(
               &_SpecTransitionAttributesArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SpecTransitionAttributesArchive& a, SpecTransitionAttributesArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecTransitionAttributesArchive* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecTransitionAttributesArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SpecTransitionAttributesArchive* New() const final {
    return new SpecTransitionAttributesArchive();
  }

  SpecTransitionAttributesArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SpecTransitionAttributesArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecTransitionAttributesArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SpecTransitionAttributesArchive& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecTransitionAttributesArchive* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "KNSOS.SpecTransitionAttributesArchive";
  }
  protected:
  explicit SpecTransitionAttributesArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpecSetTransitionAttributesFieldNumber = 1,
  };
  // optional .KNSOS.SpecSetTransitionAttributesArchive spec_set_transition_attributes = 1;
  bool has_spec_set_transition_attributes() const;
  private:
  bool _internal_has_spec_set_transition_attributes() const;
  public:
  void clear_spec_set_transition_attributes();
  const ::KNSOS::SpecSetTransitionAttributesArchive& spec_set_transition_attributes() const;
  PROTOBUF_MUST_USE_RESULT ::KNSOS::SpecSetTransitionAttributesArchive* release_spec_set_transition_attributes();
  ::KNSOS::SpecSetTransitionAttributesArchive* mutable_spec_set_transition_attributes();
  void set_allocated_spec_set_transition_attributes(::KNSOS::SpecSetTransitionAttributesArchive* spec_set_transition_attributes);
  private:
  const ::KNSOS::SpecSetTransitionAttributesArchive& _internal_spec_set_transition_attributes() const;
  ::KNSOS::SpecSetTransitionAttributesArchive* _internal_mutable_spec_set_transition_attributes();
  public:
  void unsafe_arena_set_allocated_spec_set_transition_attributes(
      ::KNSOS::SpecSetTransitionAttributesArchive* spec_set_transition_attributes);
  ::KNSOS::SpecSetTransitionAttributesArchive* unsafe_arena_release_spec_set_transition_attributes();

  // @@protoc_insertion_point(class_scope:KNSOS.SpecTransitionAttributesArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::KNSOS::SpecSetTransitionAttributesArchive* spec_set_transition_attributes_;
  friend struct ::TableStruct_KNArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class SlideStylePropertyChangeSetArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:KNSOS.SlideStylePropertyChangeSetArchive) */ {
 public:
  inline SlideStylePropertyChangeSetArchive() : SlideStylePropertyChangeSetArchive(nullptr) {}
  ~SlideStylePropertyChangeSetArchive() override;
  explicit constexpr SlideStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SlideStylePropertyChangeSetArchive(const SlideStylePropertyChangeSetArchive& from);
  SlideStylePropertyChangeSetArchive(SlideStylePropertyChangeSetArchive&& from) noexcept
    : SlideStylePropertyChangeSetArchive() {
    *this = ::std::move(from);
  }

  inline SlideStylePropertyChangeSetArchive& operator=(const SlideStylePropertyChangeSetArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SlideStylePropertyChangeSetArchive& operator=(SlideStylePropertyChangeSetArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SlideStylePropertyChangeSetArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SlideStylePropertyChangeSetArchive* internal_default_instance() {
    return reinterpret_cast<const SlideStylePropertyChangeSetArchive*>(
               &_SlideStylePropertyChangeSetArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SlideStylePropertyChangeSetArchive& a, SlideStylePropertyChangeSetArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SlideStylePropertyChangeSetArchive* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SlideStylePropertyChangeSetArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SlideStylePropertyChangeSetArchive* New() const final {
    return new SlideStylePropertyChangeSetArchive();
  }

  SlideStylePropertyChangeSetArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SlideStylePropertyChangeSetArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SlideStylePropertyChangeSetArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SlideStylePropertyChangeSetArchive& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SlideStylePropertyChangeSetArchive* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "KNSOS.SlideStylePropertyChangeSetArchive";
  }
  protected:
  explicit SlideStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFillFieldNumber = 1,
    kSlideTransitionFieldNumber = 3,
    kFillUndefinedFieldNumber = 2,
    kSlideTransitionUndefinedFieldNumber = 4,
  };
  // optional .TSDSOS.SpecFillArchive fill = 1;
  bool has_fill() const;
  private:
  bool _internal_has_fill() const;
  public:
  void clear_fill();
  const ::TSDSOS::SpecFillArchive& fill() const;
  PROTOBUF_MUST_USE_RESULT ::TSDSOS::SpecFillArchive* release_fill();
  ::TSDSOS::SpecFillArchive* mutable_fill();
  void set_allocated_fill(::TSDSOS::SpecFillArchive* fill);
  private:
  const ::TSDSOS::SpecFillArchive& _internal_fill() const;
  ::TSDSOS::SpecFillArchive* _internal_mutable_fill();
  public:
  void unsafe_arena_set_allocated_fill(
      ::TSDSOS::SpecFillArchive* fill);
  ::TSDSOS::SpecFillArchive* unsafe_arena_release_fill();

  // optional .KNSOS.SpecTransitionAttributesArchive slide_transition = 3;
  bool has_slide_transition() const;
  private:
  bool _internal_has_slide_transition() const;
  public:
  void clear_slide_transition();
  const ::KNSOS::SpecTransitionAttributesArchive& slide_transition() const;
  PROTOBUF_MUST_USE_RESULT ::KNSOS::SpecTransitionAttributesArchive* release_slide_transition();
  ::KNSOS::SpecTransitionAttributesArchive* mutable_slide_transition();
  void set_allocated_slide_transition(::KNSOS::SpecTransitionAttributesArchive* slide_transition);
  private:
  const ::KNSOS::SpecTransitionAttributesArchive& _internal_slide_transition() const;
  ::KNSOS::SpecTransitionAttributesArchive* _internal_mutable_slide_transition();
  public:
  void unsafe_arena_set_allocated_slide_transition(
      ::KNSOS::SpecTransitionAttributesArchive* slide_transition);
  ::KNSOS::SpecTransitionAttributesArchive* unsafe_arena_release_slide_transition();

  // optional bool fill_undefined = 2;
  bool has_fill_undefined() const;
  private:
  bool _internal_has_fill_undefined() const;
  public:
  void clear_fill_undefined();
  bool fill_undefined() const;
  void set_fill_undefined(bool value);
  private:
  bool _internal_fill_undefined() const;
  void _internal_set_fill_undefined(bool value);
  public:

  // optional bool slide_transition_undefined = 4;
  bool has_slide_transition_undefined() const;
  private:
  bool _internal_has_slide_transition_undefined() const;
  public:
  void clear_slide_transition_undefined();
  bool slide_transition_undefined() const;
  void set_slide_transition_undefined(bool value);
  private:
  bool _internal_slide_transition_undefined() const;
  void _internal_set_slide_transition_undefined(bool value);
  public:

  // @@protoc_insertion_point(class_scope:KNSOS.SlideStylePropertyChangeSetArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::TSDSOS::SpecFillArchive* fill_;
  ::KNSOS::SpecTransitionAttributesArchive* slide_transition_;
  bool fill_undefined_;
  bool slide_transition_undefined_;
  friend struct ::TableStruct_KNArchives_2esos_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SpecSetTransitionAttributesArchive

// optional .KN.TransitionAttributesArchive transition_attributes = 1;
inline bool SpecSetTransitionAttributesArchive::_internal_has_transition_attributes() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || transition_attributes_ != nullptr);
  return value;
}
inline bool SpecSetTransitionAttributesArchive::has_transition_attributes() const {
  return _internal_has_transition_attributes();
}
inline const ::KN::TransitionAttributesArchive& SpecSetTransitionAttributesArchive::_internal_transition_attributes() const {
  const ::KN::TransitionAttributesArchive* p = transition_attributes_;
  return p != nullptr ? *p : reinterpret_cast<const ::KN::TransitionAttributesArchive&>(
      ::KN::_TransitionAttributesArchive_default_instance_);
}
inline const ::KN::TransitionAttributesArchive& SpecSetTransitionAttributesArchive::transition_attributes() const {
  // @@protoc_insertion_point(field_get:KNSOS.SpecSetTransitionAttributesArchive.transition_attributes)
  return _internal_transition_attributes();
}
inline void SpecSetTransitionAttributesArchive::unsafe_arena_set_allocated_transition_attributes(
    ::KN::TransitionAttributesArchive* transition_attributes) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transition_attributes_);
  }
  transition_attributes_ = transition_attributes;
  if (transition_attributes) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.SpecSetTransitionAttributesArchive.transition_attributes)
}
inline ::KN::TransitionAttributesArchive* SpecSetTransitionAttributesArchive::release_transition_attributes() {
  _has_bits_[0] &= ~0x00000001u;
  ::KN::TransitionAttributesArchive* temp = transition_attributes_;
  transition_attributes_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::KN::TransitionAttributesArchive* SpecSetTransitionAttributesArchive::unsafe_arena_release_transition_attributes() {
  // @@protoc_insertion_point(field_release:KNSOS.SpecSetTransitionAttributesArchive.transition_attributes)
  _has_bits_[0] &= ~0x00000001u;
  ::KN::TransitionAttributesArchive* temp = transition_attributes_;
  transition_attributes_ = nullptr;
  return temp;
}
inline ::KN::TransitionAttributesArchive* SpecSetTransitionAttributesArchive::_internal_mutable_transition_attributes() {
  _has_bits_[0] |= 0x00000001u;
  if (transition_attributes_ == nullptr) {
    auto* p = CreateMaybeMessage<::KN::TransitionAttributesArchive>(GetArenaForAllocation());
    transition_attributes_ = p;
  }
  return transition_attributes_;
}
inline ::KN::TransitionAttributesArchive* SpecSetTransitionAttributesArchive::mutable_transition_attributes() {
  ::KN::TransitionAttributesArchive* _msg = _internal_mutable_transition_attributes();
  // @@protoc_insertion_point(field_mutable:KNSOS.SpecSetTransitionAttributesArchive.transition_attributes)
  return _msg;
}
inline void SpecSetTransitionAttributesArchive::set_allocated_transition_attributes(::KN::TransitionAttributesArchive* transition_attributes) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(transition_attributes_);
  }
  if (transition_attributes) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transition_attributes));
    if (message_arena != submessage_arena) {
      transition_attributes = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transition_attributes, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  transition_attributes_ = transition_attributes;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.SpecSetTransitionAttributesArchive.transition_attributes)
}

// required bool unset = 2;
inline bool SpecSetTransitionAttributesArchive::_internal_has_unset() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SpecSetTransitionAttributesArchive::has_unset() const {
  return _internal_has_unset();
}
inline void SpecSetTransitionAttributesArchive::clear_unset() {
  unset_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool SpecSetTransitionAttributesArchive::_internal_unset() const {
  return unset_;
}
inline bool SpecSetTransitionAttributesArchive::unset() const {
  // @@protoc_insertion_point(field_get:KNSOS.SpecSetTransitionAttributesArchive.unset)
  return _internal_unset();
}
inline void SpecSetTransitionAttributesArchive::_internal_set_unset(bool value) {
  _has_bits_[0] |= 0x00000002u;
  unset_ = value;
}
inline void SpecSetTransitionAttributesArchive::set_unset(bool value) {
  _internal_set_unset(value);
  // @@protoc_insertion_point(field_set:KNSOS.SpecSetTransitionAttributesArchive.unset)
}

// -------------------------------------------------------------------

// SpecTransitionAttributesArchive

// optional .KNSOS.SpecSetTransitionAttributesArchive spec_set_transition_attributes = 1;
inline bool SpecTransitionAttributesArchive::_internal_has_spec_set_transition_attributes() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || spec_set_transition_attributes_ != nullptr);
  return value;
}
inline bool SpecTransitionAttributesArchive::has_spec_set_transition_attributes() const {
  return _internal_has_spec_set_transition_attributes();
}
inline void SpecTransitionAttributesArchive::clear_spec_set_transition_attributes() {
  if (spec_set_transition_attributes_ != nullptr) spec_set_transition_attributes_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::KNSOS::SpecSetTransitionAttributesArchive& SpecTransitionAttributesArchive::_internal_spec_set_transition_attributes() const {
  const ::KNSOS::SpecSetTransitionAttributesArchive* p = spec_set_transition_attributes_;
  return p != nullptr ? *p : reinterpret_cast<const ::KNSOS::SpecSetTransitionAttributesArchive&>(
      ::KNSOS::_SpecSetTransitionAttributesArchive_default_instance_);
}
inline const ::KNSOS::SpecSetTransitionAttributesArchive& SpecTransitionAttributesArchive::spec_set_transition_attributes() const {
  // @@protoc_insertion_point(field_get:KNSOS.SpecTransitionAttributesArchive.spec_set_transition_attributes)
  return _internal_spec_set_transition_attributes();
}
inline void SpecTransitionAttributesArchive::unsafe_arena_set_allocated_spec_set_transition_attributes(
    ::KNSOS::SpecSetTransitionAttributesArchive* spec_set_transition_attributes) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spec_set_transition_attributes_);
  }
  spec_set_transition_attributes_ = spec_set_transition_attributes;
  if (spec_set_transition_attributes) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.SpecTransitionAttributesArchive.spec_set_transition_attributes)
}
inline ::KNSOS::SpecSetTransitionAttributesArchive* SpecTransitionAttributesArchive::release_spec_set_transition_attributes() {
  _has_bits_[0] &= ~0x00000001u;
  ::KNSOS::SpecSetTransitionAttributesArchive* temp = spec_set_transition_attributes_;
  spec_set_transition_attributes_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::KNSOS::SpecSetTransitionAttributesArchive* SpecTransitionAttributesArchive::unsafe_arena_release_spec_set_transition_attributes() {
  // @@protoc_insertion_point(field_release:KNSOS.SpecTransitionAttributesArchive.spec_set_transition_attributes)
  _has_bits_[0] &= ~0x00000001u;
  ::KNSOS::SpecSetTransitionAttributesArchive* temp = spec_set_transition_attributes_;
  spec_set_transition_attributes_ = nullptr;
  return temp;
}
inline ::KNSOS::SpecSetTransitionAttributesArchive* SpecTransitionAttributesArchive::_internal_mutable_spec_set_transition_attributes() {
  _has_bits_[0] |= 0x00000001u;
  if (spec_set_transition_attributes_ == nullptr) {
    auto* p = CreateMaybeMessage<::KNSOS::SpecSetTransitionAttributesArchive>(GetArenaForAllocation());
    spec_set_transition_attributes_ = p;
  }
  return spec_set_transition_attributes_;
}
inline ::KNSOS::SpecSetTransitionAttributesArchive* SpecTransitionAttributesArchive::mutable_spec_set_transition_attributes() {
  ::KNSOS::SpecSetTransitionAttributesArchive* _msg = _internal_mutable_spec_set_transition_attributes();
  // @@protoc_insertion_point(field_mutable:KNSOS.SpecTransitionAttributesArchive.spec_set_transition_attributes)
  return _msg;
}
inline void SpecTransitionAttributesArchive::set_allocated_spec_set_transition_attributes(::KNSOS::SpecSetTransitionAttributesArchive* spec_set_transition_attributes) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete spec_set_transition_attributes_;
  }
  if (spec_set_transition_attributes) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::KNSOS::SpecSetTransitionAttributesArchive>::GetOwningArena(spec_set_transition_attributes);
    if (message_arena != submessage_arena) {
      spec_set_transition_attributes = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_set_transition_attributes, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  spec_set_transition_attributes_ = spec_set_transition_attributes;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.SpecTransitionAttributesArchive.spec_set_transition_attributes)
}

// -------------------------------------------------------------------

// SlideStylePropertyChangeSetArchive

// optional .TSDSOS.SpecFillArchive fill = 1;
inline bool SlideStylePropertyChangeSetArchive::_internal_has_fill() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || fill_ != nullptr);
  return value;
}
inline bool SlideStylePropertyChangeSetArchive::has_fill() const {
  return _internal_has_fill();
}
inline const ::TSDSOS::SpecFillArchive& SlideStylePropertyChangeSetArchive::_internal_fill() const {
  const ::TSDSOS::SpecFillArchive* p = fill_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSDSOS::SpecFillArchive&>(
      ::TSDSOS::_SpecFillArchive_default_instance_);
}
inline const ::TSDSOS::SpecFillArchive& SlideStylePropertyChangeSetArchive::fill() const {
  // @@protoc_insertion_point(field_get:KNSOS.SlideStylePropertyChangeSetArchive.fill)
  return _internal_fill();
}
inline void SlideStylePropertyChangeSetArchive::unsafe_arena_set_allocated_fill(
    ::TSDSOS::SpecFillArchive* fill) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(fill_);
  }
  fill_ = fill;
  if (fill) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.SlideStylePropertyChangeSetArchive.fill)
}
inline ::TSDSOS::SpecFillArchive* SlideStylePropertyChangeSetArchive::release_fill() {
  _has_bits_[0] &= ~0x00000001u;
  ::TSDSOS::SpecFillArchive* temp = fill_;
  fill_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSDSOS::SpecFillArchive* SlideStylePropertyChangeSetArchive::unsafe_arena_release_fill() {
  // @@protoc_insertion_point(field_release:KNSOS.SlideStylePropertyChangeSetArchive.fill)
  _has_bits_[0] &= ~0x00000001u;
  ::TSDSOS::SpecFillArchive* temp = fill_;
  fill_ = nullptr;
  return temp;
}
inline ::TSDSOS::SpecFillArchive* SlideStylePropertyChangeSetArchive::_internal_mutable_fill() {
  _has_bits_[0] |= 0x00000001u;
  if (fill_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSDSOS::SpecFillArchive>(GetArenaForAllocation());
    fill_ = p;
  }
  return fill_;
}
inline ::TSDSOS::SpecFillArchive* SlideStylePropertyChangeSetArchive::mutable_fill() {
  ::TSDSOS::SpecFillArchive* _msg = _internal_mutable_fill();
  // @@protoc_insertion_point(field_mutable:KNSOS.SlideStylePropertyChangeSetArchive.fill)
  return _msg;
}
inline void SlideStylePropertyChangeSetArchive::set_allocated_fill(::TSDSOS::SpecFillArchive* fill) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(fill_);
  }
  if (fill) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(fill));
    if (message_arena != submessage_arena) {
      fill = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fill, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  fill_ = fill;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.SlideStylePropertyChangeSetArchive.fill)
}

// optional bool fill_undefined = 2;
inline bool SlideStylePropertyChangeSetArchive::_internal_has_fill_undefined() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool SlideStylePropertyChangeSetArchive::has_fill_undefined() const {
  return _internal_has_fill_undefined();
}
inline void SlideStylePropertyChangeSetArchive::clear_fill_undefined() {
  fill_undefined_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool SlideStylePropertyChangeSetArchive::_internal_fill_undefined() const {
  return fill_undefined_;
}
inline bool SlideStylePropertyChangeSetArchive::fill_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.SlideStylePropertyChangeSetArchive.fill_undefined)
  return _internal_fill_undefined();
}
inline void SlideStylePropertyChangeSetArchive::_internal_set_fill_undefined(bool value) {
  _has_bits_[0] |= 0x00000004u;
  fill_undefined_ = value;
}
inline void SlideStylePropertyChangeSetArchive::set_fill_undefined(bool value) {
  _internal_set_fill_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.SlideStylePropertyChangeSetArchive.fill_undefined)
}

// optional .KNSOS.SpecTransitionAttributesArchive slide_transition = 3;
inline bool SlideStylePropertyChangeSetArchive::_internal_has_slide_transition() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || slide_transition_ != nullptr);
  return value;
}
inline bool SlideStylePropertyChangeSetArchive::has_slide_transition() const {
  return _internal_has_slide_transition();
}
inline void SlideStylePropertyChangeSetArchive::clear_slide_transition() {
  if (slide_transition_ != nullptr) slide_transition_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::KNSOS::SpecTransitionAttributesArchive& SlideStylePropertyChangeSetArchive::_internal_slide_transition() const {
  const ::KNSOS::SpecTransitionAttributesArchive* p = slide_transition_;
  return p != nullptr ? *p : reinterpret_cast<const ::KNSOS::SpecTransitionAttributesArchive&>(
      ::KNSOS::_SpecTransitionAttributesArchive_default_instance_);
}
inline const ::KNSOS::SpecTransitionAttributesArchive& SlideStylePropertyChangeSetArchive::slide_transition() const {
  // @@protoc_insertion_point(field_get:KNSOS.SlideStylePropertyChangeSetArchive.slide_transition)
  return _internal_slide_transition();
}
inline void SlideStylePropertyChangeSetArchive::unsafe_arena_set_allocated_slide_transition(
    ::KNSOS::SpecTransitionAttributesArchive* slide_transition) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(slide_transition_);
  }
  slide_transition_ = slide_transition;
  if (slide_transition) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.SlideStylePropertyChangeSetArchive.slide_transition)
}
inline ::KNSOS::SpecTransitionAttributesArchive* SlideStylePropertyChangeSetArchive::release_slide_transition() {
  _has_bits_[0] &= ~0x00000002u;
  ::KNSOS::SpecTransitionAttributesArchive* temp = slide_transition_;
  slide_transition_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::KNSOS::SpecTransitionAttributesArchive* SlideStylePropertyChangeSetArchive::unsafe_arena_release_slide_transition() {
  // @@protoc_insertion_point(field_release:KNSOS.SlideStylePropertyChangeSetArchive.slide_transition)
  _has_bits_[0] &= ~0x00000002u;
  ::KNSOS::SpecTransitionAttributesArchive* temp = slide_transition_;
  slide_transition_ = nullptr;
  return temp;
}
inline ::KNSOS::SpecTransitionAttributesArchive* SlideStylePropertyChangeSetArchive::_internal_mutable_slide_transition() {
  _has_bits_[0] |= 0x00000002u;
  if (slide_transition_ == nullptr) {
    auto* p = CreateMaybeMessage<::KNSOS::SpecTransitionAttributesArchive>(GetArenaForAllocation());
    slide_transition_ = p;
  }
  return slide_transition_;
}
inline ::KNSOS::SpecTransitionAttributesArchive* SlideStylePropertyChangeSetArchive::mutable_slide_transition() {
  ::KNSOS::SpecTransitionAttributesArchive* _msg = _internal_mutable_slide_transition();
  // @@protoc_insertion_point(field_mutable:KNSOS.SlideStylePropertyChangeSetArchive.slide_transition)
  return _msg;
}
inline void SlideStylePropertyChangeSetArchive::set_allocated_slide_transition(::KNSOS::SpecTransitionAttributesArchive* slide_transition) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete slide_transition_;
  }
  if (slide_transition) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::KNSOS::SpecTransitionAttributesArchive>::GetOwningArena(slide_transition);
    if (message_arena != submessage_arena) {
      slide_transition = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, slide_transition, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  slide_transition_ = slide_transition;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.SlideStylePropertyChangeSetArchive.slide_transition)
}

// optional bool slide_transition_undefined = 4;
inline bool SlideStylePropertyChangeSetArchive::_internal_has_slide_transition_undefined() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool SlideStylePropertyChangeSetArchive::has_slide_transition_undefined() const {
  return _internal_has_slide_transition_undefined();
}
inline void SlideStylePropertyChangeSetArchive::clear_slide_transition_undefined() {
  slide_transition_undefined_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool SlideStylePropertyChangeSetArchive::_internal_slide_transition_undefined() const {
  return slide_transition_undefined_;
}
inline bool SlideStylePropertyChangeSetArchive::slide_transition_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.SlideStylePropertyChangeSetArchive.slide_transition_undefined)
  return _internal_slide_transition_undefined();
}
inline void SlideStylePropertyChangeSetArchive::_internal_set_slide_transition_undefined(bool value) {
  _has_bits_[0] |= 0x00000008u;
  slide_transition_undefined_ = value;
}
inline void SlideStylePropertyChangeSetArchive::set_slide_transition_undefined(bool value) {
  _internal_set_slide_transition_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.SlideStylePropertyChangeSetArchive.slide_transition_undefined)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace KNSOS

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_KNArchives_2esos_2eproto
